{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(cat:*)",
      "Bash(sed:*)",
      "Bash(findstr:*)",
      "Bash(powershell:*)",
      "Bash(del parse_tables.ps1)",
      "Bash(Remove-Item parse_tables.ps1)",
      "Bash(del temp_duplicate_check.py)",
      "Bash(rm:*)",
      "Bash(python:*)",
      "Bash(dir:*)",
      "Bash(# Extract all SQL from architecture.md starting from ENUM DEFINITIONS\ncd \"\"C:\\Users\\bob\\github-thseitz\\fwd-inh\\docs\"\"\ngrep -n \"\"^-- ================================================================$\"\" architecture.md | head -1)",
      "Bash(node:*)",
      "Bash(cp:*)",
      "Bash(npm start)",
      "Bash(npm start:*)",
      "Bash(npm run build:*)",
      "Bash(psql:*)",
      "Bash(npm run:*)",
      "Bash(mv:*)",
      "Bash(set PGPASSWORD=FGt!3reGTdt5BG!)",
      "Bash(awk:*)",
      "mcp__serena__list_dir",
      "mcp__serena__find_file",
      "mcp__serena__write_memory",
      "mcp__postgres__query",
      "Bash(npx tsx:*)",
      "mcp__serena__search_for_pattern",
      "mcp__serena__find_symbol",
      "mcp__postgres__execute",
      "Bash(npm test)",
      "Bash(timeout:*)",
      "Bash(git add:*)",
      "mcp__serena__get_symbols_overview",
      "Bash(npx create-nx-workspace:*)",
      "Bash(npx nx:*)",
      "Bash(npm install)",
      "Bash(mkdir:*)",
      "Bash(docker-compose:*)",
      "Bash(telnet:*)",
      "Bash(npx pgtyped:*)",
      "Bash(find:*)",
      "Bash(npm install:*)",
      "Bash(docker run:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(docker logs:*)",
      "Bash(docker exec:*)",
      "Bash(curl:*)",
      "Bash(nx serve:*)",
      "Bash(docker system prune:*)",
      "Bash(docker build:*)",
      "Bash(docker volume prune:*)",
      "Bash(docker volume rm:*)",
      "Bash(docker inspect:*)",
      "Bash(sc query:*)",
      "Read(/C:\\Program Files\\PostgreSQL\\17\\data/**)",
      "mcp__playwright__browser_navigate",
      "Bash(nx build:*)",
      "Bash(docker cp:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "serena"
  ]
}
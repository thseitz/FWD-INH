{
  "openapi": "3.0.3",
  "info": {
    "title": "Platform API",
    "description": "# Overview\nThe Platform API allows you to manage Profiles and their data in your Quiltt Environment, and\nis only appropriate for server-to-server use.\n\n# API Host\n<pre><code>https://api.quiltt.io</code></pre>\n\nAll Platform API requests must be made to the core API server.\n\n# Authentication\n<pre><code>Authorization: Bearer {API_KEY_SECRET}</code></pre>\n\nAll Platform API endpoints require a valid API Key secret to be passed in as a bearer\ntoken in the Authorization header.\n\nYou can access your API Keys in the\n[Quiltt Dashboard](https://dashboard.quiltt.dev/api-keys).\n\n# Errors\nUnsuccessful requests to this API will return a JSON object to help troubleshoot what went wrong.\n\n### StandardError\nA generic error with troubleshooting instructions.\n\nReturned with all `4xx` or `5xx` HTTP status codes, except `422` errors on some REST endpoints.\n<SchemaDefinition schemaRef=\"#/components/schemas/RestError\" />\n\n### ValidationErrors\nOne or more correctable errors encountered when attempting to create or update a record.\n\nReturned with a `422` HTTP status code.\n<SchemaDefinition schemaRef=\"#/components/schemas/ValidationErrors\" />\n",
    "version": "2025-04-01"
  },
  "servers": [
    {
      "description": "Platform API server",
      "url": "https://api.quiltt.io"
    }
  ],
  "paths": {
    "/v1/accounts/{accountId}/ach_numbers": {
      "get": {
        "summary": "Retrieve ACH Numbers",
        "tags": [
          "Account Numbers"
        ],
        "description": "Retrieves ACH routing and account numbers associated with a connected account.\n\nThese numbers can be sent to a payment processor to enable direct deposits and withdrawals\nfrom the account.\n\nPlease note that for the numbers be available, the account holder must have verified the account\nthrough a Connector enabled with the Account Verification product. To be notified when the numbers\nare available, subscribe to the `account.verified` webhook event.\n",
        "security": [
          {
            "APISecretBearerAuth": [],
            "ProcessorTokenBasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "The ID of the Account.",
              "format": "global_id-v1",
              "readOnly": true,
              "title": "Account ID",
              "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "example": {
                  "accountId": "acct_16FvuCM1Pg8NzjwuN9qndzm",
                  "number": "30930901",
                  "routing": "021000010"
                },
                "schema": {
                  "$ref": "#/components/schemas/ACHNumbers"
                }
              }
            }
          },
          "400": {
            "description": "Unsupported Account kind",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad Request",
                  "instruction": "Unsupported account kind: LOAN. Try a DEPOSITORY account."
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "403": {
            "description": "Connection needs to be reconnected",
            "content": {
              "application/json": {
                "example": {
                  "message": "Forbidden",
                  "instruction": "Connection is not enabled with the `ACCOUNT_NUMBERS` product."
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain the ID of a verified Account?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/accounts/{accountId}/balances/refresh": {
      "post": {
        "summary": "Trigger a Balance Refresh",
        "tags": [
          "Balances"
        ],
        "description": "Triggers a Balance Refresh for a given Account.\n\nSucessful requests trigger a balance refresh from the Connection provider and return a `202 Accepted` response.\n\nAs soon as Quiltt obtains the latest balance, you will receive the `balance.created` webhook. The\nnew Balance record will have the `REFRESH` source and be available in GraphQL.\n",
        "security": [
          {
            "APISecretBearerAuth": [],
            "ProcessorTokenBasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "The ID of the Account.",
              "format": "global_id-v1",
              "readOnly": true,
              "title": "Account ID",
              "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Successful request"
          },
          "403": {
            "description": "Connection disconnected or in an error state",
            "content": {
              "application/json": {
                "example": {
                  "message": "Forbidden",
                  "instruction": "Account does not belong to an active Connection."
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain the ID of a connected Account?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "429": {
            "description": "Provider rate limit exceeded",
            "content": {
              "application/json": {
                "example": {
                  "message": "Too Many Requests",
                  "instruction": "The Connection provider's rate limit has been exceeded. Please try again later."
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profiles/{profileId}/connections/{connectionId}/export": {
      "get": {
        "summary": "Export Connection Details",
        "tags": [
          "Connections"
        ],
        "description": "Exports the Connection details needed to make direct API calls to the underlying provider.\n\nContact Quiltt Support to enable this feature.\n",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "The ID of the Profile.",
              "format": "global_id-v1",
              "readOnly": true,
              "title": "Profile ID",
              "example": "p_1hyoxpVVFib1HngGwKAzIr"
            },
            "required": true
          },
          {
            "name": "connectionId",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "The ID of the Connection.",
              "format": "global_id-v1",
              "readOnly": true,
              "title": "Connection ID",
              "example": "conn_14TJiFDKRJlPiBHuukUIlXZ"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "id": "conn_12xjHzSngHp5gmxtb8LgpR",
                  "provider": "MX",
                  "profileId": "p_12wKKn68cfbRE8EQYDzryn",
                  "apiKey": [
                    "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                    "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ConnectionExport"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Authenticated",
                  "instruction": "Are you sending a valid API Key secret in the `Authorization` header?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "message": "Forbidden",
                  "instruction": "Contact Quiltt Support to enable this feature."
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "404": {
            "description": "Connection not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain the ID of an active Connection belonging to this Profile?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profiles/{profileId}/connections/import/plaid": {
      "post": {
        "summary": "Import from Plaid",
        "tags": [
          "Connections"
        ],
        "description": "Imports a Connection from an existing Plaid record.\n",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "The ID of the Profile.",
              "format": "global_id-v1",
              "readOnly": true,
              "title": "Profile ID",
              "example": "p_1hyoxpVVFib1HngGwKAzIr"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully imported",
            "content": {
              "application/json": {
                "example": {
                  "id": "conn_12xjHzSngHp5gmxtb8LgpR",
                  "provider": "PLAID",
                  "features": [
                    "ACCOUNT_BALANCE_REFRESHES",
                    "ACCOUNT_BALANCES_AND_TRANSACTIONS"
                  ],
                  "products": [
                    "ACCOUNT_BALANCE_REFRESHES",
                    "ACCOUNT_BALANCES_AND_TRANSACTIONS"
                  ],
                  "status": "INITIALIZING",
                  "metadata": null,
                  "createdAt": "2024-08-26T02:04:37Z",
                  "updatedAt": "2024-08-26T02:04:37Z",
                  "at": "2024-08-26T02:04:37Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Connection"
                }
              }
            }
          },
          "400": {
            "description": "Unable to import errored Connection",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad Request",
                  "instruction": "Cannot import Plaid Item in an error state"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "403": {
            "description": "Integration not enabled",
            "content": {
              "application/json": {
                "example": {
                  "message": "Forbidden",
                  "instruction": "Is the Plaid integration enabled in this environment?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does Profile with ID `not-found` exist in this Environment?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "409": {
            "description": "Connection already exists",
            "content": {
              "application/json": {
                "example": {
                  "message": "Conflict",
                  "instruction": "Connection with this `accessToken` already exists."
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Options to import a Connection from Plaid.",
                "title": "ConnectionImportPlaidRequest",
                "required": [
                  "accessToken"
                ],
                "properties": {
                  "accessToken": {
                    "type": "string",
                    "description": "The token to import from Plaid.",
                    "example": "access-sandbox-560d5d7e-b4c4-4b13-8e39-1cb9370051d3"
                  },
                  "externallyManaged": {
                    "type": "boolean",
                    "description": "Specifies whether this Connection is managed by an external system.\n\nWhen a Connection is imported as externally-managed, Quiltt will sync it,\nbut disconnecting it will not revoke access from the upstream provider.",
                    "example": true,
                    "default": false
                  },
                  "migrateWebhook": {
                    "type": "boolean",
                    "description": "Whether to migrate the webhook registered with Plaid to be consumed by Quiltt.\n\nWhen set to `false`, Quiltt will preserve the existing webhook\nregistered with Plaid and the Connection will sync less frequently.",
                    "example": false,
                    "default": true
                  },
                  "products": {
                    "type": "array",
                    "description": "The authorized Plaid products to sync on the Connection.\n\nThese products will be added to the products Quiltt can detect automatically. Note that\n`balance`, `investments` and `liabilities` are always detected automatically.",
                    "items": {
                      "type": "string",
                      "description": "Represents a product of a Connection.\n\n`ACCOUNT_BALANCE_REFRESHES` - The ability to trigger live refreshes of account balances.\n\n\n`ACCOUNT_BALANCES_AND_TRANSACTIONS` - Access to Account Balances and Transaction with up to 24 months of history, depending on the provider.\n\nNote that MX typically provides 3-4 months of history and accessing 24 months\nof history is a \"premium\" product that incurs a one-time per-Connection fee.\nYou can configure whether Quiltt should attempt to sync full history on the MX\nIntegration page in the Dashboard\n\n\n`ACCOUNT_NUMBERS` - Access to verified account numbers to support money movement operations.\n\nWhen this product is provisioned, eligible accounts will be enabled for the\n[Account Numbers](https://www.quiltt.dev/api-reference/platform#tag/Account-Numbers)\nand [Processor Tokens](https://www.quiltt.dev/api-reference/platform#tag/Processor-Tokens)\nendpoints.\n\n\n`ACCOUNT_OWNERS` - Access to account-holder information to validate identity and account ownership.\n\nWhen this product is provisioned, account-holder information will become available\nvia [Remote Data](https://www.quiltt.dev/api/remote-data).\n\n\n`ACCOUNT_STATEMENTS` - Access to historical account statements in PDF format.\n\n\n`INVESTMENTS` - Access to account investments holdings and transactions.\n\nNote that for some providers like MX, this product may be provisioned automatically.\n\n\n`LIABILITIES` - Access to detailed account liabilities data.\n\nNote that for some providers like MX, this product may be provisioned automatically.\n\n",
                      "enum": [
                        "auth",
                        "identity",
                        "transactions"
                      ]
                    },
                    "example": [
                      "auth",
                      "transactions"
                    ]
                  },
                  "institutionId": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "0": {
                  "summary": "Import a Plaid Item",
                  "value": {
                    "acccesToken": "access-sandbox-560d5d7e-b4c4-4b13-8e39-1cb9370051d3",
                    "externallyManaged": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/institutions": {
      "get": {
        "summary": "Search Institutions by Routing Number",
        "tags": [
          "Institutions"
        ],
        "description": "Retrieves Institutions based on US Fed Routing Numbers.\n",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "routingNumber",
            "description": "The routing number to look up",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "Chase",
                    "logoUrl": "https://cdn.quiltt.io/institutions/inst_15vzU43JrPuWZgSOnCxRa3N/logo.png"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Institution"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad Request",
                  "instruction": "Are you supplying a valid 9-digit Routing number?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/accounts/{accountId}/processor_tokens": {
      "post": {
        "summary": "Create a Processor Token",
        "tags": [
          "Processor Tokens"
        ],
        "description": "Generates a Processor Token for a given account to pass to a 3rd party payment or data processor.\n\nPlease double check that your preferred Processor is configured to consume the token from the token issuer.\n",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "The ID of the Account.",
              "format": "global_id-v1",
              "readOnly": true,
              "title": "Account ID",
              "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "example": {
                  "token": "processor-sandbox-d7f1b455-9ed2-402a-8fbd-10012bd5466e",
                  "account": {
                    "id": "acct_16FvuCM1Pg8NzjwuN9qndzm",
                    "type": "SPENDING"
                  },
                  "environment": {
                    "id": "env_12zvI6ZO3hPKennfrRy2Ke",
                    "mode": "TEST"
                  },
                  "issuer": "PLAID",
                  "processor": "SILA_MONEY"
                },
                "schema": {
                  "$ref": "#/components/schemas/ProcessorToken"
                }
              }
            }
          },
          "400": {
            "description": "Missing Issuer",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad Request",
                  "instruction": "`issuer` is missing or the value is empty"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "403": {
            "description": "Connection needs to be reconnected",
            "content": {
              "application/json": {
                "example": {
                  "message": "Forbidden",
                  "instruction": "Account does not belong to an active Connection."
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain the ID of a connected Account?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "422": {
            "description": "Invalid Processor",
            "content": {
              "application/json": {
                "example": {
                  "processor": [
                    "Processor \"BAD_PROCESSOR\" is not supported"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrors"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "issuer": {
                    "type": "string",
                    "description": "The issuer of the Processor Token.\n\n`QUILTT` - Quiltt\n\n`MX` - MX\n\n`PLAID` - Plaid\n",
                    "enum": [
                      "QUILTT",
                      "MX",
                      "PLAID"
                    ],
                    "example": "QUILTT"
                  },
                  "processor": {
                    "type": "string",
                    "description": "The processor that will be receiving the Token.",
                    "enum": [
                      "ACHQ",
                      "ADP_ROLL",
                      "ADYEN",
                      "ALLOY",
                      "ALPACA",
                      "ANSA",
                      "APEX_CLEARING",
                      "ASTRA",
                      "ATOMIC",
                      "BAKKT",
                      "BLOOM_CREDIT",
                      "BOND",
                      "BOOM",
                      "BRALE",
                      "CHECK",
                      "CHECKBOOK",
                      "CHECKOUT",
                      "CIRCLE",
                      "DRIVEWEALTH",
                      "DWOLLA",
                      "ESUSU",
                      "FINIX",
                      "FORTRESS_TRUST",
                      "GALILEO",
                      "GEMINI",
                      "GUSTO",
                      "HIGHNOTE",
                      "I2C",
                      "KNOT",
                      "LAYER",
                      "LITHIC",
                      "LOANPRO",
                      "MARQETA",
                      "MOCK",
                      "MODERN_TREASURY",
                      "MOOV",
                      "NUVEI",
                      "OCROLUS",
                      "PAYNOTE",
                      "RISKIFIED",
                      "RIZE",
                      "SARDINE",
                      "SCRIBEUP",
                      "SFOX",
                      "SILA",
                      "SILA_MONEY",
                      "SOLID",
                      "STAKE",
                      "STRADDLE",
                      "STRIPE",
                      "SVB_API",
                      "TABA_PAY",
                      "TEAL",
                      "TREASURY_PRIME",
                      "UNIT",
                      "UTB",
                      "VESTA",
                      "VOPAY",
                      "WEDBUSH",
                      "WEPAY",
                      "WYRE",
                      "ZERO_HASH",
                      "ZUM_RAILS"
                    ],
                    "example": "STRADDLE"
                  }
                }
              },
              "examples": {
                "0": {
                  "summary": "Request a Sila processor token",
                  "value": {
                    "processor": "SILA_MONEY"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/profiles": {
      "post": {
        "summary": "Create a Profile",
        "operationId": "createProfile",
        "tags": [
          "Profiles"
        ],
        "description": "Creates a Profile with supplied attributes",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "id": "p_12VnSaRRxyP12Sl9rLZg8n1",
                  "uuid": "52909e05-e1cb-4e45-b273-2b7b5d1f9bff",
                  "metadata": null,
                  "email": "tardis@example.com",
                  "phone": "+15089883522",
                  "name": "The Doctor",
                  "names": null,
                  "dateOfBirth": "1970-01-01",
                  "address": null,
                  "createdAt": "2024-07-26T02:04:37Z",
                  "updatedAt": "2024-07-26T02:04:37Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "message": "Forbidden",
                  "instruction": "You have reached the maximum number of Profiles for this Environment. Delete unused Profiles, use another Environment, or contact Quiltt Support."
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "email": [
                    "Email is not a valid email address"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrors"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileCreateRequest"
              },
              "examples": {
                "0": {
                  "summary": "Create a Profile",
                  "value": {
                    "email": "tardis@example.com",
                    "name": "The Doctor",
                    "dateOfBirth": "1970-01-01",
                    "phone": "+16358126489"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all Profiles",
        "operationId": "getProfiles",
        "tags": [
          "Profiles"
        ],
        "description": "Returns a paginated list of all Profiles in your environment",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "p_111sXqFUjvlL5jQZ8gsf9KI",
                    "uuid": "21da60c9-a6a8-453b-bb0d-54fc4ba57866",
                    "metadata": null,
                    "email": "tardis@example.com",
                    "phone": "+16358126489",
                    "name": "Tardis",
                    "names": null,
                    "dateOfBirth": "1970-01-01",
                    "address": null,
                    "createdAt": "2024-08-26T02:06:41Z",
                    "updatedAt": "2024-08-26T02:06:41Z"
                  },
                  {
                    "id": "p_15PGCp4JWVzjkN5hjCO1vm0",
                    "uuid": "b1abea01-98c1-45e9-9e70-d73d3a35e33c",
                    "metadata": null,
                    "email": "the_doctor@example.com",
                    "phone": "+15089883522",
                    "name": "The Doctor",
                    "names": null,
                    "dateOfBirth": "1980-05-21",
                    "address": null,
                    "createdAt": "2024-07-26T02:04:37Z",
                    "updatedAt": "2024-07-26T02:04:37Z"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Profile"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Authenticated",
                  "instruction": "Are you sending a valid API Key secret in the `Authorization` header?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profiles/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "oneOf": [
              {
                "type": "string",
                "description": "The ID of the Profile.",
                "format": "global_id-v1",
                "readOnly": true,
                "title": "Profile ID",
                "example": "p_1hyoxpVVFib1HngGwKAzIr"
              },
              {
                "type": "string",
                "description": "The UUID of the Profile.",
                "format": "uuid",
                "readOnly": true,
                "title": "Profile UUID",
                "example": "174ec567-2492-4498-a706-504a79437235"
              }
            ]
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve a Profile",
        "operationId": "getProfileById",
        "tags": [
          "Profiles"
        ],
        "description": "Retrieves a Profile by its ID",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "id": "p_1hyoxpVVFib1HngGwKAzIr",
                  "uuid": "174ec567-2492-4498-a706-504a79437235",
                  "metadata": {
                    "favoriteMode": "plaid"
                  },
                  "email": "elon@example.com",
                  "phone": "+12125550180",
                  "name": "Elon Musk",
                  "names": null,
                  "dateOfBirth": null,
                  "address": null,
                  "createdAt": "2024-09-01T21:41:44Z",
                  "updatedAt": "2024-09-01T21:41:44Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does Profile with ID `bad_id` exist in this Environment?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a Profile",
        "operationId": "updateProfile",
        "tags": [
          "Profiles"
        ],
        "description": "Updates Profile attributes",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "id": "p_1hyoxpVVFib1HngGwKAzIr",
                  "uuid": "174ec567-2492-4498-a706-504a79437235",
                  "metadata": {
                    "favoriteMode": "ludicrous"
                  },
                  "email": "new_email_who_dis@example.com",
                  "phone": "+12125550180",
                  "name": "Elon Musk",
                  "names": null,
                  "dateOfBirth": null,
                  "address": null,
                  "createdAt": "2024-09-01T21:41:44Z",
                  "updatedAt": "2024-09-07T21:59:01Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "email": [
                    "Email is not a valid email address"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrors"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdateRequest"
              },
              "examples": {
                "0": {
                  "summary": "Update A Profile",
                  "value": {
                    "email": "new_email_who_dis@example.com",
                    "metadata": {
                      "favoriteMode": "ludicrous"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Profile",
        "operationId": "deleteProfile",
        "tags": [
          "Profiles"
        ],
        "description": "Deletes a Profile and its associated data",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/v1/remote/akoya/connections": {
      "get": {
        "summary": "List all Connections with Akoya Data",
        "description": "Returns a paginated list of Connections with Akoya Data",
        "tags": [
          "Akoya"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "connectionId": "conn_12wlV5QoDKCiU1vWX5fqL7",
                    "profileId": "p_12srEQlGK2nFitCKw0kIJu"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteConnections"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/akoya/connections/{connectionId}": {
      "parameters": [
        {
          "name": "connectionId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Connection.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Connection ID",
            "example": "conn_14TJiFDKRJlPiBHuukUIlXZ"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Akoya Connection Data",
        "description": "Retrieve Akoya Data by Connection ID",
        "tags": [
          "Akoya"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "connectionId": "conn_12wlV5QoDKCiU1vWX5fqL7",
                  "profileId": "p_12srEQlGK2nFitCKw0kIJu",
                  "type": "AKOYA",
                  "documents": {
                    "products.ddp.akoya.com": {
                      "/token": {
                        "id": "mikomo>CgltaWtvbW9fMTQSBm1pa29tbw",
                        "body": {
                          "aud": [
                            "7fe3efed-3de2-46e9-876a-98ce862d1ff9"
                          ],
                          "exp": 1710946240,
                          "iat": 1710859840,
                          "iss": "https://sandbox-sts.ddp.akoya.com",
                          "jti": "aef0f7a9-ae0a-436a-8532-8ee6699daa33",
                          "rat": 1710859793,
                          "sid": "dde00f89-37e3-469a-b712-66e9d5682524",
                          "sub": "CgltaWtvbW9fMTQSBm1pa29tbw",
                          "name": "mikomo_14",
                          "atHash": "6HjbSSkHMIRC5p6guYv-Xg",
                          "accounts": [
                            "e0f0d28a24c248dcbaad05d78fbabb9e",
                            "f9cd9a90a0504d8fbf2995eb980c25fb"
                          ],
                          "products": [
                            "account_info",
                            "balances",
                            "customers",
                            "investments",
                            "payments",
                            "statements",
                            "transactions"
                          ],
                          "authTime": 1710859834,
                          "connectorId": "mikomo",
                          "recipientId": "quiltt"
                        },
                        "timestamp": "2024-06-20T18:29:12Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemoteAkoyaConnection"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/akoya/accounts": {
      "get": {
        "summary": "List all Accounts with Akoya Data",
        "description": "Returns a paginated list of Accounts with Akoya Data",
        "tags": [
          "Akoya"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "accountId": "acct_12wlV5ctvqmh1l5d0xSkYw",
                    "profileId": "p_12srEQlGK2nFitCKw0kIJu"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteAccounts"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/akoya/accounts/{accountId}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Account.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Account ID",
            "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Account data",
        "description": "Retrieve Akoya Data by Account ID.",
        "tags": [
          "Akoya"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "accountId": "acct_12wlV5ctvqmh1l5d0xSkYw",
                  "profileId": "p_12srEQlGK2nFitCKw0kIJu",
                  "type": "AKOYA",
                  "documents": {
                    "products.ddp.akoya.com": {
                      "/accounts-info/v2/{provider_id}": {
                        "id": "e0f0d28a24c248dcbaad05d78fbabb9e",
                        "body": {
                          "depositAccount": {
                            "status": "OPEN",
                            "currency": {
                              "currencyCode": "USD"
                            },
                            "accountId": "e0f0d28a24c248dcbaad05d78fbabb9e",
                            "accountType": "CHECKING",
                            "description": "REGULAR CHECKING",
                            "productName": "REGULAR CHECKING",
                            "accountNumberDisplay": "***2771"
                          }
                        },
                        "timestamp": "2024-06-20T18:29:12Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemoteAkoyaAccount"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/akoya/transactions": {
      "get": {
        "summary": "List all Transactions with Akoya Data",
        "description": "Returns a paginated list of Transactions with Akoya Data",
        "tags": [
          "Akoya"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "transactionId": "txn_12wlV5nu0E3m6D0yj9elBi",
                    "profileId": "p_12srEQlGK2nFitCKw0kIJu"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteTransactions"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/akoya/transactions/{transactionId}": {
      "parameters": [
        {
          "name": "transactionId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Transaction Data",
        "description": "Retrieve Akoya Data by Transaction ID",
        "tags": [
          "Akoya"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "transactionId": "txn_12wlV5nu0E3m6D0yj9elBi",
                  "profileId": "p_12srEQlGK2nFitCKw0kIJu",
                  "type": "AKOYA",
                  "documents": {
                    "products.ddp.akoya.com": {
                      "/transactions/v2/{provider_id}/{account_id}": {
                        "id": "cf5cf2002c6d7664a510569d35d19794",
                        "body": {
                          "depositTransaction": {
                            "amount": 10.99,
                            "status": "POSTED",
                            "accountId": "e8dcbaa0f05d780d28a24c24dfbabb9e",
                            "description": "VISA DDA PUR AP 469216     GOOGLE  YOUTUBE MUSIC       G CO HELPPAY  * CA ",
                            "debitCreditMemo": "DEBIT",
                            "postedTimestamp": "2023-11-06T00:00:00Z",
                            "transactionType": "DEBIT",
                            "transactionTimestamp": "2023-11-06T00:00:00Z"
                          }
                        },
                        "timestamp": "2024-06-20T18:29:12Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemoteAkoyaTransaction"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/akoya/holdings": {
      "get": {
        "summary": "List all Holdings with Akoya Data",
        "description": "Returns a paginated list of Holdings with Akoya Data",
        "tags": [
          "Akoya"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "holdingId": "hld_12wlV5yiTRAbHYT7elGIej",
                    "profileId": "p_12srEQlGK2nFitCKw0kIJu"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteHoldings"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/akoya/holdings/{holdingId}": {
      "parameters": [
        {
          "name": "holdingId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Holding.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Holding ID",
            "example": "hld_12Hz9Dz7vEvM9AuljYvhmPc"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Holding Data",
        "description": "Retrieve Akoya Data by Holding ID",
        "tags": [
          "Akoya"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "holdingId": "hld_12wlV5yiTRAbHYT7elGIej",
                  "profileId": "p_12srEQlGK2nFitCKw0kIJu",
                  "type": "AKOYA",
                  "documents": {
                    "products.ddp.akoya.com": {
                      "/accounts/v2/{provider_id}?accountIds={account_id}": {
                        "id": "33fd7721616c67159249e8686e1ecf91",
                        "body": {
                          "units": 396449,
                          "symbol": "IBM",
                          "securityId": "459200101",
                          "averageCost": false,
                          "cashAccount": false,
                          "marketValue": 54587062.81,
                          "positionType": "LONG",
                          "securityIdType": "CUSIP"
                        },
                        "timestamp": "2024-06-20T18:29:12Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemoteAkoyaHolding"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/enrichment/sync": {
      "post": {
        "summary": "Synchronously Enrich Transactions",
        "tags": [
          "Enrichment"
        ],
        "description": "This endpoint is used to perform on-demand enrichment of transactions from one of Quiltt's enrichment providers.\n\nNote that transactions from connected accounts are enriched automatically, with Enrichment responses made\navailable via Transaction [Remote Data](https://quiltt.dev/api/remote-data).\n\nIf your Transaction data provider is not supported, use the `GENERIC` provider and format\nyour payload to Quiltt's schema.\n",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "example": {
                  "profileId": "p_12wKKn68cfbRE8EQYDzryn",
                  "type": "ENRICHMENT",
                  "documents": {
                    "findmoney.fingoal.com": {
                      "/v3/cleanup": {
                        "body": {
                          "enrichedTransactions": [
                            {
                              "type": "DEPOSITS_CREDITS",
                              "subType": "CREDIT",
                              "container": "bank",
                              "highLevelCategoryId": 10000015,
                              "categoryId": 28,
                              "isPhysical": false,
                              "merchantType": "OTHERS",
                              "simpleDescription": "EXT-XFER Sq. Nbr.: XX3456",
                              "detailCategoryId": 1170,
                              "category": "Transfers",
                              "amountnum": 1975,
                              "originalDescription": "EXT-XFER Sq. Nbr.: 123456",
                              "accountid": "p_12wKKn68cfbRE8EQYDzryn:CHECKING",
                              "date": "2017-11-27T00:00:00.000Z",
                              "receiptDate": "2024-11-19T13:10:46.993Z",
                              "transactionid": "ttx_113333abcd",
                              "uid": "p_12wKKn68cfbRE8EQYDzryn",
                              "clientId": "4UjJ3b5Hak2q5b65avLSAu3nhkVGmtC1",
                              "requestId": "2d5390c6-1958-492d-b5ed-449c4fe5aa9a",
                              "settlement": "credit",
                              "guid": "9945af75-a94e-4f2f-ac33-6e74cc5b8715",
                              "merchantLogoURL": "https://links.fingoal.com/Transfers",
                              "transactionTags": [],
                              "amount": 1975
                            }
                          ],
                          "failedTransactions": []
                        },
                        "timestamp": "2024-04-23T15:34:20Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemoteEnrichment"
                }
              }
            }
          },
          "202": {
            "description": "Request was valid but should be retried",
            "content": {
              "application/json": {
                "example": {
                  "profileId": "p_12wKKn68cfbRE8EQYDzryn",
                  "type": "ENRICHMENT",
                  "documents": {
                    "findmoney.fingoal.com": {
                      "/v3/cleanup": {
                        "requestId": "9341760b-8364-48b6-a9f2-085a5a15bb36"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemoteEnrichment"
                }
              }
            }
          },
          "400": {
            "description": "Provider is not supported",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad Request",
                  "instruction": "Provider unknown is not supported at this time"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          },
          "422": {
            "description": "There was an issue with the request params",
            "content": {
              "application/json": {
                "example": {
                  "payload": [
                    "`payload` is not a supported attribute or is supplying an invalid data type"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrors"
                }
              }
            }
          },
          "502": {
            "description": "There is an upstream error with the provider",
            "content": {
              "application/json": {
                "example": {
                  "message": "Bad Gateway",
                  "instruction": "Upstream provider is experiencing an issue. Please try again later.",
                  "errorId": "484f86ab-b345-4a90-ba7e-265e4ea7a2e0"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteEnrichmentRequest"
              },
              "examples": {
                "0": {
                  "summary": "Enrich Treasury Prime Transactions",
                  "value": {
                    "profileId": "p_12wKKn68cfbRE8EQYDzryn",
                    "accountType": "CHECKING",
                    "provider": "TREASURY_PRIME",
                    "payload": {
                      "data": [
                        {
                          "ach_id": "ach_1234567",
                          "amount": "1975.00",
                          "balance": "256147.27",
                          "billpay_payment_id": null,
                          "book_id": null,
                          "card_id": null,
                          "category": null,
                          "check_id": null,
                          "check_number": null,
                          "date": "2017-11-27",
                          "desc": "EXT-XFER Sq. Nbr.: 123456",
                          "extended_timestamp": "2017-11-27T01:02:03Z",
                          "extended_timestamp_precise": "2017-11-27T01:02:03.300Z",
                          "fingerprint": "2k7vxetham4i1v3ceb5vs6",
                          "id": "ttx_113333abcd",
                          "incoming_ach_id": null,
                          "incoming_wire": null,
                          "incoming_wire_id": null,
                          "issued_check_id": null,
                          "network_transfer_id": null,
                          "related_transfer_ids": [],
                          "summary": "ACME CORP VENDOR PMT",
                          "trace_id": null,
                          "type": "deposit",
                          "type_source": null,
                          "userdata": null,
                          "wire": null,
                          "wire_id": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/fingoal/profiles": {
      "get": {
        "summary": "List all Profiles with Fingoal Data",
        "description": "Returns a paginated list of Profiles that have Fingoal Data",
        "tags": [
          "Fingoal"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "profileId": "p_12wKKn68cfbRE8EQYDzryn",
                    "uuid": "018ef74e-5aa1-7684-86ca-d2c0a4447bb5"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteProfiles"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/fingoal/profiles/{profileId}": {
      "parameters": [
        {
          "name": "profileId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Profile Data",
        "description": "Retrieve Fingoal Data by Profile ID",
        "tags": [
          "Fingoal"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "profileId": "p_12wKKn68cfbRE8EQYDzryn",
                  "uuid": "018ef74e-5aa1-7684-86ca-d2c0a4447bb5",
                  "type": "FINGOAL",
                  "documents": {
                    "findmoney.fingoal.com": {
                      "/v3/users/{user_id}": {
                        "id": "p_13hoVGhoFdnJNoVUSDkcV4L",
                        "body": {
                          "id": "82840",
                          "uid": "p_13hoVGhoFdnJNoVUSDkcV4L",
                          "tags": [
                            "Eats Out Regularly"
                          ],
                          "clientId": "<FINGOAL_CLIENT_ID>",
                          "uniqueId": "4UjJ2q5b65avLSAu3nhkVG3b5HakmtC1p_13hoVGhoFdnJNoVUSDkcV4L",
                          "subtenantId": null,
                          "lifetimeSavings": null,
                          "registrationDate": null,
                          "totaltransactions": 6,
                          "transactionsSinceLastUpdate": 6
                        },
                        "timestamp": "2024-06-20T18:27:49Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemoteFingoalProfile"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/fingoal/transactions": {
      "get": {
        "summary": "List all Transactions with Fingoal Data",
        "description": "Returns a paginated list of Transactions that have Fingoal Data",
        "tags": [
          "Fingoal"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "transactionId": "txn_12wKKn7HytyW8ybdF31NGo",
                    "profileId": "p_12wKKn68cfbRE8EQYDzryn"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteTransactions"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/fingoal/transactions/{transactionId}": {
      "parameters": [
        {
          "name": "transactionId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Transaction Data",
        "description": "Retrieve Fingoal Data by Transaction ID",
        "tags": [
          "Fingoal"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "transactionId": "txn_12wKKn7HytyW8ybdF31NGo",
                  "profileId": "p_12wKKn68cfbRE8EQYDzryn",
                  "type": "FINGOAL",
                  "documents": {
                    "findmoney.fingoal.com": {
                      "/v3/cleanup": {
                        "id": "ef86b762-235c-4884-92ef-aafac27a71be",
                        "body": {
                          "uid": "p_12vLvCczIXHhaKeR8mIAJm",
                          "date": "2019-08-24T00:00:00.000Z",
                          "guid": "ef86b762-235c-4884-92ef-aafac27a71be",
                          "type": "PAYMENT",
                          "amount": 60.5,
                          "category": "Travel",
                          "subType": "PAYMENT",
                          "accountid": "p_12vLvCczIXHhaKeR8mIAJm:CHECKING",
                          "amountnum": 60.5,
                          "clientId": "<FINGOAL_CLIENT_ID>",
                          "container": "bank",
                          "requestId": "e8e65df4-f4ea-40e5-b8b4-8e9183e9f451",
                          "settlement": "debit",
                          "categoryId": 23,
                          "isPhysical": false,
                          "receiptDate": "2024-09-17T16:52:13.633Z",
                          "merchantName": "Lyft",
                          "merchantType": "OTHERS",
                          "transactionid": "txn_12toleZ6UJAWjhpkmWbs6d",
                          "categoryLabel": [
                            "Transportation",
                            "Taxi and Car Services"
                          ],
                          "merchantCountry": "US",
                          "transactionTags": [
                            "Lyft Ride",
                            "Rideshare"
                          ],
                          "merchantLogoUrl": "https://links.fingoal.com/YM3sD6",
                          "detailCategoryId": 1682,
                          "simpleDescription": "Lyft",
                          "sourceMerchantId": "-M-lyft-CY-us",
                          "originalDescription": "Lyft",
                          "highLevelCategoryId": 10000011
                        },
                        "timestamp": "2024-06-20T18:27:49Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemoteFingoalTransaction"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/mx/connections": {
      "get": {
        "summary": "List all Connections with MX Data",
        "description": "Returns a paginated list of Connections with MX Data",
        "tags": [
          "MX"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "connectionId": "conn_12wKKJp0NNUezm6X54Iz4T",
                    "profileId": "p_12wKKKS3OAOaYLIJsyMPVk"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteConnections"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/mx/connections/{connectionId}": {
      "parameters": [
        {
          "name": "connectionId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Connection.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Connection ID",
            "example": "conn_14TJiFDKRJlPiBHuukUIlXZ"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve MX Connection Data",
        "description": "Retrieve MX Data by Connection ID",
        "tags": [
          "MX"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "connectionId": "conn_12wKKJp0NNUezm6X54Iz4T",
                  "profileId": "p_12wKKKS3OAOaYLIJsyMPVk",
                  "type": "MX",
                  "documents": {
                    "api.mx.com": {
                      "/users/{user_guid}/members/{member_guid}": {
                        "id": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                        "body": {
                          "id": "unique_id",
                          "guid": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                          "name": "Chase Bank",
                          "userId": "user123",
                          "isOAuth": false,
                          "metadata": "\\\"credentials_last_refreshed_at\\\": \\\"2015-10-15\\\"",
                          "userGuid": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                          "aggregatedAt": "2016-10-13T18:07:57.000Z",
                          "institutionCode": "chase",
                          "oauthWindowUri": "https://mxbank.mx.com/oauth/authorize?client_id=b8OikQ4Ep3NuSUrQ13DdvFuwpNx-qqoAsJDVAQCyLkQ&redirect_uri=https%3A%2F%2Fint-app.moneydesktop.com%2Foauth%2Fredirect_from&response_type=code&scope=openid&state=d745bd4ee6f0f9c184757f574bcc2df2",
                          "connectionStatus": "CONNECTED",
                          "isManagedByUser": false,
                          "isBeingAggregated": false,
                          "successfullyAggregatedAt": "2016-10-13T17:57:38.000Z",
                          "backgroundAggregationIsDisabled": false
                        },
                        "timestamp": "2024-06-20T18:27:46Z"
                      },
                      "/users/{user_guid}/members/{member_guid}/account_owners": {
                        "id": "0d4d37b0531f74a8978fc9f52f386e31",
                        "body": [
                          {
                            "city": "Middlesex",
                            "guid": "ACO-63dc7714-6fc0-4aa2-a069-c06cdccd1af9",
                            "email": "donnie@darko.co",
                            "phone": "555-555-5555",
                            "state": "VA",
                            "address": "123 This Way",
                            "country": "US",
                            "lastName": "Darko",
                            "userGuid": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                            "firstName": "Donnie",
                            "ownerName": "Donnie Darko",
                            "memberGuid": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                            "postalCode": "00000-0000",
                            "accountGuid": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1"
                          }
                        ],
                        "timestamp": "2024-06-20T18:27:46Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemoteMXConnection"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/mx/accounts": {
      "get": {
        "summary": "List all Accounts with MX Data",
        "description": "Returns a paginated list of Accounts with MX Data",
        "tags": [
          "MX"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "accountId": "acct_12wKKK1qaZ5EGONxkmd7CT",
                    "profileId": "p_12wKKKS3OAOaYLIJsyMPVk"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteAccounts"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/mx/accounts/{accountId}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Account.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Account ID",
            "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Account Data",
        "description": "Retrieve MX Data by Account ID",
        "tags": [
          "MX"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "accountId": "acct_12wKKK1qaZ5EGONxkmd7CT",
                  "profileId": "p_12wKKKS3OAOaYLIJsyMPVk",
                  "type": "MX",
                  "documents": {
                    "api.mx.com": {
                      "/users/{user_guid}/accounts": {
                        "id": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                        "body": {
                          "id": "1040434698",
                          "apr": 1,
                          "apy": 1,
                          "guid": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                          "name": "Test account 2",
                          "type": "SAVINGS",
                          "balance": 10000,
                          "subtype": "NONE",
                          "userId": "user123",
                          "metadata": "some metadata",
                          "nickname": "My Checking",
                          "isClosed": false,
                          "isHidden": false,
                          "isManual": false,
                          "memberId": "member123",
                          "userGuid": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                          "createdAt": "2023-07-25T17:14:46Z",
                          "maturesOn": "2015-10-13T17:57:37.000Z",
                          "startedOn": "2015-10-13T17:57:37.000Z",
                          "updatedAt": "2016-10-13T18:08:00.000Z",
                          "importedAt": "2015-10-13T17:57:37.000Z",
                          "loanAmount": 1000,
                          "memberGuid": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                          "cashBalance": 1000,
                          "creditLimit": 100,
                          "insuredName": "Tommy Shelby",
                          "lastPayment": 100,
                          "currencyCode": "USD",
                          "deathBenefit": 1000,
                          "interestRate": 1,
                          "propertyType": "VEHICLE",
                          "accountNumber": "5366",
                          "holdingsValue": 1000,
                          "marginBalance": 1000,
                          "payOutAmount": 10,
                          "paymentDueAt": "2015-10-13T17:57:37.000Z",
                          "payoffBalance": 10,
                          "premiumAmount": 1,
                          "routingNumber": "68899990000000",
                          "lastPaymentAt": "2023-07-25T17:14:46Z",
                          "minimumBalance": 100,
                          "minimumPayment": 10,
                          "annuityProvider": "Metlife",
                          "availableCredit": 1000,
                          "institutionCode": "3af3685e-05d9-7060-359f-008d0755e993",
                          "originalBalance": 10,
                          "todayUglAmount": 1000.5,
                          "accountOwnership": "INDIVIDUAL",
                          "annuityTermYear": 2048,
                          "availableBalance": 1000,
                          "dayPaymentIsDue": 20,
                          "totalAccountValue": 1,
                          "cashSurrenderValue": 1000,
                          "todayUglPercentage": 6.9,
                          "annuityPolicyToDate": "2016-10-13T17:57:37.000Z",
                          "memberIsManagedByUser": false
                        },
                        "timestamp": "2024-06-20T18:27:46Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemoteMXAccount"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/mx/transactions": {
      "get": {
        "summary": "List all Transactions with MX Data",
        "description": "Returns a paginated list of Transactions with MX Data",
        "tags": [
          "MX"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "transactionId": "txn_12wKKKDZt7qD57licvBXSv",
                    "profileId": "p_12wKKKS3OAOaYLIJsyMPVk"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteTransactions"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/mx/transactions/{transactionId}": {
      "parameters": [
        {
          "name": "transactionId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Transaction Data",
        "description": "Retrieve MX Data by Transaction ID",
        "tags": [
          "MX"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "transactionId": "txn_12wKKKDZt7qD57licvBXSv",
                  "profileId": "p_12wKKKS3OAOaYLIJsyMPVk",
                  "type": "MX",
                  "documents": {
                    "api.mx.com": {
                      "/transactions/enhance": {
                        "id": "ID-123",
                        "body": {
                          "id": "ID-123",
                          "memo": "Additional-information*on_transaction",
                          "type": "DEBIT",
                          "amount": 21.33,
                          "isFee": false,
                          "category": "Rental Car & Taxi",
                          "isIncome": false,
                          "isExpense": false,
                          "description": "Uber",
                          "isBillPay": false,
                          "describedBy": 6,
                          "categoryGuid": "CAT-9588eaad-90a4-bb5c-66c8-1812503d0db8",
                          "merchantGuid": "MCH-14f25b63-ef47-a38e-b2b6-d02b280b6e4e",
                          "categorizedBy": 13,
                          "isSubscription": false,
                          "isInternational": false,
                          "isOverdraftFee": false,
                          "isDirectDeposit": false,
                          "isPayrollAdvance": false,
                          "originalDescription": "ubr* pending.uber.com",
                          "merchantCategoryCode": 4121,
                          "merchantLocationGuid": "MCL-00024e59-18b5-4d79-b879-2a7896726fea",
                          "extendedTransactionType": "partner_transaction_type"
                        },
                        "timestamp": "2024-06-20T18:27:46Z"
                      },
                      "/users/{user_guid}/transactions": {
                        "id": "TRN-265abee9-889b-af6a-c69b-25157db2bdd9",
                        "body": {
                          "id": "transaction-265abee9-889b-af6a-c69b-25157db2bdd9",
                          "date": "2013-09-23T00:00:00.000Z",
                          "guid": "TRN-265abee9-889b-af6a-c69b-25157db2bdd9",
                          "memo": "This is a memo",
                          "type": "DEBIT",
                          "amount": 61.11,
                          "isFee": false,
                          "status": "POSTED",
                          "userId": "user123",
                          "category": "Groceries",
                          "latitude": -43.2075,
                          "metadata": "some metadata",
                          "isIncome": false,
                          "longitude": 139.691706,
                          "postedAt": "2016-10-07T06:00:00.000Z",
                          "userGuid": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                          "accountId": "account123",
                          "createdAt": "2016-10-06T09:43:42.000Z",
                          "isExpense": true,
                          "updatedAt": "2016-10-07T05:49:12.000Z",
                          "description": "Whole foods",
                          "isBillPay": false,
                          "memberGuid": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                          "accountGuid": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                          "isRecurring": false,
                          "categoryGuid": "CAT-9588eaad-90a4-bb5c-66c8-1812503d0db8",
                          "currencyCode": "USD",
                          "merchantGuid": "MCH-7ed79542-884d-2b1b-dd74-501c5cc9d25b",
                          "transactedAt": "2016-10-06T13:00:00.000Z",
                          "localizedMemo": "This is a localized_memo",
                          "isSubscription": false,
                          "isInternational": false,
                          "isOverdraftFee": false,
                          "isDirectDeposit": false,
                          "isPayrollAdvance": false,
                          "topLevelCategory": "Food & Dining",
                          "checkNumberString": "6812",
                          "originalDescription": "WHOLEFDS TSQ 102",
                          "localizedDescription": "This is a localized_description",
                          "merchantCategoryCode": 5411,
                          "merchantLocationGuid": "MCL-00024e59-18b5-4d79-b879-2a7896726fea",
                          "extendedTransactionType": "partner_transaction_type",
                          "memberIsManagedByUser": false
                        },
                        "timestamp": "2024-06-20T18:27:46Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemoteMXTransaction"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/ntropy/transactions": {
      "get": {
        "summary": "List all Transactions with Ntropy Data",
        "description": "Returns a paginated list of Transactions that have Ntropy Data",
        "tags": [
          "Ntropy"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "transactionId": "txn_12wKKZi6pNiGzZnEVRuVri",
                    "profileId": "p_12wKKZgpZgMgegOcgs7LRJ"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteTransactions"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/ntropy/transactions/{transactionId}": {
      "parameters": [
        {
          "name": "transactionId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Transaction Data",
        "description": "Retrieve Ntropy Data by Transaction ID",
        "tags": [
          "Ntropy"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "transactionId": "txn_12wKKZi6pNiGzZnEVRuVri",
                  "profileId": "p_12wKKZgpZgMgegOcgs7LRJ",
                  "type": "NTROPY",
                  "documents": {
                    "api.ntropy.com": {
                      "/v2/transactions/{mode}": {
                        "id": "xbx8YP14g565Xketw3tFmn4yp49x3tbj9mD8DB4fM8DDY6x",
                        "body": {
                          "logo": "https://logo.clearbit.com/aws.amazon.com",
                          "labels": [
                            "Cafes and coffee shop"
                          ],
                          "website": "starbucks.com",
                          "location": "10 Union Square East, New York, New York 10003, US",
                          "merchant": "Starbucks",
                          "recurrence": "recurring",
                          "merchantId": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                          "intermediaries": [
                            {
                              "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                              "logo": "https://logos.ntropy.com/squareup.com",
                              "name": "Square",
                              "website": "squareup.com"
                            }
                          ],
                          "transactionId": "xbx8YP14g565Xketw3tFmn4yp49x3tbj9mD8DB4fM8DDY6x",
                          "recurrenceGroup": {
                            "id": "3b0c689b-e123-30a6-9f53-878f3ebf46aa",
                            "otherParty": "starbucks.com",
                            "periodicity": "monthly",
                            "totalAmount": 240,
                            "averageAmount": 10,
                            "transactionIds": [
                              "b708fbd8-be76-41c2-86d5-83f8ba05ed85",
                              "0e34b24d-646d-416e-8d51-fda5b6e10684"
                            ],
                            "firstPaymentDate": "2020-02-02",
                            "latestPaymentDate": "2022-02-02",
                            "periodicityInDays": 31
                          },
                          "locationStructured": {
                            "city": "New York",
                            "state": "New York",
                            "address": "10 Union Square East",
                            "country": "US",
                            "latitude": 48.734834,
                            "postcode": "10003",
                            "longitude": -73.989782,
                            "appleMapsUrl": "https://maps.apple.com/?q=Starbucks+10+Union+Square+East&sll=40.734834,-73.989782",
                            "googleMapsUrl": "https://www.google.com/maps/search/?api=1&query=Starbucks%2C10+Union+Square+East%2C+New+York%2C+New+York+10003%2C+US"
                          },
                          "recurrenceGroupId": "3b0c689b-e123-30a6-9f53-878f3ebf46aa"
                        },
                        "timestamp": "2024-06-20T18:27:49Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemoteNtropyTransaction"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/pave/profiles": {
      "get": {
        "summary": "List all Profiles with Pave Data",
        "description": "Returns a paginated list of Profiles that have Pave Data",
        "tags": [
          "Pave"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "profileId": "p_12srEQlGK2nFitCKw0kIJu",
                    "uuid": "01875fd7-9487-7c29-9bd2-3958c3770e6a"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteProfiles"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/pave/profiles/{profileId}": {
      "parameters": [
        {
          "name": "profileId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Profile Data",
        "description": "Retrieve Pave Data by Profile ID",
        "tags": [
          "Pave"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "profileId": "p_12srEQlGK2nFitCKw0kIJu",
                  "uuid": "01875fd7-9487-7c29-9bd2-3958c3770e6a",
                  "type": "PAVE",
                  "documents": {
                    "api.pave.dev": {
                      "/v1/users/{user_id}/unified_insights": {
                        "id": "sandbox_default_user_001",
                        "body": {
                          "recurringExpenditures": {
                            "to": "2023-07-27",
                            "from": "2022-08-29",
                            "userId": "sandbox_default_user_001",
                            "recurringExpenditures": [
                              {
                                "logo": "https://assets.pave.dev/merchants/logos/97959a89-43c3-4efd-ba63-69801966f5e4.png",
                                "tags": [
                                  "Subscription"
                                ],
                                "count": 3,
                                "status": "unknown",
                                "lastDate": "2023-08-29",
                                "nextDate": "2023-11-01",
                                "avgAmount": 8,
                                "nextDates": [
                                  {
                                    "nextDate": "2023-11-01"
                                  },
                                  {
                                    "nextDate": "2023-11-17"
                                  },
                                  {
                                    "nextDate": "2023-12-03"
                                  }
                                ],
                                "lastAmount": 8,
                                "nextAmount": 8,
                                "deltaAmount": 0,
                                "transactions": [
                                  {
                                    "date": "2023-08-29",
                                    "name": "ACH Debit - Empower Inc XXX",
                                    "amount": 8,
                                    "accountId": "7b6d9162-1473-48a7-8f20-bdff3964a442",
                                    "accountName": "Easy Checking",
                                    "triggeredFee": null,
                                    "transactionId": "31823e28-48a9-44fb-b713-ccb182feac1d",
                                    "paveTransactionId": "7a90c4c9-18fc-4ed1-8ff2-4a9a0617e215"
                                  },
                                  {
                                    "date": "2023-07-28",
                                    "name": "Pos Debit- 4405 4405 Empower Empower.me",
                                    "amount": 8,
                                    "accountId": "7b6d9162-1473-48a7-8f20-bdff3964a442",
                                    "accountName": "Easy Checking",
                                    "triggeredFee": null,
                                    "transactionId": "34d8da09-2ec7-4b86-a57b-58f7623931f2",
                                    "paveTransactionId": "a478e041-a047-4263-b1d3-ed0490fa01b8"
                                  },
                                  {
                                    "date": "2023-07-27",
                                    "name": "Pos Debit 4405 Empower +18889438967",
                                    "amount": 8,
                                    "accountId": "7b6d9162-1473-48a7-8f20-bdff3964a442",
                                    "accountName": "Easy Checking",
                                    "triggeredFee": null,
                                    "transactionId": "89c6780f-e2af-4e33-b14f-464005e5988f",
                                    "paveTransactionId": "9f8310b1-bb08-44d7-bdb1-ff3bfc453c54"
                                  }
                                ],
                                "deltaPercent": 0,
                                "merchantUUID": "97959a89-43c3-4efd-ba63-69801966f5e4",
                                "avgPeriodDays": 16,
                                "necessityLevel": "nonessential",
                                "lastDescription": "ACH Debit - Empower Inc XXX",
                                "isoCurrencyCode": "USD",
                                "normalizedFrequency": "semimonthly",
                                "normalizedMerchantName": "Empower"
                              }
                            ]
                          }
                        },
                        "timestamp": "2024-06-20T18:27:49Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemotePaveProfile"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/pave/transactions": {
      "get": {
        "summary": "List all Transactions with Pave Data",
        "description": "Returns a paginated list of Transactions that have Pave Data",
        "tags": [
          "Pave"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "transactionId": "txn_157KVSKMoc6dKjzQhiJetch",
                    "profileId": "p_12srEQlGK2nFitCKw0kIJu"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteTransactions"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/pave/transactions/{transactionId}": {
      "parameters": [
        {
          "name": "transactionId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Transaction Data",
        "description": "Retrieve Pave Data by Transaction ID",
        "tags": [
          "Pave"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "transactionId": "txn_157KVSKMoc6dKjzQhiJetch",
                  "profileId": "p_12srEQlGK2nFitCKw0kIJu",
                  "type": "PAVE",
                  "documents": {
                    "api.pave.dev": {
                      "/v1/users/{user_id}/transactions": {
                        "id": "788f5d6b-f807-4975-9c35-a28a304cabd4",
                        "body": {
                          "date": "2025-05-15",
                          "name": "QuikTrip",
                          "tags": [
                            "Convenience Store"
                          ],
                          "amount": 65.83,
                          "endpoint": "ritual_expenses",
                          "location": {
                            "lat": null,
                            "lon": null,
                            "city": null,
                            "region": null,
                            "address": null,
                            "country": null,
                            "postalCode": null,
                            "storeNumber": null
                          },
                          "baseType": "debit",
                          "accountId": "acct_12zvCefBk56b7BwOwmFtW5",
                          "accountName": null,
                          "displayName": "QuikTrip",
                          "merchantUrl": "https://www.quiktrip.com/",
                          "merchantName": "QuikTrip",
                          "merchantUUID": "b1eb34c9-1d26-4561-87a4-a42fb19b787a",
                          "triggeredFee": null,
                          "counterparties": [
                            {
                              "id": "b1eb34c9-1d26-4561-87a4-a42fb19b787a",
                              "url": "https://www.quiktrip.com/",
                              "name": "QuikTrip",
                              "tags": [
                                "Convenience Store"
                              ],
                              "logoUrl": "https://assets.pave.dev/merchants/logos/b1eb34c9-1d26-4561-87a4-a42fb19b787a.png"
                            }
                          ],
                          "transactionId": "txn_121j1unTvxhDhx0hmtXdFj",
                          "necessityLevel": "nonessential",
                          "paymentChannel": null,
                          "recurringSetId": "74800949-c2f5-45d2-b2b6-7ec17072aea2",
                          "isoCurrencyCode": "USD",
                          "merchantLogoUrl": "https://assets.pave.dev/merchants/logos/b1eb34c9-1d26-4561-87a4-a42fb19b787a.png",
                          "recurrenceStatus": "active",
                          "paveTransactionId": "788f5d6b-f807-4975-9c35-a28a304cabd4",
                          "normalizedFrequency": "weekly"
                        },
                        "timestamp": "2024-06-20T18:27:49Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemotePaveTransaction"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/plaid/connections": {
      "get": {
        "summary": "List all Connections with Plaid Data",
        "description": "Returns a paginated list of Connections with Plaid Data",
        "tags": [
          "Plaid"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "connectionId": "conn_12wlUFADNrLZU8oSi8LdAc",
                    "profileId": "p_12srEQlGK2nFitCKw0kIJu"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteConnections"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/plaid/connections/{connectionId}": {
      "parameters": [
        {
          "name": "connectionId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Connection.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Connection ID",
            "example": "conn_14TJiFDKRJlPiBHuukUIlXZ"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Plaid Connection Data",
        "description": "Retrieve Plaid Data by Connection ID",
        "tags": [
          "Plaid"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "connectionId": "conn_12wlUFADNrLZU8oSi8LdAc",
                  "profileId": "p_12srEQlGK2nFitCKw0kIJu",
                  "type": "PLAID",
                  "documents": {
                    "{environment}.plaid.com": {
                      "/item/get": {
                        "id": "Ed6bjNrDLJfGvZWwnkQlfxwoNz54B5C97ejBr",
                        "body": {
                          "error": null,
                          "itemId": "Ed6bjNrDLJfGvZWwnkQlfxwoNz54B5C97ejBr",
                          "webhook": "https://plaid.com/example/hook",
                          "products": [
                            "auth",
                            "transactions"
                          ],
                          "updateType": "background",
                          "institutionId": "ins_109508",
                          "billedProducts": [
                            "auth",
                            "transactions"
                          ],
                          "availableProducts": [
                            "assets",
                            "balance",
                            "identity"
                          ],
                          "consentExpirationTime": null
                        },
                        "timestamp": "2024-06-20T18:29:12Z"
                      },
                      "/liabilities/get": {
                        "id": "Ed6bjNrDLJfGvZWwnkQlfxwoNz54B5C97ejBr",
                        "body": {
                          "credit": [
                            {
                              "aprs": [
                                {
                                  "aprType": "balance_transfer_apr",
                                  "aprPercentage": 15.24,
                                  "balanceSubjectToApr": 1562.32,
                                  "interestChargeAmount": 130.22
                                },
                                {
                                  "aprType": "cash_apr",
                                  "aprPercentage": 27.95,
                                  "balanceSubjectToApr": 56.22,
                                  "interestChargeAmount": 14.81
                                },
                                {
                                  "aprType": "purchase_apr",
                                  "aprPercentage": 12.5,
                                  "balanceSubjectToApr": 157.01,
                                  "interestChargeAmount": 25.66
                                },
                                {
                                  "aprType": "special",
                                  "aprPercentage": 0,
                                  "balanceSubjectToApr": 1000,
                                  "interestChargeAmount": 0
                                }
                              ],
                              "accountId": "dVzbVMLjrxTnLjX4G66XUp5GLklm4oiZy88yK",
                              "isOverdue": false,
                              "lastPaymentDate": "2019-05-22",
                              "lastPaymentAmount": 168.25,
                              "nextPaymentDueDate": "2020-05-28",
                              "lastStatementBalance": 1708.77,
                              "minimumPaymentAmount": 20,
                              "lastStatementIssueDate": "2019-05-28"
                            }
                          ],
                          "student": [
                            {
                              "guarantor": "DEPT OF ED",
                              "loanName": "Consolidation",
                              "accountId": "Pp1Vpkl9w8sajvK6oEEKtr7vZxBnGpf7LxxLE",
                              "isOverdue": false,
                              "loanStatus": {
                                "type": "repayment",
                                "endDate": "2032-07-28"
                              },
                              "pslfStatus": {
                                "paymentsMade": 200,
                                "paymentsRemaining": 160,
                                "estimatedEligibilityDate": "2021-01-01"
                              },
                              "accountNumber": "4277075694",
                              "repaymentPlan": {
                                "type": "standard",
                                "description": "Standard Repayment"
                              },
                              "sequenceNumber": "1",
                              "originationDate": "2002-08-28",
                              "servicerAddress": {
                                "city": "San Matias",
                                "region": "CA",
                                "street": "123 Relaxation Road",
                                "country": "US",
                                "postalCode": "99415"
                              },
                              "lastPaymentDate": "2019-04-22",
                              "ytdInterestPaid": 280.55,
                              "disbursementDates": [
                                "2002-08-28"
                              ],
                              "ytdPrincipalPaid": 271.65,
                              "lastPaymentAmount": 138.05,
                              "expectedPayoffDate": "2032-07-28",
                              "nextPaymentDueDate": "2019-05-28",
                              "minimumPaymentAmount": 25,
                              "interestRatePercentage": 5.25,
                              "paymentReferenceNumber": "4277075694",
                              "lastStatementIssueDate": "2019-04-28",
                              "outstandingInterestAmount": 6227.36,
                              "originationPrincipalAmount": 25000
                            }
                          ],
                          "mortgage": [
                            {
                              "hasPmi": true,
                              "loanTerm": "30 year",
                              "accountId": "BxBXxLj1m4HMXBm9WZJyUg9XLd4rKEhw8Pb1J",
                              "interestRate": {
                                "type": "fixed",
                                "percentage": 3.99
                              },
                              "maturityDate": "2045-07-31",
                              "accountNumber": "3120194154",
                              "escrowBalance": 3141.54,
                              "pastDueAmount": 2304,
                              "currentLateFee": 25,
                              "originationDate": "2015-08-01",
                              "propertyAddress": {
                                "city": "Malakoff",
                                "region": "NY",
                                "street": "2992 Cameron Road",
                                "country": "US",
                                "postalCode": "14236"
                              },
                              "lastPaymentDate": "2019-08-01",
                              "ytdInterestPaid": 12300.4,
                              "ytdPrincipalPaid": 12340.5,
                              "lastPaymentAmount": 3141.54,
                              "nextMonthlyPayment": 3141.54,
                              "loanTypeDescription": "conventional",
                              "nextPaymentDueDate": "2019-11-15",
                              "hasPrepaymentPenalty": true,
                              "originationPrincipalAmount": 425000
                            }
                          ]
                        },
                        "timestamp": "2024-06-20T18:29:12Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemotePlaidConnection"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/plaid/accounts": {
      "get": {
        "summary": "List all Accounts with Plaid Data",
        "description": "Returns a paginated list of Accounts with Plaid Data",
        "tags": [
          "Plaid"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "accountId": "acct_12wlUFYBMl3DC4pjGmn22b",
                    "profileId": "p_12srEQlGK2nFitCKw0kIJu"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteAccounts"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/plaid/accounts/{accountId}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Account.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Account ID",
            "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Account data",
        "description": "Retrieve Plaid Data by Account ID.",
        "tags": [
          "Plaid"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "accountId": "acct_12wlUFYBMl3DC4pjGmn22b",
                  "profileId": "p_12srEQlGK2nFitCKw0kIJu",
                  "type": "PLAID",
                  "documents": {
                    "{environment}.plaid.com": {
                      "/accounts/get": {
                        "id": "8VkRJTMjDBpKOLBcXzdqw494Ze3bwp84SeEqL",
                        "body": {
                          "mask": "4444",
                          "name": "Advantage Savings",
                          "type": "depository",
                          "subtype": "savings",
                          "balances": {
                            "limit": null,
                            "current": 3333.33,
                            "available": 3333.33,
                            "isoCurrencyCode": "USD",
                            "lastUpdatedDatetime": null,
                            "unofficialCurrencyCode": null
                          },
                          "accountId": "8VkRJTMjDBpKOLBcXzdqw494Ze3bwp84SeEqL",
                          "officialName": "Advantage Savings",
                          "holderCategory": null
                        },
                        "timestamp": "2024-06-20T18:29:12Z"
                      },
                      "/identity/get": {
                        "id": "Ed6bjNrDLJfGvZWwnkQlfxwoNz54B5C97ejBr",
                        "body": [
                          {
                            "names": [
                              "Alberta Bobbeth Charleson"
                            ],
                            "emails": [
                              {
                                "data": "accountholder0@example.com",
                                "type": "primary",
                                "primary": true
                              }
                            ],
                            "addresses": [
                              {
                                "data": {
                                  "city": "San Francisco",
                                  "region": "CA",
                                  "street": "300 Post St",
                                  "country": "US",
                                  "postalCode": "94104"
                                }
                              }
                            ],
                            "phoneNumbers": [
                              {
                                "data": "4673956029",
                                "type": "home",
                                "primary": true
                              }
                            ]
                          }
                        ],
                        "timestamp": "2024-06-20T18:29:12Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemotePlaidAccount"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/plaid/transactions": {
      "get": {
        "summary": "List all Transactions with Plaid Data",
        "description": "Returns a paginated list of Transactions with Plaid Data",
        "tags": [
          "Plaid"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "transactionId": "txn_12wlUFjuZCluC38e7MsEeI",
                    "profileId": "p_12srEQlGK2nFitCKw0kIJu"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteTransactions"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/plaid/transactions/{transactionId}": {
      "parameters": [
        {
          "name": "transactionId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Transaction Data",
        "description": "Retrieve Plaid Data by Transaction ID",
        "tags": [
          "Plaid"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "transactionId": "txn_12wlUFjuZCluC38e7MsEeI",
                  "profileId": "p_12srEQlGK2nFitCKw0kIJu",
                  "type": "PLAID",
                  "documents": {
                    "{environment}.plaid.com": {
                      "/investments/securities/get": {
                        "id": "8E4L9XLl6MudjEpwPAAgivmdZRdBPJuvMPlPb",
                        "body": {
                          "isin": null,
                          "name": "Nflx Feb 01'18 $355 Call",
                          "type": "derivative",
                          "cusip": null,
                          "sedol": null,
                          "sector": null,
                          "industry": null,
                          "closePrice": 0.011,
                          "securityId": "8E4L9XLl6MudjEpwPAAgivmdZRdBPJuvMPlPb",
                          "fixedIncome": null,
                          "tickerSymbol": "NFLX180201C00355000",
                          "institutionId": null,
                          "optionContract": {
                            "strikePrice": 355,
                            "contractType": "call",
                            "expirationDate": "2018-02-01",
                            "underlyingSecurityTicker": "NFLX"
                          },
                          "updateDatetime": null,
                          "closePriceAsOf": "2021-04-13",
                          "isoCurrencyCode": "USD",
                          "proxySecurityId": null,
                          "isCashEquivalent": false,
                          "marketIdentifierCode": "XNAS",
                          "institutionSecurityId": null,
                          "unofficialCurrencyCode": null
                        },
                        "timestamp": "2024-06-20T18:29:12Z"
                      },
                      "/investments/transactions/get": {
                        "id": "oq99Pz97joHQem4BNjXECev1E4B6L6sRzwANW",
                        "body": {
                          "date": "2020-05-29",
                          "fees": 0,
                          "name": "INCOME DIV DIVIDEND RECEIVED",
                          "type": "cash",
                          "price": 0,
                          "amount": -8.72,
                          "subtype": "dividend",
                          "quantity": 0,
                          "accountId": "rz99ex9ZQotvnjXdgQLEsR81e3ArPgulVWjGj",
                          "securityId": "eW4jmnjd6AtjxXVrjmj6SX1dNEdZp3Cy8RnRQ",
                          "isoCurrencyCode": "USD",
                          "cancelTransactionId": null,
                          "unofficialCurrencyCode": null,
                          "investmentTransactionId": "oq99Pz97joHQem4BNjXECev1E4B6L6sRzwANW"
                        },
                        "timestamp": "2024-06-20T18:29:12Z"
                      },
                      "/transactions/get": {
                        "id": "lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje",
                        "body": {
                          "date": "2017-01-29",
                          "name": "Apple Store",
                          "amount": 2307.21,
                          "pending": false,
                          "category": [
                            "Shops",
                            "Computers and Electronics"
                          ],
                          "datetime": "2017-01-27T11:00:00Z",
                          "location": {
                            "lat": 40.740352,
                            "lon": -74.001761,
                            "city": "San Francisco",
                            "region": "CA",
                            "address": "300 Post St",
                            "country": "US",
                            "postalCode": "94108",
                            "storeNumber": "1235"
                          },
                          "accountId": "BxBXxLj1m4HMXBm9WZZmCWVbPjX16EHwv99vp",
                          "categoryId": "19013000",
                          "checkNumber": null,
                          "paymentMeta": {
                            "payee": null,
                            "payer": null,
                            "ppdId": null,
                            "reason": null,
                            "byOrderOf": null,
                            "paymentMethod": null,
                            "referenceNumber": null,
                            "paymentProcessor": null
                          },
                          "accountOwner": null,
                          "merchantName": "Apple",
                          "transactionId": "lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje",
                          "authorizedDate": "2017-01-27",
                          "paymentChannel": "in store",
                          "transactionCode": null,
                          "transactionType": "place",
                          "isoCurrencyCode": "USD",
                          "authorizedDatetime": "2017-01-27T10:34:50Z",
                          "originalDescription": "Apple Store XXXXX",
                          "pendingTransactionId": null,
                          "unofficialCurrencyCode": null
                        },
                        "timestamp": "2024-06-20T18:29:12Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemotePlaidTransaction"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/plaid/holdings": {
      "get": {
        "summary": "List all Holdings with Plaid Data",
        "description": "Returns a paginated list of Holdings with Plaid Data",
        "tags": [
          "Plaid"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "holdingId": "hld_12wlUFviRzjW1fw5bDxw8x",
                    "profileId": "p_12srEQlGK2nFitCKw0kIJu"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/RemoteHoldings"
                }
              }
            }
          }
        }
      }
    },
    "/v1/remote/plaid/holdings/{holdingId}": {
      "parameters": [
        {
          "name": "holdingId",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Holding.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Holding ID",
            "example": "hld_12Hz9Dz7vEvM9AuljYvhmPc"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Holding Data",
        "description": "Retrieve Plaid Data by Holding ID",
        "tags": [
          "Plaid"
        ],
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "holdingId": "hld_12wlUFviRzjW1fw5bDxw8x",
                  "profileId": "p_12srEQlGK2nFitCKw0kIJu",
                  "type": "PLAID",
                  "documents": {
                    "{environment}.plaid.com": {
                      "/investments/holdings/get": {
                        "id": "dac3eeaeeadcbf0b56894127d2f4a1bf",
                        "body": {
                          "quantity": 0.01,
                          "accountId": "JqMLm4rJwpF6gMPJwBqdh9ZjjPvvpDcb7kDK1",
                          "costBasis": 1,
                          "securityId": "d6ePmbPxgWCWmMVv66q9iPV94n91vMtov5Are",
                          "institutionPrice": 1,
                          "institutionValue": 0.01,
                          "isoCurrencyCode": "USD",
                          "institutionPriceAsOf": "2021-04-13",
                          "unofficialCurrencyCode": null,
                          "institutionPriceDatetime": null
                        },
                        "timestamp": "2024-06-20T18:29:12Z"
                      },
                      "/investments/securities/get": {
                        "id": "8E4L9XLl6MudjEpwPAAgivmdZRdBPJuvMPlPb",
                        "body": {
                          "isin": null,
                          "name": "Nflx Feb 01'18 $355 Call",
                          "type": "derivative",
                          "cusip": null,
                          "sedol": null,
                          "sector": null,
                          "industry": null,
                          "closePrice": 0.011,
                          "securityId": "8E4L9XLl6MudjEpwPAAgivmdZRdBPJuvMPlPb",
                          "fixedIncome": null,
                          "tickerSymbol": "NFLX180201C00355000",
                          "institutionId": null,
                          "optionContract": {
                            "strikePrice": 355,
                            "contractType": "call",
                            "expirationDate": "2018-02-01",
                            "underlyingSecurityTicker": "NFLX"
                          },
                          "updateDatetime": null,
                          "closePriceAsOf": "2021-04-13",
                          "isoCurrencyCode": "USD",
                          "proxySecurityId": null,
                          "isCashEquivalent": false,
                          "marketIdentifierCode": "XNAS",
                          "institutionSecurityId": null,
                          "unofficialCurrencyCode": null
                        },
                        "timestamp": "2024-06-20T18:29:12Z"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RemotePlaidHolding"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain a valid ID?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/connections/{connectionId}/statements/refresh": {
      "post": {
        "summary": "Trigger a Statement Refresh",
        "tags": [
          "Statements"
        ],
        "description": "Triggers a Statement Refresh for a given Connection.\n\nSucessful requests trigger a refresh of Statements from the Connection provider and return a `202 Accepted` response.\n\nAs soon as Quiltt obtains the latest statements, you will receive the `statement.created` webhook event.\n",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "The ID of the Connection.",
              "format": "global_id-v1",
              "readOnly": true,
              "title": "Connection ID",
              "example": "conn_14TJiFDKRJlPiBHuukUIlXZ"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Successful request"
          },
          "404": {
            "description": "Connection not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not Found",
                  "instruction": "Does the URL contain the ID of a Connection?"
                },
                "schema": {
                  "$ref": "#/components/schemas/RestError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/webhooks/subscriptions": {
      "post": {
        "summary": "Create a Subscription",
        "tags": [
          "Subscriptions"
        ],
        "description": "Creates a Subscription",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "example": {
                  "id": "wh_14OYtCKXE7UeehJCdfPuV6e",
                  "name": "ACME Webhook",
                  "targetUrl": "https://example.com/webhooks/quiltt",
                  "eventTypes": [
                    "profile.created"
                  ],
                  "disabled": false,
                  "createdAt": "2024-07-26T02:04:37Z",
                  "updatedAt": "2024-07-26T02:04:37Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscription"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "targetUrl": [
                    "Target URL is not a valid HTTPS URL"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrors"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscriptionCreateRequest"
              },
              "examples": {
                "0": {
                  "summary": "Subscribe To Profile Created",
                  "value": {
                    "name": "ACME Webhook",
                    "targetUrl": "https://example.com/webhooks/quiltt",
                    "eventTypes": [
                      "profile.created"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all Subscriptions",
        "tags": [
          "Subscriptions"
        ],
        "description": "Returns a paginated list of your Subscriptions",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page to retrieve"
          },
          {
            "in": "query",
            "name": "items",
            "schema": {
              "type": "integer",
              "default": 25
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "current-page": {
                "schema": {
                  "type": "integer"
                },
                "description": "Current page number"
              },
              "page-items": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of items per page"
              },
              "total-count": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of items"
              },
              "total-pages": {
                "schema": {
                  "type": "integer"
                },
                "description": "Total number of pages"
              }
            },
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "wh_11RaL0HsGQlLjANWkCQNr2z",
                    "name": "ACME Webhook 2",
                    "targetUrl": "https://example.com/webhooks/quiltt",
                    "eventTypes": [
                      "connection.created"
                    ],
                    "disabled": false,
                    "createdAt": "2023-09-26T19:13:43Z",
                    "updatedAt": "2023-09-26T19:13:43Z"
                  },
                  {
                    "id": "wh_12NTX5Ay3V1NlEwCnCWqhm8",
                    "name": "ACME Webhook",
                    "targetUrl": "https://example.com/my_webhook",
                    "eventTypes": [
                      "profile.created",
                      "profile.deleted"
                    ],
                    "disabled": false,
                    "createdAt": "2023-07-26T02:04:37Z",
                    "updatedAt": "2023-07-26T02:04:37Z"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookSubscription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/webhooks/subscriptions/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "type": "string",
            "description": "The ID of the Webhook Subscription.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Webhook Subscription ID",
            "example": "wh_1RzYpUO7vVjcPkQLucrEV1"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve a Subscription",
        "tags": [
          "Subscriptions"
        ],
        "description": "Retrieves a Subscription by its ID",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "id": "wh_12NTX5Ay3V1NlEwCnCWqhm8",
                  "name": "ACME Webhook",
                  "targetUrl": "https://example.com/my_webhook",
                  "eventTypes": [
                    "profile.created",
                    "profile.deleted"
                  ],
                  "disabled": false,
                  "createdAt": "2023-07-26T02:04:37Z",
                  "updatedAt": "2023-07-26T02:04:37Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscription"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a Subscription",
        "tags": [
          "Subscriptions"
        ],
        "description": "Updates a Subscription",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "id": "wh_12NTX5Ay3V1NlEwCnCWqhm8",
                  "name": "ACME Webhook",
                  "targetUrl": "https://example.com/my_webhook",
                  "eventTypes": [
                    "profile.created"
                  ],
                  "disabled": false,
                  "createdAt": "2023-07-26T02:04:37Z",
                  "updatedAt": "2023-09-01T04:00:31Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscription"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "example": {
                  "targetUrl": [
                    "Target URL is not a valid HTTPS URL"
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrors"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscriptionUpdateRequest"
              },
              "examples": {
                "0": {
                  "summary": "Subscribe To Profile Created",
                  "value": {
                    "eventTypes": [
                      "profile.created"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Subscription",
        "tags": [
          "Subscriptions"
        ],
        "description": "Deletes a Subscription",
        "security": [
          {
            "APISecretBearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "APISecretBearerAuth": {
        "description": "<pre><code>Authorization: Bearer {API_KEY_SECRET}</code></pre>\n\nPass your API Key secret as a bearer token in the Authorization header. You can access your\nAPI Keys in the [Quiltt Dashboard](https://dashboard.quiltt.dev).\n",
        "bearerFormat": "string",
        "scheme": "bearer",
        "type": "http"
      },
      "ProcessorTokenBasicAuth": {
        "description": "<pre><code>Basic {Base64-encoded ProcessorToken:PROCESSOR_SECRET}</code></pre>\n\nPass a Base64-encoded combination of a Processor Token and Processor Secret, separated by a colon.\n",
        "scheme": "basic",
        "type": "http"
      }
    },
    "schemas": {
      "Account": {
        "type": "object",
        "description": "An Account represents the accounting of a banking relationship.",
        "title": "Account",
        "required": [
          "id",
          "connectionId",
          "metadata",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Account.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Account ID",
            "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
          },
          "connectionId": {
            "type": "string",
            "description": "The ID of the Connection.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Connection ID",
            "example": "conn_14TJiFDKRJlPiBHuukUIlXZ"
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Custom metadata about the Account, stored in a 'key-value' format.\n\nSee the [Custom Metadata](https://quiltt.dev/api/custom-metadata) guide for more information and examples.",
            "minProperties": 1,
            "maxProperties": 50,
            "example": {
              "accountNickname": "My favorite checking account"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "The UTC date and time when the Account was created, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
            "format": "date-time",
            "readOnly": true,
            "example": "2023-10-12T23:55:59Z"
          },
          "updatedAt": {
            "type": "string",
            "deprecated": true,
            "description": "The UTC date and time when the Account was last updated, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
            "format": "date-time",
            "readOnly": true,
            "example": "2023-10-12T23:55:59Z"
          }
        }
      },
      "ACHNumbers": {
        "type": "object",
        "description": "ACH Numbers represents the data used to perform money movement operations with a specific Account.\n\nYour end-user must complete an Account Numbers session through the Connector to obtain this data.",
        "title": "ACHNumbers",
        "required": [
          "accountId",
          "number",
          "routing"
        ],
        "properties": {
          "accountId": {
            "type": "string",
            "description": "The ID of the Account.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Account ID",
            "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
          },
          "number": {
            "type": "string",
            "description": "The Account number.",
            "readOnly": true,
            "minLength": 4,
            "maxLength": 17,
            "example": "1234567890"
          },
          "routing": {
            "type": "string",
            "description": "The routing number for the Account.",
            "readOnly": true,
            "minLength": 9,
            "maxLength": 9,
            "example": "021000021"
          }
        }
      },
      "Balance": {
        "type": "object",
        "description": "Represents an Account Balance.",
        "title": "Balance",
        "required": [
          "id",
          "accountId",
          "at",
          "available",
          "current",
          "limit",
          "source"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Balance.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Balance ID",
            "example": "bal_12vXOdjpsZIgB3Ae80Y7Pl"
          },
          "accountId": {
            "type": "string",
            "description": "The ID of the Account.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Account ID",
            "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
          },
          "at": {
            "type": "string",
            "description": "The timestamp of the Account Balance record.",
            "format": "date-time",
            "readOnly": true,
            "example": "2025-01-24T14:15:22Z"
          },
          "available": {
            "type": "number",
            "nullable": true,
            "description": "The amount of funds accounting for pending Transactions.",
            "format": "double",
            "example": 31.41
          },
          "current": {
            "type": "number",
            "nullable": true,
            "description": "The amount of funds based on posted Transactions.",
            "format": "double",
            "example": 314.15
          },
          "limit": {
            "type": "number",
            "nullable": true,
            "description": "The amount of funds that may be overdraft or spent on credit.",
            "format": "double",
            "example": 3141.59
          },
          "source": {
            "type": "string",
            "description": "The source of the Balance data.\n\n`INITIAL` - Initial value from the provider.\n\n`SYNC` - Regular sync with the provider.\n\n`REFRESH` - Provider response from a triggered **Refresh Balance** call.\n",
            "enum": [
              "INITIAL",
              "SYNC",
              "REFRESH"
            ],
            "example": "REFRESH"
          }
        }
      },
      "Connection": {
        "type": "object",
        "description": "A Connection represents the data source for a Profile's accounts and transactions, such as a Plaid **Item** or MX **member**.\n\nThe easiest way to register connections is with the Quiltt Connector, which handles the configuration for Plaid Link and MX Connect.",
        "title": "Connection",
        "required": [
          "id",
          "provider",
          "features",
          "products",
          "status",
          "metadata",
          "createdAt",
          "updatedAt",
          "at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Connection.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Connection ID",
            "example": "conn_14TJiFDKRJlPiBHuukUIlXZ"
          },
          "provider": {
            "type": "string",
            "description": "Represents the data provider for the Connection.\n\n`AKOYA` - Akoya\n\n`FINICITY` - Finicity\n\n`MOCK` - Mock data\n\n`MX` - MX\n\n`PLAID` - Plaid\n\n`DISCONNECTED` - Disconnected\n",
            "enum": [
              "AKOYA",
              "FINICITY",
              "MOCK",
              "MX",
              "PLAID",
              "DISCONNECTED"
            ],
            "example": "MX"
          },
          "features": {
            "type": "array",
            "deprecated": true,
            "description": "The products currently enabled on the Connection.",
            "items": {
              "type": "string",
              "description": "Represents a product of a Connection.\n\n`ACCOUNT_BALANCE_REFRESHES` - The ability to trigger live refreshes of account balances.\n\n\n`ACCOUNT_BALANCES_AND_TRANSACTIONS` - Access to Account Balances and Transaction with up to 24 months of history, depending on the provider.\n\nNote that MX typically provides 3-4 months of history and accessing 24 months\nof history is a \"premium\" product that incurs a one-time per-Connection fee.\nYou can configure whether Quiltt should attempt to sync full history on the MX\nIntegration page in the Dashboard\n\n\n`ACCOUNT_NUMBERS` - Access to verified account numbers to support money movement operations.\n\nWhen this product is provisioned, eligible accounts will be enabled for the\n[Account Numbers](https://www.quiltt.dev/api-reference/platform#tag/Account-Numbers)\nand [Processor Tokens](https://www.quiltt.dev/api-reference/platform#tag/Processor-Tokens)\nendpoints.\n\n\n`ACCOUNT_OWNERS` - Access to account-holder information to validate identity and account ownership.\n\nWhen this product is provisioned, account-holder information will become available\nvia [Remote Data](https://www.quiltt.dev/api/remote-data).\n\n\n`ACCOUNT_STATEMENTS` - Access to historical account statements in PDF format.\n\n\n`INVESTMENTS` - Access to account investments holdings and transactions.\n\nNote that for some providers like MX, this product may be provisioned automatically.\n\n\n`LIABILITIES` - Access to detailed account liabilities data.\n\nNote that for some providers like MX, this product may be provisioned automatically.\n\n",
              "enum": [
                "ACCOUNT_BALANCE_REFRESHES",
                "ACCOUNT_BALANCES_AND_TRANSACTIONS",
                "ACCOUNT_NUMBERS",
                "ACCOUNT_OWNERS",
                "ACCOUNT_STATEMENTS",
                "INVESTMENTS",
                "LIABILITIES"
              ]
            }
          },
          "products": {
            "type": "array",
            "description": "The products currently enabled on the Connection.",
            "items": {
              "type": "string",
              "description": "Represents a product of a Connection.\n\n`ACCOUNT_BALANCE_REFRESHES` - The ability to trigger live refreshes of account balances.\n\n\n`ACCOUNT_BALANCES_AND_TRANSACTIONS` - Access to Account Balances and Transaction with up to 24 months of history, depending on the provider.\n\nNote that MX typically provides 3-4 months of history and accessing 24 months\nof history is a \"premium\" product that incurs a one-time per-Connection fee.\nYou can configure whether Quiltt should attempt to sync full history on the MX\nIntegration page in the Dashboard\n\n\n`ACCOUNT_NUMBERS` - Access to verified account numbers to support money movement operations.\n\nWhen this product is provisioned, eligible accounts will be enabled for the\n[Account Numbers](https://www.quiltt.dev/api-reference/platform#tag/Account-Numbers)\nand [Processor Tokens](https://www.quiltt.dev/api-reference/platform#tag/Processor-Tokens)\nendpoints.\n\n\n`ACCOUNT_OWNERS` - Access to account-holder information to validate identity and account ownership.\n\nWhen this product is provisioned, account-holder information will become available\nvia [Remote Data](https://www.quiltt.dev/api/remote-data).\n\n\n`ACCOUNT_STATEMENTS` - Access to historical account statements in PDF format.\n\n\n`INVESTMENTS` - Access to account investments holdings and transactions.\n\nNote that for some providers like MX, this product may be provisioned automatically.\n\n\n`LIABILITIES` - Access to detailed account liabilities data.\n\nNote that for some providers like MX, this product may be provisioned automatically.\n\n",
              "enum": [
                "ACCOUNT_BALANCE_REFRESHES",
                "ACCOUNT_BALANCES_AND_TRANSACTIONS",
                "ACCOUNT_NUMBERS",
                "ACCOUNT_OWNERS",
                "ACCOUNT_STATEMENTS",
                "INVESTMENTS",
                "LIABILITIES"
              ]
            }
          },
          "status": {
            "type": "string",
            "description": "Represents the current state of a Connection.\n\n`INITIALIZING` - The Connection is being initialized and will begin syncing soon.\n\n`SYNCING` - The Connection is currently syncing with the provider.\n\n`SYNCED` - The Connection is synced and up to date with the provider.\n\n`ERROR_REPAIRABLE` - The Connection must be re-authenticated to resume syncing.\nHave the user complete the Connector [Reconnect flow](https://quiltt.dev/connector/reconnect) to resolve this error.\n\n`ERROR_SERVICE` - Quiltt is experiencing an unexpected error attempting to sync this Connection.\nVisit our [Status page](https://status.quiltt.io) or contact Quiltt Support for more information.\n\n`ERROR_PROVIDER` - The Connection provider is reporting an error with the Connection.\nInspect the Connection's [Remote Data](https://quiltt.dev/api/remote-data) for more information.\n\n`ERROR_INSTITUTION` - The Connection provider is reporting an error from the user's Institution.\nAsk the user to successfully log into their Institution's website and accept any terms or conditions\nFor certain providers and products, the user may need to explicitly enroll into Online Banking or Electronic Statement delivery.\n\n`DISCONNECTING` - The Connection is in the process of being disconnected from its provider.\n\n`DISCONNECTED` - The Connection has been fully disconnected from the provider.\nAccounts and associated data will remain on the Profile, but no new data will be synced until another Connection is established to the same Institution.\nYou can leverage the Connector [Reconnect flow](https://quiltt.dev/connector/reconnect) to prompt the user to re-establish the Connection.\n",
            "enum": [
              "INITIALIZING",
              "SYNCING",
              "SYNCED",
              "ERROR_REPAIRABLE",
              "ERROR_SERVICE",
              "ERROR_PROVIDER",
              "ERROR_INSTITUTION",
              "DISCONNECTING",
              "DISCONNECTED"
            ],
            "readOnly": true,
            "example": "SYNCED"
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Custom metadata about the Connection, stored in a 'key-value' format.\n\nSee the [Custom Metadata](https://quiltt.dev/api/custom-metadata) guide for more information and examples.",
            "minProperties": 1,
            "maxProperties": 50,
            "example": {
              "hiddenFromUI": true
            }
          },
          "createdAt": {
            "type": "string",
            "description": "The UTC date and time when the Connection was created, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
            "format": "date-time",
            "readOnly": true,
            "example": "2023-10-12T23:55:59Z"
          },
          "updatedAt": {
            "type": "string",
            "deprecated": true,
            "description": "The UTC date and time when the Connection was last updated, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
            "format": "date-time",
            "readOnly": true,
            "example": "2023-10-12T23:55:59Z"
          },
          "at": {
            "type": "string",
            "description": "Represents the most recent point at which data was synced with the\nunderlying provider. It does not guarantee success of any particular sync\noperation - only that the current data represents the known upstream state\nas of this point in time.\n\nThis is the timestamp you should use when deciding how much to trust the data.",
            "format": "date-time"
          }
        }
      },
      "ConnectionExport": {
        "type": "object",
        "description": "Connection details needed to make direct requests to the provider's API.",
        "title": "ConnectionExport",
        "required": [
          "id",
          "profileId",
          "provider",
          "apiKey"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Connection.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Connection ID",
            "example": "conn_14TJiFDKRJlPiBHuukUIlXZ"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "provider": {
            "type": "string",
            "description": "Represents the data provider for the Connection.\n\n`AKOYA` - Akoya\n\n`FINICITY` - Finicity\n\n`MOCK` - Mock data\n\n`MX` - MX\n\n`PLAID` - Plaid\n",
            "enum": [
              "AKOYA",
              "FINICITY",
              "MOCK",
              "MX",
              "PLAID"
            ],
            "example": "PLAID"
          },
          "apiKey": {
            "type": "array",
            "description": "The provider's API key for the Connection.",
            "items": {
              "type": "string",
              "nullable": false
            },
            "example": [
              "access-sandbox-435beced-94e8-4df3-a181-1dde1cfa19f0"
            ]
          }
        }
      },
      "Environment": {
        "type": "object",
        "description": "Information about the Environment.",
        "title": "Environment",
        "required": [
          "id",
          "name",
          "mode",
          "metadata"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Environment.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Environment ID",
            "example": "env_1hyoxpVVFib1HngGwKAzIr"
          },
          "name": {
            "type": "string",
            "description": "The name of the Environment.",
            "example": "Production"
          },
          "mode": {
            "type": "string",
            "description": "The mode of the Environment.",
            "enum": [
              "TEST",
              "SANDBOX",
              "PRODUCTION"
            ],
            "example": "PRODUCTION"
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Custom metadata about the Environment, stored in a 'key-value' format.\n\nSee the [Custom Metadata](https://quiltt.dev/api/custom-metadata) guide for more information and examples.",
            "minProperties": 1,
            "maxProperties": 50,
            "example": {
              "internalEnvironmentName": "staging"
            }
          }
        }
      },
      "Institution": {
        "type": "object",
        "description": "An Institution",
        "title": "Institution",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Institution."
          },
          "logoUrl": {
            "type": "string",
            "nullable": true,
            "description": "The URL of the Institution logo.",
            "format": "uri"
          }
        }
      },
      "Statement": {
        "type": "object",
        "description": "An official Statement file associated with an Account.",
        "title": "Statement",
        "required": [
          "id",
          "accountId",
          "startOn",
          "endOn",
          "url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Statement.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Statement ID",
            "example": "stmt_11zBVgTOO9DR1vbAZxb6Ldb"
          },
          "accountId": {
            "type": "string",
            "description": "The ID of the Account.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Account ID",
            "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
          },
          "startOn": {
            "type": "string",
            "description": "The start date of the Statement period.",
            "format": "date"
          },
          "endOn": {
            "type": "string",
            "description": "The end date of the Statement period.",
            "format": "date"
          },
          "url": {
            "type": "string",
            "description": "The URL of the Statement PDF, with a 1-hour expiration.",
            "format": "uri"
          }
        }
      },
      "ProcessorToken": {
        "type": "object",
        "description": "A Processor Token allows you to authorize a 3rd party payment or data processor to interact with an Account.",
        "title": "ProcessorToken",
        "required": [
          "token",
          "account",
          "environment",
          "issuer",
          "processor"
        ],
        "properties": {
          "token": {
            "type": "string",
            "description": "The Token to send to the 3rd party Processor.",
            "readOnly": true,
            "example": "processor-sandbox-3843c1ef-ad2e-4bae-83ee-795ca123c30b"
          },
          "account": {
            "$ref": "#/components/schemas/ProcessorTokenAccount"
          },
          "environment": {
            "$ref": "#/components/schemas/ProcessorTokenEnvironment"
          },
          "issuer": {
            "type": "string",
            "description": "The issuer of the Processor Token.\n\n`QUILTT` - Quiltt\n\n`MX` - MX\n\n`PLAID` - Plaid\n",
            "enum": [
              "QUILTT",
              "MX",
              "PLAID"
            ],
            "example": "QUILTT"
          },
          "processor": {
            "type": "string",
            "description": "The processor that will be receiving the Token.",
            "enum": [
              "ACHQ",
              "ADP_ROLL",
              "ADYEN",
              "ALLOY",
              "ALPACA",
              "ANSA",
              "APEX_CLEARING",
              "ASTRA",
              "ATOMIC",
              "BAKKT",
              "BLOOM_CREDIT",
              "BOND",
              "BOOM",
              "BRALE",
              "CHECK",
              "CHECKBOOK",
              "CHECKOUT",
              "CIRCLE",
              "DRIVEWEALTH",
              "DWOLLA",
              "ESUSU",
              "FINIX",
              "FORTRESS_TRUST",
              "GALILEO",
              "GEMINI",
              "GUSTO",
              "HIGHNOTE",
              "I2C",
              "KNOT",
              "LAYER",
              "LITHIC",
              "LOANPRO",
              "MARQETA",
              "MOCK",
              "MODERN_TREASURY",
              "MOOV",
              "NUVEI",
              "OCROLUS",
              "PAYNOTE",
              "RISKIFIED",
              "RIZE",
              "SARDINE",
              "SCRIBEUP",
              "SFOX",
              "SILA",
              "SILA_MONEY",
              "SOLID",
              "STAKE",
              "STRADDLE",
              "STRIPE",
              "SVB_API",
              "TABA_PAY",
              "TEAL",
              "TREASURY_PRIME",
              "UNIT",
              "UTB",
              "VESTA",
              "VOPAY",
              "WEDBUSH",
              "WEPAY",
              "WYRE",
              "ZERO_HASH",
              "ZUM_RAILS"
            ],
            "example": "STRADDLE"
          },
          "expiresAt": {
            "type": "string",
            "nullable": true,
            "description": "The UTC date and time when the Processor Token will expire,\nin [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.\n\nNote that some Issuers may not provide an expiration date for the Processor Token.",
            "format": "date-time",
            "readOnly": true,
            "example": "2025-10-20T20:33:23Z"
          }
        }
      },
      "ProcessorTokenAccount": {
        "type": "object",
        "description": "The Account for the Processor Token",
        "title": "ProcessorTokenAccount",
        "additionalProperties": false,
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Account.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Account ID",
            "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "description": "Taxonomic type of the account, usually `SPENDING` or `SAVINGS`"
          }
        }
      },
      "ProcessorTokenEnvironment": {
        "type": "object",
        "description": "The Environment for the Processor Token",
        "title": "ProcessorTokenEnvironment",
        "required": [
          "id",
          "mode"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Environment.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Environment ID",
            "example": "env_1hyoxpVVFib1HngGwKAzIr"
          },
          "mode": {
            "type": "string",
            "description": "The mode of the Environment.",
            "enum": [
              "TEST",
              "SANDBOX",
              "PRODUCTION"
            ],
            "example": "PRODUCTION"
          }
        }
      },
      "ProfileBase": {
        "type": "object",
        "description": "A Profile represents an entity with data in a Quiltt Environment, typically a physical person or company end-user of your application.",
        "title": "ProfileBase",
        "required": [
          "id",
          "uuid",
          "metadata"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "uuid": {
            "type": "string",
            "description": "The UUID of the Profile.",
            "format": "uuid",
            "readOnly": true,
            "title": "Profile UUID",
            "example": "174ec567-2492-4498-a706-504a79437235"
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Custom metadata about the Profile, stored in a 'key-value' format.\n\nSee the [Custom Metadata](https://quiltt.dev/api/custom-metadata) guide for more information and examples.",
            "minProperties": 1,
            "maxProperties": 50,
            "example": {
              "firebaseId": "4Wz7x0QkPdNNzgRgjZ4iIzMKjXo2",
              "avatar": "https://www.gravatar.com/avatar/5658ffccee7f0ebfda2b226238b1eb6e",
              "favoriteColor": "Purple"
            }
          }
        }
      },
      "Profile": {
        "type": "object",
        "description": "A Profile represents an entity with data in a Quiltt Environment, typically a physical person or company end-user of your application.",
        "title": "Profile",
        "required": [
          "id",
          "uuid",
          "metadata",
          "email",
          "phone",
          "name",
          "names",
          "dateOfBirth",
          "address",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "uuid": {
            "type": "string",
            "description": "The UUID of the Profile.",
            "format": "uuid",
            "readOnly": true,
            "title": "Profile UUID",
            "example": "174ec567-2492-4498-a706-504a79437235"
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Custom metadata about the Profile, stored in a 'key-value' format.\n\nSee the [Custom Metadata](https://quiltt.dev/api/custom-metadata) guide for more information and examples.",
            "minProperties": 1,
            "maxProperties": 50,
            "example": {
              "firebaseId": "4Wz7x0QkPdNNzgRgjZ4iIzMKjXo2",
              "avatar": "https://www.gravatar.com/avatar/5658ffccee7f0ebfda2b226238b1eb6e",
              "favoriteColor": "Purple"
            }
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "The email associated with the Profile.\n\nThis field can be used to power passwordless authentication in the Connector.",
            "format": "email",
            "example": "name@example.com"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "The phone number associated with the Profile, in E164 Format.\n\nThis field can be used to power passwordless authentication in the Connector.",
            "format": "E.164",
            "example": "+14155552671"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "A common name or nickname for the Profile.",
            "minLength": 1,
            "example": "Quiltty"
          },
          "names": {
            "type": "object",
            "nullable": true,
            "description": "A physical person's legal name.",
            "required": [
              "full",
              "first",
              "last"
            ],
            "properties": {
              "full": {
                "type": "string",
                "description": "The full legal name, comprised from the given name and surname.",
                "readOnly": true,
                "example": "Quiltty McQuilttface"
              },
              "first": {
                "type": "string",
                "nullable": true,
                "description": "The legal given name.",
                "minLength": 1,
                "example": "Quiltty"
              },
              "last": {
                "type": "string",
                "nullable": true,
                "description": "The legal surname.",
                "minLength": 1,
                "example": "McQuilttface"
              }
            }
          },
          "dateOfBirth": {
            "type": "string",
            "nullable": true,
            "description": "A physical person's date of birth.",
            "format": "date",
            "example": "1991-10-29"
          },
          "address": {
            "type": "object",
            "nullable": true,
            "description": "The legal address associated with the Profile.",
            "required": [
              "line1",
              "city",
              "state",
              "postalCode",
              "countryCode"
            ],
            "properties": {
              "line1": {
                "type": "string",
                "description": "The first line of the address.",
                "minLength": 2,
                "example": "1412 Main St"
              },
              "line2": {
                "type": "string",
                "nullable": true,
                "description": "The second line of the address.",
                "minLength": 1,
                "example": "Suite 100"
              },
              "city": {
                "type": "string",
                "description": "The city.",
                "minLength": 1,
                "example": "Dallas"
              },
              "state": {
                "type": "string",
                "description": "The state or province.",
                "minLength": 2,
                "example": "Texas"
              },
              "postalCode": {
                "type": "string",
                "description": "The postal code or zip code.",
                "minLength": 1,
                "example": "75202"
              },
              "countryCode": {
                "type": "string",
                "description": "ISO 3166-1 alpha-3 country code.\n\n`USA` - United States of America\n",
                "enum": [
                  "USA"
                ],
                "example": "USA"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "description": "The UTC date and time when the Profile was created, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
            "format": "date-time",
            "readOnly": true,
            "example": "2023-10-12T23:55:59Z"
          },
          "updatedAt": {
            "type": "string",
            "deprecated": true,
            "description": "The UTC date and time when the Profile was last updated, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
            "format": "date-time",
            "readOnly": true,
            "example": "2023-10-12T23:55:59Z"
          }
        }
      },
      "ProfileCreateRequest": {
        "type": "object",
        "description": "Options to create a Profile.",
        "title": "ProfileCreateRequest",
        "properties": {
          "uuid": {
            "type": "string",
            "nullable": true,
            "description": "An optional UUID to assign to the newly created Profile. If left blank, a\nrandom UUID will be assigned.\n",
            "format": "uuid",
            "example": "09099066-b03b-4719-b93a-4033eb95ab21"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "The email associated with the Profile.\n\nThis field can be used to power passwordless authentication in the Connector.",
            "format": "email",
            "example": "name@example.com"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "The phone number associated with the Profile, in E164 Format.\n\nThis field can be used to power passwordless authentication in the Connector.",
            "format": "E.164",
            "example": "+14155552671"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "A common name or nickname for the Profile.",
            "minLength": 1,
            "example": "Quiltty"
          },
          "names": {
            "type": "object",
            "nullable": true,
            "description": "A physical person's legal name.",
            "required": [
              "full",
              "first",
              "last"
            ],
            "properties": {
              "full": {
                "type": "string",
                "description": "The full legal name, comprised from the given name and surname.",
                "readOnly": true,
                "example": "Quiltty McQuilttface"
              },
              "first": {
                "type": "string",
                "nullable": true,
                "description": "The legal given name.",
                "minLength": 1,
                "example": "Quiltty"
              },
              "last": {
                "type": "string",
                "nullable": true,
                "description": "The legal surname.",
                "minLength": 1,
                "example": "McQuilttface"
              }
            }
          },
          "dateOfBirth": {
            "type": "string",
            "nullable": true,
            "description": "A physical person's date of birth.",
            "format": "date",
            "example": "1991-10-29"
          },
          "address": {
            "type": "object",
            "nullable": true,
            "description": "The legal address associated with the Profile.",
            "required": [
              "line1",
              "city",
              "state",
              "postalCode",
              "countryCode"
            ],
            "properties": {
              "line1": {
                "type": "string",
                "description": "The first line of the address.",
                "minLength": 2,
                "example": "1412 Main St"
              },
              "line2": {
                "type": "string",
                "nullable": true,
                "description": "The second line of the address.",
                "minLength": 1,
                "example": "Suite 100"
              },
              "city": {
                "type": "string",
                "description": "The city.",
                "minLength": 1,
                "example": "Dallas"
              },
              "state": {
                "type": "string",
                "description": "The state or province.",
                "minLength": 2,
                "example": "Texas"
              },
              "postalCode": {
                "type": "string",
                "description": "The postal code or zip code.",
                "minLength": 1,
                "example": "75202"
              },
              "countryCode": {
                "type": "string",
                "description": "ISO 3166-1 alpha-3 country code.\n\n`USA` - United States of America\n",
                "enum": [
                  "USA"
                ],
                "example": "USA"
              }
            }
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Custom metadata about the Profile, stored in a 'key-value' format.\n\nSee the [Custom Metadata](https://quiltt.dev/api/custom-metadata) guide for more information and examples.",
            "minProperties": 1,
            "maxProperties": 50,
            "example": {
              "firebaseId": "4Wz7x0QkPdNNzgRgjZ4iIzMKjXo2",
              "avatar": "https://www.gravatar.com/avatar/5658ffccee7f0ebfda2b226238b1eb6e",
              "favoriteColor": "Purple"
            }
          }
        }
      },
      "ProfileUpdateRequest": {
        "type": "object",
        "description": "Options to update a Profile.",
        "title": "ProfileUpdateRequest",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true,
            "description": "The email associated with the Profile.\n\nThis field can be used to power passwordless authentication in the Connector.",
            "format": "email",
            "example": "name@example.com"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "description": "The phone number associated with the Profile, in E164 Format.\n\nThis field can be used to power passwordless authentication in the Connector.",
            "format": "E.164",
            "example": "+14155552671"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "A common name or nickname for the Profile.",
            "minLength": 1,
            "example": "Quiltty"
          },
          "names": {
            "type": "object",
            "nullable": true,
            "description": "A physical person's legal name.",
            "required": [
              "full",
              "first",
              "last"
            ],
            "properties": {
              "full": {
                "type": "string",
                "description": "The full legal name, comprised from the given name and surname.",
                "readOnly": true,
                "example": "Quiltty McQuilttface"
              },
              "first": {
                "type": "string",
                "nullable": true,
                "description": "The legal given name.",
                "minLength": 1,
                "example": "Quiltty"
              },
              "last": {
                "type": "string",
                "nullable": true,
                "description": "The legal surname.",
                "minLength": 1,
                "example": "McQuilttface"
              }
            }
          },
          "dateOfBirth": {
            "type": "string",
            "nullable": true,
            "description": "A physical person's date of birth.",
            "format": "date",
            "example": "1991-10-29"
          },
          "address": {
            "type": "object",
            "nullable": true,
            "description": "The legal address associated with the Profile.",
            "required": [
              "line1",
              "city",
              "state",
              "postalCode",
              "countryCode"
            ],
            "properties": {
              "line1": {
                "type": "string",
                "description": "The first line of the address.",
                "minLength": 2,
                "example": "1412 Main St"
              },
              "line2": {
                "type": "string",
                "nullable": true,
                "description": "The second line of the address.",
                "minLength": 1,
                "example": "Suite 100"
              },
              "city": {
                "type": "string",
                "description": "The city.",
                "minLength": 1,
                "example": "Dallas"
              },
              "state": {
                "type": "string",
                "description": "The state or province.",
                "minLength": 2,
                "example": "Texas"
              },
              "postalCode": {
                "type": "string",
                "description": "The postal code or zip code.",
                "minLength": 1,
                "example": "75202"
              },
              "countryCode": {
                "type": "string",
                "description": "ISO 3166-1 alpha-3 country code.\n\n`USA` - United States of America\n",
                "enum": [
                  "USA"
                ],
                "example": "USA"
              }
            }
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Custom metadata about the Profile, stored in a 'key-value' format.\n\nSee the [Custom Metadata](https://quiltt.dev/api/custom-metadata) guide for more information and examples.",
            "minProperties": 1,
            "maxProperties": 50,
            "example": {
              "firebaseId": "4Wz7x0QkPdNNzgRgjZ4iIzMKjXo2",
              "avatar": "https://www.gravatar.com/avatar/5658ffccee7f0ebfda2b226238b1eb6e",
              "favoriteColor": "Purple"
            }
          }
        }
      },
      "RemoteEnrichment": {
        "type": "object",
        "description": "Enrichment Data",
        "title": "RemoteEnrichment",
        "required": [
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "ENRICHMENT"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "api.ntropy.com": {
                "minProperties": 1,
                "properties": {
                  "/v3/transactions": {
                    "properties": {
                      "body": {
                        "additionalProperties": false,
                        "example": {
                          "categories": {
                            "general": "coffee shop"
                          },
                          "createdAt": "2024-03-30T00:00:00",
                          "entities": {
                            "counterparty": {
                              "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                              "logo": "https://logos.ntropy.com/starbucks.com",
                              "mccs": [
                                5814
                              ],
                              "name": "Starbucks",
                              "type": "organization",
                              "website": "starbucks.com"
                            },
                            "intermediaries": [
                              {
                                "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                                "logo": "https://logos.ntropy.com/squareup.com",
                                "mccs": [],
                                "name": "Square, Inc.",
                                "website": "squareup.com"
                              }
                            ]
                          },
                          "id": "xbx8YP14g565Xk",
                          "location": {
                            "rawAddress": "10 Union Square E, New York, New York 10003, United States",
                            "structured": {
                              "appleMapsUrl": "https://maps.apple.com/?q=40.734834,-73.989782",
                              "city": "New York",
                              "country": "United States",
                              "countryCode": "US",
                              "googleMapsUrl": "https://www.google.com/maps/search/?api=1&query=40.734834,-73.989782",
                              "houseNumber": "10",
                              "latitude": 40.734834,
                              "longitude": -73.989782,
                              "postcode": "10003",
                              "state": "New York",
                              "street": "Union Square East"
                            }
                          }
                        },
                        "properties": {
                          "categories": {
                            "additionalProperties": false,
                            "example": {
                              "general": "coffee shop"
                            },
                            "properties": {
                              "accounting": {
                                "description": "The corresponding accounting category. Only available for `business` transactions.",
                                "enum": [
                                  "operational expenses",
                                  "cost of goods sold",
                                  "revenue",
                                  "financing",
                                  "taxes",
                                  "not enough information"
                                ],
                                "title": "AccountingCategory",
                                "type": "string"
                              },
                              "general": {
                                "description": "The category of the transaction. View the valid set of categories for your key [here](../../../categories).",
                                "title": "General",
                                "type": "string"
                              }
                            },
                            "title": "Categories",
                            "type": "object"
                          },
                          "createdAt": {
                            "description": "The timestamp of when the account holder was created.",
                            "format": "date-time",
                            "title": "Created At",
                            "type": "string"
                          },
                          "entities": {
                            "additionalProperties": false,
                            "description": "Entities found by identity identification",
                            "properties": {
                              "counterparty": {
                                "additionalProperties": false,
                                "example": {
                                  "id": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                                  "logo": "https://logos.ntropy.com/starbucks.com",
                                  "mccs": [
                                    5814
                                  ],
                                  "name": "Starbucks",
                                  "type": "organization",
                                  "website": "starbucks.com"
                                },
                                "properties": {
                                  "id": {
                                    "description": "The unique UUID identifier of the entity",
                                    "title": "Id",
                                    "type": "string"
                                  },
                                  "logo": {
                                    "description": "Logo's URL",
                                    "title": "Logo",
                                    "type": "string"
                                  },
                                  "mccs": {
                                    "default": [],
                                    "description": "A list of [Merchant Category Codes](https://en.wikipedia.org/wiki/Merchant_category_code)",
                                    "items": {
                                      "type": "integer"
                                    },
                                    "title": "Mccs",
                                    "type": "array"
                                  },
                                  "name": {
                                    "description": "The name of the entity",
                                    "title": "Name",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "An enumeration.",
                                    "enum": [
                                      "person",
                                      "organization"
                                    ],
                                    "title": "CounterpartyType",
                                    "type": "string"
                                  },
                                  "website": {
                                    "description": "The website URL of the entity",
                                    "title": "Website",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Counterparty",
                                "type": "object"
                              },
                              "intermediaries": {
                                "default": [],
                                "items": {
                                  "additionalProperties": false,
                                  "example": {
                                    "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                                    "logo": "https://logos.ntropy.com/squareup.com",
                                    "mccs": [],
                                    "name": "Square, Inc.",
                                    "website": "squareup.com"
                                  },
                                  "properties": {
                                    "id": {
                                      "description": "The unique UUID identifier of the entity",
                                      "title": "Id",
                                      "type": "string"
                                    },
                                    "logo": {
                                      "description": "Logo's URL",
                                      "title": "Logo",
                                      "type": "string"
                                    },
                                    "mccs": {
                                      "default": [],
                                      "description": "A list of [Merchant Category Codes](https://en.wikipedia.org/wiki/Merchant_category_code)",
                                      "items": {
                                        "type": "integer"
                                      },
                                      "title": "Mccs",
                                      "type": "array"
                                    },
                                    "name": {
                                      "description": "The name of the entity",
                                      "title": "Name",
                                      "type": "string"
                                    },
                                    "website": {
                                      "description": "The website URL of the entity",
                                      "title": "Website",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Intermediary",
                                  "type": "object"
                                },
                                "title": "Intermediaries",
                                "type": "array"
                              }
                            },
                            "title": "Entities",
                            "type": "object"
                          },
                          "error": {
                            "properties": {
                              "code": {
                                "description": "An enumeration.",
                                "enum": [
                                  "account_holder_not_found",
                                  "internal_error"
                                ],
                                "title": "TransactionErrorCode",
                                "type": "string"
                              },
                              "message": {
                                "title": "Message",
                                "type": "string"
                              }
                            },
                            "required": [
                              "code",
                              "message"
                            ],
                            "title": "TransactionError",
                            "type": "object"
                          },
                          "id": {
                            "description": "A unique identifier for the transaction. If two transactions are submitted with the same `id` the most recent one will replace the previous one.",
                            "minLength": 1,
                            "title": "Id",
                            "type": "string"
                          },
                          "location": {
                            "additionalProperties": false,
                            "example": {
                              "rawAddress": "10 Union Square E, New York, New York 10003, United States",
                              "structured": {
                                "appleMapsUrl": "https://maps.apple.com/?q=40.734834,-73.989782",
                                "city": "New York",
                                "country": "United States",
                                "countryCode": "US",
                                "googleMapsUrl": "https://www.google.com/maps/search/?api=1&query=40.734834,-73.989782",
                                "houseNumber": "10",
                                "latitude": 40.734834,
                                "longitude": -73.989782,
                                "postcode": "10003",
                                "state": "New York",
                                "street": "Union Square East"
                              }
                            },
                            "properties": {
                              "rawAddress": {
                                "description": "An unstructured string containing the address",
                                "title": "Raw Address",
                                "type": "string"
                              },
                              "structured": {
                                "description": "When raw is set, a structured representation of it.",
                                "example": {
                                  "appleMapsUrl": "https://maps.apple.com/?q=40.734834,-73.989782",
                                  "city": "New York",
                                  "country": "United States",
                                  "countryCode": "US",
                                  "googleMapsUrl": "https://www.google.com/maps/search/?api=1&query=40.734834,-73.989782",
                                  "houseNumber": "10",
                                  "latitude": 40.734834,
                                  "longitude": -73.989782,
                                  "postcode": "10003",
                                  "state": "New York",
                                  "street": "Union Square East"
                                },
                                "properties": {
                                  "appleMapsUrl": {
                                    "description": "A URL link to view the location on Apple Maps",
                                    "title": "Apple Maps Url",
                                    "type": "string"
                                  },
                                  "city": {
                                    "description": "The city where the location is situated",
                                    "title": "City",
                                    "type": "string"
                                  },
                                  "country": {
                                    "description": "The full name of the country",
                                    "title": "Country",
                                    "type": "string"
                                  },
                                  "countryCode": {
                                    "description": "The country code of the location in ISO 3166-2 format",
                                    "title": "Country Code",
                                    "type": "string"
                                  },
                                  "googleMapsUrl": {
                                    "description": "A URL link to view the location on Google Maps",
                                    "title": "Google Maps Url",
                                    "type": "string"
                                  },
                                  "houseNumber": {
                                    "description": "The house number if, applicable",
                                    "title": "House Number",
                                    "type": "string"
                                  },
                                  "latitude": {
                                    "description": "The latitude coordinate of the location",
                                    "title": "Latitude",
                                    "type": "number"
                                  },
                                  "longitude": {
                                    "description": "The longitude coordinate of the location",
                                    "title": "Longitude",
                                    "type": "number"
                                  },
                                  "postcode": {
                                    "description": "The postal code or ZIP code of the location",
                                    "title": "Postcode",
                                    "type": "string"
                                  },
                                  "state": {
                                    "description": "The state or region of the location",
                                    "title": "State",
                                    "type": "string"
                                  },
                                  "storeNumber": {
                                    "description": "A unique identifier for a specific store or branch, if applicable",
                                    "title": "Store Number",
                                    "type": "string"
                                  },
                                  "street": {
                                    "description": "The street name of the location",
                                    "title": "Street",
                                    "type": "string"
                                  }
                                },
                                "title": "Structured",
                                "type": "object"
                              }
                            },
                            "title": "Location",
                            "type": "object"
                          }
                        },
                        "required": [
                          "createdAt",
                          "id"
                        ],
                        "title": "EnrichedTransaction",
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Remote ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Enrichment data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "findmoney.fingoal.com": {
                "minProperties": 1,
                "properties": {
                  "/v3/cleanup": {
                    "properties": {
                      "body": {
                        "properties": {
                          "accountid": {
                            "description": "The ID of the account associated with the transaction",
                            "type": "string"
                          },
                          "amountnum": {
                            "description": "The transaction's USD amount",
                            "type": "number"
                          },
                          "category": {
                            "description": "The most applicable categorization for the transaction",
                            "type": "string"
                          },
                          "categoryId": {
                            "description": "The numeric ID of the transaction's category",
                            "type": "number"
                          },
                          "categoryLabel": {
                            "deprecated": true,
                            "description": "A cascading hierarchy of the transaction's categories, from high-level to detail-level categorization. This field is deprecated and not recommended for use, as it may not reflect more correct information available in other 'category' fields.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "clientId": {
                            "description": "Your FinGoal client ID",
                            "type": "string"
                          },
                          "container": {
                            "description": "A high-level categorization of the account type. Eg, 'bank'",
                            "type": "string"
                          },
                          "date": {
                            "description": "The date on which the transaction took place",
                            "format": "date-time",
                            "type": "string"
                          },
                          "detailCategoryId": {
                            "description": "The numeric ID of the transaction's detail category",
                            "type": "number"
                          },
                          "guid": {
                            "description": "The transaction's globally unique FinSight API issued ID",
                            "type": "string"
                          },
                          "highLevelCategoryId": {
                            "description": "The numeric ID of the transaction's high level category",
                            "type": "number"
                          },
                          "isPhysical": {
                            "description": "Whether the transaction was made at a physical location, or online",
                            "type": "boolean"
                          },
                          "isRecurring": {
                            "description": "Whether the transaction is set to recur on a fixed interval",
                            "type": "boolean"
                          },
                          "merchantAddress1": {
                            "description": "The street address of the merchant associated with the transaction",
                            "type": "string"
                          },
                          "merchantCity": {
                            "description": "The name of the city where the merchant is located",
                            "type": "string"
                          },
                          "merchantCountry": {
                            "description": "The name of the country where the merchant is located",
                            "type": "string"
                          },
                          "merchantLatitude": {
                            "description": "The latitude of the merchant",
                            "type": "string"
                          },
                          "merchantLogoURL": {
                            "description": "The URL resource for the merchant's logo",
                            "type": "string"
                          },
                          "merchantLongitude": {
                            "description": "The longitude of the merchant",
                            "type": "string"
                          },
                          "merchantName": {
                            "description": "The name of the merchant associated with the transaction",
                            "type": "string"
                          },
                          "merchantPhoneNumber": {
                            "description": "The phone number of the merchant associated with the transaction",
                            "type": "string"
                          },
                          "merchantState": {
                            "description": "The name of the state where the merchant is located",
                            "type": "string"
                          },
                          "merchantType": {
                            "description": "The merchant's type",
                            "type": "string"
                          },
                          "merchantZip": {
                            "description": "The ZIP code where the merchant is located",
                            "type": "string"
                          },
                          "originalDescription": {
                            "description": "The transaction description as received. This will not change",
                            "type": "string"
                          },
                          "receiptDate": {
                            "description": "The date on which FinSight API first received the transaction",
                            "format": "date-time",
                            "type": "string"
                          },
                          "requestId": {
                            "description": "A unique ID for the request the transaction came in with, for debugging purposes",
                            "type": "string"
                          },
                          "simpleDescription": {
                            "description": "An easy-to-understand, plain-language transaction description",
                            "type": "string"
                          },
                          "sourceId": {
                            "description": "The source of the transaction",
                            "type": "string"
                          },
                          "subType": {
                            "description": "A more detailed classification that provides further information on the type of transaction.",
                            "type": "string"
                          },
                          "transactionTags": {
                            "description": "The FinSight API issued tags for the transaction",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "transactionid": {
                            "description": "The ID of the transaction as it was originally submitted",
                            "type": "string"
                          },
                          "type": {
                            "description": "An attribute describing the nature of the intent behind the transaction.",
                            "type": "string"
                          },
                          "uid": {
                            "description": "The ID of the user associated with the transaction, as originally submitted",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Remote ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Enrichment data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemoteEnrichmentRequest": {
        "type": "object",
        "description": "Options to Enrich Transactions",
        "title": "RemoteEnrichmentRequest",
        "required": [
          "profileId",
          "accountType",
          "provider",
          "payload"
        ],
        "properties": {
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "accountType": {
            "type": "string",
            "description": "The Account type the payload is associated with.",
            "enum": [
              "CHECKING",
              "SAVINGS",
              "CREDIT_CARD"
            ]
          },
          "provider": {
            "type": "string",
            "description": "Enum for the API Provider of the payload to be enriched.\n\nIf your provider is not listed, format your data to match the QuilttPayload schema, and supply `GENERIC`.",
            "enum": [
              "AKOYA",
              "FINICITY",
              "GENERIC",
              "MX",
              "PLAID",
              "TREASURY_PRIME"
            ]
          },
          "payload": {
            "type": "object",
            "description": "The Transactions payload matching the API Provider's schema.",
            "oneOf": [
              {
                "type": "object",
                "description": "Transactions Payload in Quiltt's schema",
                "title": "QuilttPayload",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "title": "Quiltt Transaction",
                      "required": [
                        "id",
                        "accountId",
                        "description",
                        "currencyCode",
                        "amount",
                        "date"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "A unique ID identifying the transaction.",
                          "minLength": 1
                        },
                        "accountId": {
                          "type": "string",
                          "description": "An ID associated with the Account or Card",
                          "minLength": 1
                        },
                        "amount": {
                          "type": "string",
                          "description": "Transaction amount. Positive for credit, negative for debit.",
                          "example": "3.14"
                        },
                        "currencyCode": {
                          "type": "string",
                          "description": "Transaction currency, in ISO-4217.",
                          "example": "USD"
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Transaction date, in ISO-8601 format.",
                          "example": "2025-05-20"
                        },
                        "description": {
                          "type": "string",
                          "description": "Transaction description.",
                          "minLength": 3
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "description": "Transactions Payload in Treasury Prime's schema",
                "title": "TreasuryPrimePayload",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "title": "Treasury Prime Transaction",
                      "properties": {
                        "achId": {
                          "type": "string",
                          "description": "The ID of the ACH object that originated this transaction, if any. Otherwise null. Filterable",
                          "nullable": true
                        },
                        "amount": {
                          "type": "string",
                          "description": "Transaction amount. Positive values indicate a credit while negative values indicate a debit. Note that transactions with type hold have an amount, but they do not change the balance."
                        },
                        "balance": {
                          "type": "string",
                          "description": "Account balance immediately after this transaction. Transactions of type hold do not affect the balance."
                        },
                        "billpayPaymentId": {
                          "type": "string",
                          "description": "The ID of the Bill Pay object that originated this transaction, if any. Otherwise null.",
                          "nullable": true
                        },
                        "bookId": {
                          "type": "string",
                          "description": "The ID of the Book Transfer object that originated this transaction, if any. Otherwise null. Filterable",
                          "nullable": true
                        },
                        "cardId": {
                          "type": "string",
                          "description": "The ID of the Card Object that originated this transaction, if any. Otherwise null. Filterable",
                          "nullable": true
                        },
                        "category": {
                          "type": "string",
                          "description": "One of: interest, fees, or null. PATCH this field to indicate if the transaction is an interest or fee payment.",
                          "nullable": true
                        },
                        "checkId": {
                          "type": "string",
                          "description": "The ID of the Check Deposit object that originated this transaction, if any. Otherwise null. Filterable",
                          "nullable": true
                        },
                        "checkNumber": {
                          "type": "string",
                          "description": "If this transaction is for an outbound check, the number of the check. Otherwise null.",
                          "nullable": true
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date of the transaction, ISO 8601 format (\"YYYY-MM-DD\"). Received directly from the bank, often without time zone adjustment. Might differ in date compared to extended_timestamp and extended_timestamp_precise due to timezones."
                        },
                        "extendedTimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp of the transaction, ISO 8601 format (\"YYYY-MM-DDThh:mm:ssZ\"). Limited availability. Always in UTC."
                        },
                        "extendedTimestampPrecise": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp of the transaction, ISO 8601 format with subsecond precision (\"YYYY-MM-DDThh:mm:ss.SSS[SSS]Z\"). The precision could be millisecond or microsecond depending on source data. Limited availability. Always in UTC."
                        },
                        "desc": {
                          "type": "string",
                          "description": "Transaction description."
                        },
                        "humanReadableDescription": {
                          "type": "string",
                          "description": "This field is updated every minute for new transactions to provide a user-friendly description. Note, there may be a short period (less than 60 seconds) after a transaction is accessible through our API where the human_readable_description field is not yet populated."
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "A unique fingerprint for this transaction."
                        },
                        "id": {
                          "type": "string",
                          "description": "ID for this transaction."
                        },
                        "incomingACHId": {
                          "type": "string",
                          "description": "The ID of the Incoming ACH object that originated this transaction, if any. Otherwise null. Filterable",
                          "nullable": true
                        },
                        "incomingWire": {
                          "type": "string",
                          "description": "Data (see below for definition) related to the wire that originated this transaction, if any. Otherwise null.",
                          "nullable": true
                        },
                        "incomingWireId": {
                          "type": "string",
                          "description": "The ID of the Incoming Wire object that originated this transaction, if any. Otherwise null. Filterable",
                          "nullable": true
                        },
                        "issuedCheckId": {
                          "type": "string",
                          "description": "The ID of the Issued Check Object that originated this transaction, if any. Otherwise null. Filterable",
                          "nullable": true
                        },
                        "networkTransferId": {
                          "type": "string",
                          "description": "The ID of the Network Transfer that originated this transaction, if any. Otherwise null. Filterable",
                          "nullable": true
                        },
                        "relatedTransferIds": {
                          "type": "array",
                          "description": "The IDs of the related transactions, if any. Otherwise null.",
                          "nullable": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "summary": {
                          "type": "string",
                          "description": "Summary description of the transaction."
                        },
                        "traceId": {
                          "type": "string",
                          "description": "A common id used to tie multiple, related transactions together. Currently used to unite hold andhold_release transactions to a debit and to link transactions to their related card events. Filterable"
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of transaction. One of charge,deposit, hold,hold_release, interest,payment, reversal,withdrawal, or null. Filterable",
                          "nullable": true
                        },
                        "typeSource": {
                          "type": "string",
                          "description": "The type of payment that initiated this transaction, if any. One of ach,bank, book,card, check, orwire. Otherwise null. Limited availability",
                          "nullable": true
                        },
                        "userdata": {
                          "type": "object",
                          "description": "Optional arbitrary user data.",
                          "additionalProperties": true
                        },
                        "wire": {
                          "type": "string",
                          "description": "For wire transactions, the Fedwire description, if any. Otherwise null.",
                          "nullable": true
                        },
                        "wireId": {
                          "type": "string",
                          "description": "The ID of the Wire object that originated this transaction, if any. Otherwise null. Filterable",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "RemoteAccount": {
        "type": "object",
        "description": "Remote Data about the Account.",
        "title": "RemoteAccount",
        "required": [
          "accountId",
          "profileId"
        ],
        "properties": {
          "accountId": {
            "type": "string",
            "description": "The ID of the Account.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Account ID",
            "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          }
        }
      },
      "RemoteAccounts": {
        "type": "array",
        "description": "Represents a list of Accounts with Remote Data.",
        "title": "RemoteAccounts",
        "items": {
          "$ref": "#/components/schemas/RemoteAccount"
        }
      },
      "RemoteConnection": {
        "type": "object",
        "description": "Remote Data about the Connection.",
        "title": "RemoteConnection",
        "required": [
          "connectionId",
          "profileId"
        ],
        "properties": {
          "connectionId": {
            "type": "string",
            "description": "The ID of the Connection.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Connection ID",
            "example": "conn_14TJiFDKRJlPiBHuukUIlXZ"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          }
        }
      },
      "RemoteConnections": {
        "type": "array",
        "description": "Represents a list of Connections with Remote Data.",
        "title": "RemoteConnections",
        "items": {
          "$ref": "#/components/schemas/RemoteConnection"
        }
      },
      "RemoteHolding": {
        "type": "object",
        "description": "Remote Data about the Holding.",
        "title": "RemoteHolding",
        "required": [
          "holdingId",
          "profileId"
        ],
        "properties": {
          "holdingId": {
            "type": "string",
            "description": "The ID of the Holding.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Holding ID",
            "example": "hld_12Hz9Dz7vEvM9AuljYvhmPc"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          }
        }
      },
      "RemoteHoldings": {
        "type": "array",
        "description": "Represents a list of Holdings with Remote Data.",
        "title": "RemoteHoldings",
        "items": {
          "$ref": "#/components/schemas/RemoteHolding"
        }
      },
      "RemoteTransaction": {
        "type": "object",
        "description": "Remote Data about the Transaction.",
        "title": "RemoteTransaction",
        "required": [
          "transactionId",
          "profileId"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          }
        }
      },
      "RemoteTransactions": {
        "type": "array",
        "description": "Represents a list of Transactions with Remote Data.",
        "title": "RemoteTransactions",
        "items": {
          "$ref": "#/components/schemas/RemoteTransaction"
        }
      },
      "RemoteProfile": {
        "type": "object",
        "description": "Remote Data about the Profile.",
        "title": "RemoteProfile",
        "required": [
          "profileId"
        ],
        "properties": {
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          }
        }
      },
      "RemoteProfiles": {
        "type": "array",
        "description": "Represents a list of Profiles with Remote Data.",
        "title": "RemoteProfiles",
        "items": {
          "$ref": "#/components/schemas/RemoteProfile"
        }
      },
      "RemoteAkoyaAccount": {
        "type": "object",
        "description": "Remote Data about the Account.",
        "title": "RemoteAkoyaAccount",
        "required": [
          "accountId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "accountId": {
            "type": "string",
            "description": "The ID of the Account.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Account ID",
            "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "AKOYA"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "products.ddp.akoya.com": {
                "minProperties": 1,
                "properties": {
                  "/accounts-info/v2/{provider_id}": {
                    "properties": {
                      "body": {
                        "anyOf": [
                          {
                            "properties": {
                              "depositAccount": {
                                "description": "Deposit Account",
                                "properties": {
                                  "accountId": {
                                    "description": "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution.",
                                    "type": "string"
                                  },
                                  "accountNumberDisplay": {
                                    "description": "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider.",
                                    "type": "string"
                                  },
                                  "accountType": {
                                    "description": "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc.",
                                    "type": "string"
                                  },
                                  "annualPercentageYield": {
                                    "description": "Annual Percentage Yield. If account type = CD, required.",
                                    "type": "number"
                                  },
                                  "balanceType": {
                                    "description": "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)",
                                    "enum": [
                                      "ASSET",
                                      "LIABILITY"
                                    ],
                                    "type": "string"
                                  },
                                  "currency": {
                                    "description": "Indicates the currency code used by the account. May also include currency rate.",
                                    "properties": {
                                      "currencyCode": {
                                        "description": "Iso 4217 currency code.",
                                        "type": "string"
                                      },
                                      "currencyRate": {
                                        "description": "Currency rate between original and converted currency.",
                                        "type": "number"
                                      },
                                      "originalCurrencyCode": {
                                        "description": "Iso 4217 currency code.",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Currency Entity",
                                    "type": "object"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "error": {
                                    "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account.",
                                    "properties": {
                                      "code": {
                                        "description": "Long term persistent identifier which can be used to trace error condition back to log information",
                                        "type": "integer"
                                      },
                                      "message": {
                                        "description": "End user displayable information which might help the customer diagnose an error",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Error Entity",
                                    "type": "object"
                                  },
                                  "fiAttributes": {
                                    "items": {
                                      "description": "Data provider-specific attribute",
                                      "properties": {
                                        "name": {
                                          "description": "Name of attribute",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of attribute",
                                          "type": "string"
                                        }
                                      },
                                      "title": "FiAttribute Entity",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "interestRate": {
                                    "description": "Interest Rate of Account",
                                    "type": "number"
                                  },
                                  "interestRateAsOf": {
                                    "description": "Date of account’s interest rate",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "interestRateType": {
                                    "description": "The type of interest rate. FIXED or VARIABLE.",
                                    "enum": [
                                      "FIXED",
                                      "VARIABLE"
                                    ],
                                    "type": "string"
                                  },
                                  "lastActivityDate": {
                                    "description": "Date that last transaction occurred on account",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "lineOfBusiness": {
                                    "description": "The line of business, such as consumer, consumer joint, small business, corporate, etc.",
                                    "type": "string"
                                  },
                                  "maturityDate": {
                                    "description": "Maturity date for CDs. If account type = CD, required.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "micrNumber": {
                                    "description": "MICR Number",
                                    "type": "string"
                                  },
                                  "nickname": {
                                    "description": "Name given by the user. Used in UIs to assist in account selection",
                                    "type": "string"
                                  },
                                  "parentAccountId": {
                                    "description": "Long-term persistent identity of the parent account. This is used to group accounts.",
                                    "type": "string"
                                  },
                                  "priorInterestRate": {
                                    "description": "Previous Interest Rate of Account",
                                    "type": "number"
                                  },
                                  "productName": {
                                    "description": "Marketed product name for this account.  Used in UIs to assist in account selection          ",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "The status of an account.",
                                    "enum": [
                                      "OPEN",
                                      "CLOSED",
                                      "PENDINGOPEN",
                                      "PENDINGCLOSE",
                                      "DELINQUENT",
                                      "PAID",
                                      "NEGATIVECURRENTBALANCE"
                                    ],
                                    "type": "string"
                                  },
                                  "term": {
                                    "description": "Term of CD in months",
                                    "type": "integer"
                                  },
                                  "transferIn": {
                                    "description": "Account is eligible for incoming transfers",
                                    "type": "boolean"
                                  },
                                  "transferOut": {
                                    "description": "Account is eligible for outgoing transfers",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "accountId"
                                ],
                                "title": "DepositAccount",
                                "type": "object"
                              }
                            }
                          },
                          {
                            "properties": {
                              "loanAccount": {
                                "description": "Loan Account",
                                "properties": {
                                  "accountId": {
                                    "description": "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution.",
                                    "type": "string"
                                  },
                                  "accountNumberDisplay": {
                                    "description": "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider.",
                                    "type": "string"
                                  },
                                  "accountType": {
                                    "description": "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc.",
                                    "type": "string"
                                  },
                                  "balanceType": {
                                    "description": "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)",
                                    "enum": [
                                      "ASSET",
                                      "LIABILITY"
                                    ],
                                    "type": "string"
                                  },
                                  "compoundingPeriod": {
                                    "enum": [
                                      "DAILY",
                                      "WEEKLY",
                                      "BIWEEKLY",
                                      "SEMIMONTHLY",
                                      "MONTHLY",
                                      "SEMIANNUALLY",
                                      "ANNUALLY"
                                    ],
                                    "type": "string"
                                  },
                                  "currency": {
                                    "description": "Indicates the currency code used by the account. May also include currency rate.",
                                    "properties": {
                                      "currencyCode": {
                                        "description": "Iso 4217 currency code.",
                                        "type": "string"
                                      },
                                      "currencyRate": {
                                        "description": "Currency rate between original and converted currency.",
                                        "type": "number"
                                      },
                                      "originalCurrencyCode": {
                                        "description": "Iso 4217 currency code.",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Currency Entity",
                                    "type": "object"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "error": {
                                    "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account.",
                                    "properties": {
                                      "code": {
                                        "description": "Long term persistent identifier which can be used to trace error condition back to log information",
                                        "type": "integer"
                                      },
                                      "message": {
                                        "description": "End user displayable information which might help the customer diagnose an error",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Error Entity",
                                    "type": "object"
                                  },
                                  "fiAttributes": {
                                    "items": {
                                      "description": "Data provider-specific attribute",
                                      "properties": {
                                        "name": {
                                          "description": "Name of attribute",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of attribute",
                                          "type": "string"
                                        }
                                      },
                                      "title": "FiAttribute Entity",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "interestRate": {
                                    "description": "Interest Rate of Account",
                                    "type": "number"
                                  },
                                  "interestRateAsOf": {
                                    "description": "Date of account’s interest rate",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "interestRateType": {
                                    "description": "The type of interest rate. FIXED or VARIABLE.",
                                    "enum": [
                                      "FIXED",
                                      "VARIABLE"
                                    ],
                                    "type": "string"
                                  },
                                  "lastActivityDate": {
                                    "description": "Date that last transaction occurred on account",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "lineOfBusiness": {
                                    "description": "The line of business, such as consumer, consumer joint, small business, corporate, etc.",
                                    "type": "string"
                                  },
                                  "loanTerm": {
                                    "description": "Term of loan in months",
                                    "type": "integer"
                                  },
                                  "maturityDate": {
                                    "description": "Maturity date is required for CDs",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "micrNumber": {
                                    "description": "MICR Number",
                                    "type": "string"
                                  },
                                  "nickname": {
                                    "description": "Name given by the user. Used in UIs to assist in account selection",
                                    "type": "string"
                                  },
                                  "originatingDate": {
                                    "description": "Loan origination date",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "parentAccountId": {
                                    "description": "Long-term persistent identity of the parent account. This is used to group accounts.",
                                    "type": "string"
                                  },
                                  "paymentFrequency": {
                                    "enum": [
                                      "DAILY",
                                      "WEEKLY",
                                      "BIWEEKLY",
                                      "SEMIMONTHLY",
                                      "MONTHLY",
                                      "SEMIANNUALLY",
                                      "ANNUALLY"
                                    ],
                                    "type": "string"
                                  },
                                  "priorInterestRate": {
                                    "description": "Previous Interest Rate of Account",
                                    "type": "number"
                                  },
                                  "productName": {
                                    "description": "Marketed product name for this account.  Used in UIs to assist in account selection          ",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "The status of an account.",
                                    "enum": [
                                      "OPEN",
                                      "CLOSED",
                                      "PENDINGOPEN",
                                      "PENDINGCLOSE",
                                      "DELINQUENT",
                                      "PAID",
                                      "NEGATIVECURRENTBALANCE"
                                    ],
                                    "type": "string"
                                  },
                                  "totalNumberOfPayments": {
                                    "description": "Total number of payments",
                                    "type": "integer"
                                  },
                                  "transferIn": {
                                    "description": "Account is eligible for incoming transfers",
                                    "type": "boolean"
                                  },
                                  "transferOut": {
                                    "description": "Account is eligible for outgoing transfers",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "accountId"
                                ],
                                "title": "LoanAccount",
                                "type": "object"
                              }
                            }
                          },
                          {
                            "properties": {
                              "locAccount": {
                                "description": "Line of Credit Account",
                                "properties": {
                                  "accountId": {
                                    "description": "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution.",
                                    "type": "string"
                                  },
                                  "accountNumberDisplay": {
                                    "description": "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider.",
                                    "type": "string"
                                  },
                                  "accountType": {
                                    "description": "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc.",
                                    "type": "string"
                                  },
                                  "balanceType": {
                                    "description": "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)",
                                    "enum": [
                                      "ASSET",
                                      "LIABILITY"
                                    ],
                                    "type": "string"
                                  },
                                  "currency": {
                                    "description": "Indicates the currency code used by the account. May also include currency rate.",
                                    "properties": {
                                      "currencyCode": {
                                        "description": "Iso 4217 currency code.",
                                        "type": "string"
                                      },
                                      "currencyRate": {
                                        "description": "Currency rate between original and converted currency.",
                                        "type": "number"
                                      },
                                      "originalCurrencyCode": {
                                        "description": "Iso 4217 currency code.",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Currency Entity",
                                    "type": "object"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "error": {
                                    "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account.",
                                    "properties": {
                                      "code": {
                                        "description": "Long term persistent identifier which can be used to trace error condition back to log information",
                                        "type": "integer"
                                      },
                                      "message": {
                                        "description": "End user displayable information which might help the customer diagnose an error",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Error Entity",
                                    "type": "object"
                                  },
                                  "fiAttributes": {
                                    "items": {
                                      "description": "Data provider-specific attribute",
                                      "properties": {
                                        "name": {
                                          "description": "Name of attribute",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of attribute",
                                          "type": "string"
                                        }
                                      },
                                      "title": "FiAttribute Entity",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "interestRate": {
                                    "description": "Interest Rate of Account",
                                    "type": "number"
                                  },
                                  "interestRateAsOf": {
                                    "description": "Date of account’s interest rate",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "interestRateType": {
                                    "description": "The type of interest rate. FIXED or VARIABLE.",
                                    "enum": [
                                      "FIXED",
                                      "VARIABLE"
                                    ],
                                    "type": "string"
                                  },
                                  "lastActivityDate": {
                                    "description": "Date that last transaction occurred on account",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "lineOfBusiness": {
                                    "description": "The line of business, such as consumer, consumer joint, small business, corporate, etc.",
                                    "type": "string"
                                  },
                                  "micrNumber": {
                                    "description": "MICR Number",
                                    "type": "string"
                                  },
                                  "nickname": {
                                    "description": "Name given by the user. Used in UIs to assist in account selection",
                                    "type": "string"
                                  },
                                  "parentAccountId": {
                                    "description": "Long-term persistent identity of the parent account. This is used to group accounts.",
                                    "type": "string"
                                  },
                                  "priorInterestRate": {
                                    "description": "Previous Interest Rate of Account",
                                    "type": "number"
                                  },
                                  "productName": {
                                    "description": "Marketed product name for this account.  Used in UIs to assist in account selection          ",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "The status of an account.",
                                    "enum": [
                                      "OPEN",
                                      "CLOSED",
                                      "PENDINGOPEN",
                                      "PENDINGCLOSE",
                                      "DELINQUENT",
                                      "PAID",
                                      "NEGATIVECURRENTBALANCE"
                                    ],
                                    "type": "string"
                                  },
                                  "transferIn": {
                                    "description": "Account is eligible for incoming transfers",
                                    "type": "boolean"
                                  },
                                  "transferOut": {
                                    "description": "Account is eligible for outgoing transfers",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "accountId"
                                ],
                                "title": "LocAccount",
                                "type": "object"
                              }
                            }
                          },
                          {
                            "properties": {
                              "investmentAccount": {
                                "description": "Investment Account",
                                "properties": {
                                  "accountId": {
                                    "description": "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution.",
                                    "type": "string"
                                  },
                                  "accountNumberDisplay": {
                                    "description": "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider.",
                                    "type": "string"
                                  },
                                  "accountType": {
                                    "description": "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc.",
                                    "type": "string"
                                  },
                                  "allowedCheckWriting": {
                                    "description": "Check writing privileges",
                                    "type": "boolean"
                                  },
                                  "allowedOptionTrade": {
                                    "description": "Allowed to trade options",
                                    "type": "boolean"
                                  },
                                  "balanceType": {
                                    "description": "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)",
                                    "enum": [
                                      "ASSET",
                                      "LIABILITY"
                                    ],
                                    "type": "string"
                                  },
                                  "brokerId": {
                                    "description": "Unique identifier FI",
                                    "type": "string"
                                  },
                                  "calendarYearFor401K": {
                                    "description": "Date for this calendar year for 401K account",
                                    "type": "string"
                                  },
                                  "currency": {
                                    "description": "Indicates the currency code used by the account. May also include currency rate.",
                                    "properties": {
                                      "currencyCode": {
                                        "description": "Iso 4217 currency code.",
                                        "type": "string"
                                      },
                                      "currencyRate": {
                                        "description": "Currency rate between original and converted currency.",
                                        "type": "number"
                                      },
                                      "originalCurrencyCode": {
                                        "description": "Iso 4217 currency code.",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Currency Entity",
                                    "type": "object"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "employerName": {
                                    "description": "Name of the employer in investment 401k Plan",
                                    "type": "string"
                                  },
                                  "error": {
                                    "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account.",
                                    "properties": {
                                      "code": {
                                        "description": "Long term persistent identifier which can be used to trace error condition back to log information",
                                        "type": "integer"
                                      },
                                      "message": {
                                        "description": "End user displayable information which might help the customer diagnose an error",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Error Entity",
                                    "type": "object"
                                  },
                                  "fiAttributes": {
                                    "items": {
                                      "description": "Data provider-specific attribute",
                                      "properties": {
                                        "name": {
                                          "description": "Name of attribute",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of attribute",
                                          "type": "string"
                                        }
                                      },
                                      "title": "FiAttribute Entity",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "interestRate": {
                                    "description": "Interest Rate of Account",
                                    "type": "number"
                                  },
                                  "interestRateAsOf": {
                                    "description": "Date of account’s interest rate",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "interestRateType": {
                                    "description": "The type of interest rate. FIXED or VARIABLE.",
                                    "enum": [
                                      "FIXED",
                                      "VARIABLE"
                                    ],
                                    "type": "string"
                                  },
                                  "lastActivityDate": {
                                    "description": "Date that last transaction occurred on account",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "lineOfBusiness": {
                                    "description": "The line of business, such as consumer, consumer joint, small business, corporate, etc.",
                                    "type": "string"
                                  },
                                  "margin": {
                                    "description": "Margin trading is allowed",
                                    "type": "boolean"
                                  },
                                  "micrNumber": {
                                    "description": "MICR Number",
                                    "type": "string"
                                  },
                                  "nickname": {
                                    "description": "Name given by the user. Used in UIs to assist in account selection",
                                    "type": "string"
                                  },
                                  "parentAccountId": {
                                    "description": "Long-term persistent identity of the parent account. This is used to group accounts.",
                                    "type": "string"
                                  },
                                  "planId": {
                                    "description": "Plan number for Investment 401k plan",
                                    "type": "string"
                                  },
                                  "priorInterestRate": {
                                    "description": "Previous Interest Rate of Account",
                                    "type": "number"
                                  },
                                  "productName": {
                                    "description": "Marketed product name for this account.  Used in UIs to assist in account selection          ",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "The status of an account.",
                                    "enum": [
                                      "OPEN",
                                      "CLOSED",
                                      "PENDINGOPEN",
                                      "PENDINGCLOSE",
                                      "DELINQUENT",
                                      "PAID",
                                      "NEGATIVECURRENTBALANCE"
                                    ],
                                    "type": "string"
                                  },
                                  "transferIn": {
                                    "description": "Account is eligible for incoming transfers",
                                    "type": "boolean"
                                  },
                                  "transferOut": {
                                    "description": "Account is eligible for outgoing transfers",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "accountId"
                                ],
                                "title": "InvestmentAccount",
                                "type": "object"
                              }
                            }
                          },
                          {
                            "properties": {
                              "insuranceAccount": {
                                "description": "Insurance Account",
                                "properties": {
                                  "accountCategory": {
                                    "description": "The account category of the insurance account. Possible enums: DEPOSIT_ACCOUNT, INVESTMENT_ACCOUNT, LOAN_ACCOUNT, LOC_ACCOUNT, INSURANCE_ACCOUNT",
                                    "enum": [
                                      "DEPOSIT_ACCOUNT",
                                      "INVESTMENT_ACCOUNT",
                                      "LOAN_ACCOUNT",
                                      "LOC_ACCOUNT",
                                      "INSURANCE_ACCOUNT"
                                    ],
                                    "type": "string"
                                  },
                                  "accountId": {
                                    "description": "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution.",
                                    "type": "string"
                                  },
                                  "accountNumberDisplay": {
                                    "description": "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider.",
                                    "type": "string"
                                  },
                                  "accountType": {
                                    "description": "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc.",
                                    "type": "string"
                                  },
                                  "balanceType": {
                                    "description": "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)",
                                    "enum": [
                                      "ASSET",
                                      "LIABILITY"
                                    ],
                                    "type": "string"
                                  },
                                  "currency": {
                                    "description": "Indicates the currency code used by the account. May also include currency rate.",
                                    "properties": {
                                      "currencyCode": {
                                        "description": "Iso 4217 currency code.",
                                        "type": "string"
                                      },
                                      "currencyRate": {
                                        "description": "Currency rate between original and converted currency.",
                                        "type": "number"
                                      },
                                      "originalCurrencyCode": {
                                        "description": "Iso 4217 currency code.",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Currency Entity",
                                    "type": "object"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "error": {
                                    "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account.",
                                    "properties": {
                                      "code": {
                                        "description": "Long term persistent identifier which can be used to trace error condition back to log information",
                                        "type": "integer"
                                      },
                                      "message": {
                                        "description": "End user displayable information which might help the customer diagnose an error",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Error Entity",
                                    "type": "object"
                                  },
                                  "fiAttributes": {
                                    "items": {
                                      "description": "Data provider-specific attribute",
                                      "properties": {
                                        "name": {
                                          "description": "Name of attribute",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of attribute",
                                          "type": "string"
                                        }
                                      },
                                      "title": "FiAttribute Entity",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "interestRate": {
                                    "description": "Interest Rate of Account",
                                    "type": "number"
                                  },
                                  "interestRateAsOf": {
                                    "description": "Date of account’s interest rate",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "interestRateType": {
                                    "description": "The type of interest rate. FIXED or VARIABLE.",
                                    "enum": [
                                      "FIXED",
                                      "VARIABLE"
                                    ],
                                    "type": "string"
                                  },
                                  "lastActivityDate": {
                                    "description": "Date that last transaction occurred on account",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "lineOfBusiness": {
                                    "description": "The line of business, such as consumer, consumer joint, small business, corporate, etc.",
                                    "type": "string"
                                  },
                                  "micrNumber": {
                                    "description": "MICR Number",
                                    "type": "string"
                                  },
                                  "nickname": {
                                    "description": "Name given by the user. Used in UIs to assist in account selection",
                                    "type": "string"
                                  },
                                  "parentAccountId": {
                                    "description": "Long-term persistent identity of the parent account. This is used to group accounts.",
                                    "type": "string"
                                  },
                                  "priorInterestRate": {
                                    "description": "Previous Interest Rate of Account",
                                    "type": "number"
                                  },
                                  "productName": {
                                    "description": "Marketed product name for this account.  Used in UIs to assist in account selection          ",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "The status of an account.",
                                    "enum": [
                                      "OPEN",
                                      "CLOSED",
                                      "PENDINGOPEN",
                                      "PENDINGCLOSE",
                                      "DELINQUENT",
                                      "PAID",
                                      "NEGATIVECURRENTBALANCE"
                                    ],
                                    "type": "string"
                                  },
                                  "transferIn": {
                                    "description": "Account is eligible for incoming transfers",
                                    "type": "boolean"
                                  },
                                  "transferOut": {
                                    "description": "Account is eligible for outgoing transfers",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "accountId"
                                ],
                                "title": "InsuranceAccount",
                                "type": "object"
                              }
                            }
                          },
                          {
                            "properties": {
                              "annuityAccount": {
                                "description": "Annuity Account",
                                "properties": {
                                  "accountId": {
                                    "description": "Long-term persistent identity of the account. Not an account number. This identity must be unique to the owning institution.",
                                    "type": "string"
                                  },
                                  "accountNumberDisplay": {
                                    "description": "Account display number for the end user’s handle at owning institution. This is to be displayed by the Interface Provider.",
                                    "type": "string"
                                  },
                                  "accountType": {
                                    "description": "The type of an account. For instance, CHECKING, SAVINGS, 401K, etc.",
                                    "type": "string"
                                  },
                                  "annuityProductType": {
                                    "enum": [
                                      "CURRENCY",
                                      "SHARES"
                                    ],
                                    "type": "string"
                                  },
                                  "annuityValueBasis": {
                                    "enum": [
                                      "FIXED",
                                      "VARIABLE"
                                    ],
                                    "type": "string"
                                  },
                                  "balanceType": {
                                    "description": "ASSET (positive transaction amount increases balance), LIABILITY (positive transaction amount decreases balance)",
                                    "enum": [
                                      "ASSET",
                                      "LIABILITY"
                                    ],
                                    "type": "string"
                                  },
                                  "currency": {
                                    "description": "Indicates the currency code used by the account. May also include currency rate.",
                                    "properties": {
                                      "currencyCode": {
                                        "description": "Iso 4217 currency code.",
                                        "type": "string"
                                      },
                                      "currencyRate": {
                                        "description": "Currency rate between original and converted currency.",
                                        "type": "number"
                                      },
                                      "originalCurrencyCode": {
                                        "description": "Iso 4217 currency code.",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Currency Entity",
                                    "type": "object"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "error": {
                                    "description": "An error entity which can be used at the API level for error responses or at the account level to indicate a problem specific to a particular account.",
                                    "properties": {
                                      "code": {
                                        "description": "Long term persistent identifier which can be used to trace error condition back to log information",
                                        "type": "integer"
                                      },
                                      "message": {
                                        "description": "End user displayable information which might help the customer diagnose an error",
                                        "type": "string"
                                      }
                                    },
                                    "title": "Error Entity",
                                    "type": "object"
                                  },
                                  "fiAttributes": {
                                    "items": {
                                      "description": "Data provider-specific attribute",
                                      "properties": {
                                        "name": {
                                          "description": "Name of attribute",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of attribute",
                                          "type": "string"
                                        }
                                      },
                                      "title": "FiAttribute Entity",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "interestRate": {
                                    "description": "Interest Rate of Account",
                                    "type": "number"
                                  },
                                  "interestRateAsOf": {
                                    "description": "Date of account’s interest rate",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "interestRateType": {
                                    "description": "The type of interest rate. FIXED or VARIABLE.",
                                    "enum": [
                                      "FIXED",
                                      "VARIABLE"
                                    ],
                                    "type": "string"
                                  },
                                  "lastActivityDate": {
                                    "description": "Date that last transaction occurred on account",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "lineOfBusiness": {
                                    "description": "The line of business, such as consumer, consumer joint, small business, corporate, etc.",
                                    "type": "string"
                                  },
                                  "micrNumber": {
                                    "description": "MICR Number",
                                    "type": "string"
                                  },
                                  "nickname": {
                                    "description": "Name given by the user. Used in UIs to assist in account selection",
                                    "type": "string"
                                  },
                                  "parentAccountId": {
                                    "description": "Long-term persistent identity of the parent account. This is used to group accounts.",
                                    "type": "string"
                                  },
                                  "paymentFrequency": {
                                    "enum": [
                                      "ANNUALLY",
                                      "QUARTERLY",
                                      "MONTHLY",
                                      "WEEKLY"
                                    ],
                                    "type": "string"
                                  },
                                  "priorInterestRate": {
                                    "description": "Previous Interest Rate of Account",
                                    "type": "number"
                                  },
                                  "productName": {
                                    "description": "Marketed product name for this account.  Used in UIs to assist in account selection          ",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "The status of an account.",
                                    "enum": [
                                      "OPEN",
                                      "CLOSED",
                                      "PENDINGOPEN",
                                      "PENDINGCLOSE",
                                      "DELINQUENT",
                                      "PAID",
                                      "NEGATIVECURRENTBALANCE"
                                    ],
                                    "type": "string"
                                  },
                                  "transferIn": {
                                    "description": "Account is eligible for incoming transfers",
                                    "type": "boolean"
                                  },
                                  "transferOut": {
                                    "description": "Account is eligible for outgoing transfers",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "accountId"
                                ],
                                "title": "AnnuityAccount",
                                "type": "object"
                              }
                            }
                          }
                        ]
                      },
                      "id": {
                        "description": "The record's Akoya ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Account data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemoteAkoyaConnection": {
        "type": "object",
        "description": "Remote Data about the Connection.",
        "title": "RemoteAkoyaConnection",
        "required": [
          "connectionId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "connectionId": {
            "type": "string",
            "description": "The ID of the Connection.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Connection ID",
            "example": "conn_14TJiFDKRJlPiBHuukUIlXZ"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "AKOYA"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "idp.ddp.akoya.com": {
                "minProperties": 1,
                "properties": {
                  "/token": {
                    "properties": {
                      "body": {
                        "properties": {
                          "accounts": {
                            "description": "Array of Account Ids",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "atHash": {
                            "description": "Access token hash value",
                            "type": "string"
                          },
                          "aud": {
                            "description": "Data recipient",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "authTime": {
                            "description": "Auth Time",
                            "type": "number"
                          },
                          "connectorId": {
                            "description": "ID of Akoya Provider",
                            "type": "string"
                          },
                          "email": {
                            "description": "End-user's email address",
                            "type": "string"
                          },
                          "emailVerified": {
                            "description": "True if end-user's email is verified, otherwise false",
                            "type": "boolean"
                          },
                          "exp": {
                            "description": "Time token will expire in Unix Epoch format",
                            "type": "number"
                          },
                          "iat": {
                            "description": "The time the token was issued in Unix Epoch format",
                            "type": "number"
                          },
                          "iss": {
                            "description": "Issuer of the JWT, Akoya",
                            "type": "string"
                          },
                          "jti": {
                            "description": "Id of Token",
                            "type": "string"
                          },
                          "locale": {
                            "description": "End-user's locale",
                            "type": "string"
                          },
                          "name": {
                            "description": "End-user's name in displayable form",
                            "type": "string"
                          },
                          "products": {
                            "description": "Array of Enabled Akoya Products",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "rat": {
                            "description": "Timestamp",
                            "type": "number"
                          },
                          "recipientId": {
                            "description": "recipient Id",
                            "type": "string"
                          },
                          "sid": {
                            "description": "Session ID",
                            "type": "string"
                          },
                          "sub": {
                            "description": "Unique value to identify the end-user with the scope specific to the data provider",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Akoya ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Connection data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemoteAkoyaTransaction": {
        "type": "object",
        "description": "Remote Data about the Transaction.",
        "title": "RemoteAkoyaTransaction",
        "required": [
          "transactionId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "AKOYA"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "products.ddp.akoya.com": {
                "minProperties": 1,
                "properties": {
                  "/transactions/v2/{provider_id}/{account_id}": {
                    "properties": {
                      "body": {
                        "anyOf": [
                          {
                            "properties": {
                              "depositTransaction": {
                                "description": "Deposit transaction",
                                "properties": {
                                  "accountId": {
                                    "description": "Corresponds to AccountId in Account",
                                    "type": "string"
                                  },
                                  "amount": {
                                    "description": "The amount of money in the account currency.\n\nIf balanceType is `ASSET`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"+\" or not present\n  2. If `CREDIT`, sign is \"-\"\n\nIf balanceType is `LIABILITY`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"-\"\n  2. If `CREDIT`, sign is \"+\" or not present",
                                    "type": "number"
                                  },
                                  "category": {
                                    "description": "Transaction category, preferably MCC or SIC.",
                                    "type": "string"
                                  },
                                  "checkNumber": {
                                    "description": "Check Number",
                                    "type": "integer"
                                  },
                                  "debitCreditMemo": {
                                    "description": "Akoya will ensure that this is correctly populated with one of DEBIT or CREDIT and matches the sign of the status field.",
                                    "enum": [
                                      "DEBIT",
                                      "CREDIT"
                                    ],
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the transaction",
                                    "type": "string"
                                  },
                                  "fiAttributes": {
                                    "description": "Array of FI-specific attributes",
                                    "items": {
                                      "description": "Data provider-specific attribute",
                                      "properties": {
                                        "name": {
                                          "description": "Name of attribute",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of attribute",
                                          "type": "string"
                                        }
                                      },
                                      "title": "FiAttribute Entity",
                                      "type": "object"
                                    },
                                    "minItems": 1,
                                    "type": "array",
                                    "uniqueItems": true
                                  },
                                  "foreignAmount": {
                                    "description": "The amount of money in the foreign currency",
                                    "type": "number"
                                  },
                                  "foreignCurrency": {
                                    "description": "The ISO 4217 code of the foreign currency",
                                    "type": "string"
                                  },
                                  "imageIds": {
                                    "description": "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "lineItem": {
                                    "description": "Breakdown of the transaction details",
                                    "items": {
                                      "properties": {
                                        "amount": {
                                          "description": "The amount of money attributable to this line item",
                                          "type": "number"
                                        },
                                        "checkNumber": {
                                          "description": "Check number",
                                          "type": "number"
                                        },
                                        "description": {
                                          "description": "The description of the line item",
                                          "type": "string"
                                        },
                                        "imageIds": {
                                          "description": "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "links": {
                                          "description": "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs",
                                          "items": {
                                            "description": "REST application constraint (Hypermedia As The Engine Of Application State)",
                                            "properties": {
                                              "action": {
                                                "description": "HTTP Method to use for the request",
                                                "enum": [
                                                  "GET",
                                                  "POST",
                                                  "PATCH",
                                                  "DELETE",
                                                  "PUT"
                                                ],
                                                "type": "string"
                                              },
                                              "href": {
                                                "description": "URL to invoke the action on the resource",
                                                "example": "https://api.fi.com/fdx/v4/accounts/12345",
                                                "format": "uri-reference",
                                                "type": "string"
                                              },
                                              "types": {
                                                "description": "Content-types that can be used in the Accept header.",
                                                "items": {
                                                  "enum": [
                                                    "application/pdf",
                                                    "image/gif",
                                                    "image/jpeg",
                                                    "image/tiff",
                                                    "image/png",
                                                    "application/json"
                                                  ],
                                                  "example": "application/json",
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "title": "HATEOAS Link",
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "memo": {
                                          "description": "Secondary item description",
                                          "type": "string"
                                        },
                                        "reference": {
                                          "description": "A reference number",
                                          "type": "string"
                                        }
                                      },
                                      "title": "LineItem",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "links": {
                                    "description": "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs",
                                    "items": {
                                      "description": "REST application constraint (Hypermedia As The Engine Of Application State)",
                                      "properties": {
                                        "action": {
                                          "description": "HTTP Method to use for the request",
                                          "enum": [
                                            "GET",
                                            "POST",
                                            "PATCH",
                                            "DELETE",
                                            "PUT"
                                          ],
                                          "type": "string"
                                        },
                                        "href": {
                                          "description": "URL to invoke the action on the resource",
                                          "example": "https://api.fi.com/fdx/v4/accounts/12345",
                                          "format": "uri-reference",
                                          "type": "string"
                                        },
                                        "types": {
                                          "description": "Content-types that can be used in the Accept header.",
                                          "items": {
                                            "enum": [
                                              "application/pdf",
                                              "image/gif",
                                              "image/jpeg",
                                              "image/tiff",
                                              "image/png",
                                              "application/json"
                                            ],
                                            "example": "application/json",
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "title": "HATEOAS Link",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "memo": {
                                    "description": "Secondary transaction description",
                                    "type": "string"
                                  },
                                  "payee": {
                                    "description": "Payee name",
                                    "type": "string"
                                  },
                                  "postedTimestamp": {
                                    "description": "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "reference": {
                                    "description": "A tracking reference identifier",
                                    "type": "string"
                                  },
                                  "referenceTransactionId": {
                                    "description": "Akoya ensures that this field is populated for all transactions which are reversals, otherwise it is null. Either way it is always present.\n\nFor reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction.",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "AUTHORIZATION, MEMO, PENDING, or POSTED",
                                    "enum": [
                                      "PENDING",
                                      "MEMO",
                                      "POSTED",
                                      "AUTHORIZATION"
                                    ],
                                    "type": "string"
                                  },
                                  "subCategory": {
                                    "description": "Transaction category detail",
                                    "type": "string"
                                  },
                                  "transactionId": {
                                    "description": "Long term persistent identity of the transaction (unique to account).\nTransaction IDs should:\n\n  1. be the same for pending and posted\n  2. be different for reversed transactions\n  3. `referenceTransactionId` should be present for reversed transactions'",
                                    "type": "string"
                                  },
                                  "transactionTimestamp": {
                                    "description": "The date and time that the transaction was added to the server backend systems.\n\nAkoya ensures that this field is populated for all transactions to which it applies, otherwise it is null. Either way it is always present.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "transactionType": {
                                    "description": "DepositTransaction Type",
                                    "enum": [
                                      "CHECK",
                                      "WITHDRAWAL",
                                      "TRANSFER",
                                      "POSDEBIT",
                                      "ATMWITHDRAWAL",
                                      "BILLPAYMENT",
                                      "FEE",
                                      "DEPOSIT",
                                      "ADJUSTMENT",
                                      "INTEREST",
                                      "DIVIDEND",
                                      "DIRECTDEPOSIT",
                                      "ATMDEPOSIT",
                                      "POSCREDIT"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          {
                            "properties": {
                              "loanTransaction": {
                                "description": "Loan Transaction",
                                "properties": {
                                  "accountId": {
                                    "description": "Corresponds to AccountId in Account",
                                    "type": "string"
                                  },
                                  "amount": {
                                    "description": "The amount of money in the account currency.\n\nIf balanceType is `ASSET`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"+\" or not present\n  2. If `CREDIT`, sign is \"-\"\n\nIf balanceType is `LIABILITY`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"-\"\n  2. If `CREDIT`, sign is \"+\" or not present",
                                    "type": "number"
                                  },
                                  "category": {
                                    "description": "Transaction category, preferably MCC or SIC.",
                                    "type": "string"
                                  },
                                  "debitCreditMemo": {
                                    "description": "Akoya will ensure that this is correctly populated with one of DEBIT or CREDIT and matches the sign of the status field.",
                                    "enum": [
                                      "DEBIT",
                                      "CREDIT"
                                    ],
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the transaction",
                                    "type": "string"
                                  },
                                  "fiAttributes": {
                                    "description": "Array of FI-specific attributes",
                                    "items": {
                                      "description": "Data provider-specific attribute",
                                      "properties": {
                                        "name": {
                                          "description": "Name of attribute",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of attribute",
                                          "type": "string"
                                        }
                                      },
                                      "title": "FiAttribute Entity",
                                      "type": "object"
                                    },
                                    "minItems": 1,
                                    "type": "array",
                                    "uniqueItems": true
                                  },
                                  "foreignAmount": {
                                    "description": "The amount of money in the foreign currency",
                                    "type": "number"
                                  },
                                  "foreignCurrency": {
                                    "description": "The ISO 4217 code of the foreign currency",
                                    "type": "string"
                                  },
                                  "imageIds": {
                                    "description": "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "lineItem": {
                                    "description": "Breakdown of the transaction details",
                                    "items": {
                                      "properties": {
                                        "amount": {
                                          "description": "The amount of money attributable to this line item",
                                          "type": "number"
                                        },
                                        "checkNumber": {
                                          "description": "Check number",
                                          "type": "number"
                                        },
                                        "description": {
                                          "description": "The description of the line item",
                                          "type": "string"
                                        },
                                        "imageIds": {
                                          "description": "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "links": {
                                          "description": "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs",
                                          "items": {
                                            "description": "REST application constraint (Hypermedia As The Engine Of Application State)",
                                            "properties": {
                                              "action": {
                                                "description": "HTTP Method to use for the request",
                                                "enum": [
                                                  "GET",
                                                  "POST",
                                                  "PATCH",
                                                  "DELETE",
                                                  "PUT"
                                                ],
                                                "type": "string"
                                              },
                                              "href": {
                                                "description": "URL to invoke the action on the resource",
                                                "example": "https://api.fi.com/fdx/v4/accounts/12345",
                                                "format": "uri-reference",
                                                "type": "string"
                                              },
                                              "types": {
                                                "description": "Content-types that can be used in the Accept header.",
                                                "items": {
                                                  "enum": [
                                                    "application/pdf",
                                                    "image/gif",
                                                    "image/jpeg",
                                                    "image/tiff",
                                                    "image/png",
                                                    "application/json"
                                                  ],
                                                  "example": "application/json",
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "title": "HATEOAS Link",
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "memo": {
                                          "description": "Secondary item description",
                                          "type": "string"
                                        },
                                        "reference": {
                                          "description": "A reference number",
                                          "type": "string"
                                        }
                                      },
                                      "title": "LineItem",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "links": {
                                    "description": "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs",
                                    "items": {
                                      "description": "REST application constraint (Hypermedia As The Engine Of Application State)",
                                      "properties": {
                                        "action": {
                                          "description": "HTTP Method to use for the request",
                                          "enum": [
                                            "GET",
                                            "POST",
                                            "PATCH",
                                            "DELETE",
                                            "PUT"
                                          ],
                                          "type": "string"
                                        },
                                        "href": {
                                          "description": "URL to invoke the action on the resource",
                                          "example": "https://api.fi.com/fdx/v4/accounts/12345",
                                          "format": "uri-reference",
                                          "type": "string"
                                        },
                                        "types": {
                                          "description": "Content-types that can be used in the Accept header.",
                                          "items": {
                                            "enum": [
                                              "application/pdf",
                                              "image/gif",
                                              "image/jpeg",
                                              "image/tiff",
                                              "image/png",
                                              "application/json"
                                            ],
                                            "example": "application/json",
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "title": "HATEOAS Link",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "memo": {
                                    "description": "Secondary transaction description",
                                    "type": "string"
                                  },
                                  "paymentDetails": {
                                    "description": "Payment details for some transactions",
                                    "properties": {
                                      "escrowAmount": {
                                        "description": "The amount of payment applied to escrow",
                                        "type": "number"
                                      },
                                      "feesAmount": {
                                        "description": "The amount of payment applied to fees",
                                        "type": "number"
                                      },
                                      "insuranceAmount": {
                                        "description": "The amount of payment applied to life/health/accident insurance on the loan",
                                        "type": "number"
                                      },
                                      "interestAmount": {
                                        "description": "The amount of payment applied to interest",
                                        "type": "number"
                                      },
                                      "pmiAmount": {
                                        "description": "The amount of payment applied to PMI",
                                        "type": "number"
                                      },
                                      "principalAmount": {
                                        "description": "The amount of payment applied to principal",
                                        "type": "number"
                                      }
                                    },
                                    "title": "PaymentDetails",
                                    "type": "object"
                                  },
                                  "postedTimestamp": {
                                    "description": "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "reference": {
                                    "description": "A tracking reference identifier",
                                    "type": "string"
                                  },
                                  "referenceTransactionId": {
                                    "description": "Akoya ensures that this field is populated for all transactions which are reversals, otherwise it is null. Either way it is always present.\n\nFor reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction.",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "AUTHORIZATION, MEMO, PENDING, or POSTED",
                                    "enum": [
                                      "PENDING",
                                      "MEMO",
                                      "POSTED",
                                      "AUTHORIZATION"
                                    ],
                                    "type": "string"
                                  },
                                  "subCategory": {
                                    "description": "Transaction category detail",
                                    "type": "string"
                                  },
                                  "transactionId": {
                                    "description": "Long term persistent identity of the transaction (unique to account).\nTransaction IDs should:\n\n  1. be the same for pending and posted\n  2. be different for reversed transactions\n  3. `referenceTransactionId` should be present for reversed transactions'",
                                    "type": "string"
                                  },
                                  "transactionTimestamp": {
                                    "description": "The date and time that the transaction was added to the server backend systems.\n\nAkoya ensures that this field is populated for all transactions to which it applies, otherwise it is null. Either way it is always present.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "transactionType": {
                                    "description": "LoanTransaction Type",
                                    "enum": [
                                      "ADJUSTMENT",
                                      "FEE",
                                      "INTEREST",
                                      "PAYMENT"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "title": "Loan Transaction",
                                "type": "object"
                              }
                            }
                          },
                          {
                            "properties": {
                              "locTransaction": {
                                "description": "A line of credit transaction of type",
                                "properties": {
                                  "accountId": {
                                    "description": "Corresponds to AccountId in Account",
                                    "type": "string"
                                  },
                                  "amount": {
                                    "description": "The amount of money in the account currency.\n\nIf balanceType is `ASSET`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"+\" or not present\n  2. If `CREDIT`, sign is \"-\"\n\nIf balanceType is `LIABILITY`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"-\"\n  2. If `CREDIT`, sign is \"+\" or not present",
                                    "type": "number"
                                  },
                                  "category": {
                                    "description": "Transaction category, preferably MCC or SIC.",
                                    "type": "string"
                                  },
                                  "checkNumber": {
                                    "description": "Check number",
                                    "type": "integer"
                                  },
                                  "debitCreditMemo": {
                                    "description": "Akoya will ensure that this is correctly populated with one of DEBIT or CREDIT and matches the sign of the status field.",
                                    "enum": [
                                      "DEBIT",
                                      "CREDIT"
                                    ],
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the transaction",
                                    "type": "string"
                                  },
                                  "fiAttributes": {
                                    "description": "Array of FI-specific attributes",
                                    "items": {
                                      "description": "Data provider-specific attribute",
                                      "properties": {
                                        "name": {
                                          "description": "Name of attribute",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of attribute",
                                          "type": "string"
                                        }
                                      },
                                      "title": "FiAttribute Entity",
                                      "type": "object"
                                    },
                                    "minItems": 1,
                                    "type": "array",
                                    "uniqueItems": true
                                  },
                                  "foreignAmount": {
                                    "description": "The amount of money in the foreign currency",
                                    "type": "number"
                                  },
                                  "foreignCurrency": {
                                    "description": "The ISO 4217 code of the foreign currency",
                                    "type": "string"
                                  },
                                  "imageIds": {
                                    "description": "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "lineItem": {
                                    "description": "Breakdown of the transaction details",
                                    "items": {
                                      "properties": {
                                        "amount": {
                                          "description": "The amount of money attributable to this line item",
                                          "type": "number"
                                        },
                                        "checkNumber": {
                                          "description": "Check number",
                                          "type": "number"
                                        },
                                        "description": {
                                          "description": "The description of the line item",
                                          "type": "string"
                                        },
                                        "imageIds": {
                                          "description": "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "links": {
                                          "description": "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs",
                                          "items": {
                                            "description": "REST application constraint (Hypermedia As The Engine Of Application State)",
                                            "properties": {
                                              "action": {
                                                "description": "HTTP Method to use for the request",
                                                "enum": [
                                                  "GET",
                                                  "POST",
                                                  "PATCH",
                                                  "DELETE",
                                                  "PUT"
                                                ],
                                                "type": "string"
                                              },
                                              "href": {
                                                "description": "URL to invoke the action on the resource",
                                                "example": "https://api.fi.com/fdx/v4/accounts/12345",
                                                "format": "uri-reference",
                                                "type": "string"
                                              },
                                              "types": {
                                                "description": "Content-types that can be used in the Accept header.",
                                                "items": {
                                                  "enum": [
                                                    "application/pdf",
                                                    "image/gif",
                                                    "image/jpeg",
                                                    "image/tiff",
                                                    "image/png",
                                                    "application/json"
                                                  ],
                                                  "example": "application/json",
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "title": "HATEOAS Link",
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "memo": {
                                          "description": "Secondary item description",
                                          "type": "string"
                                        },
                                        "reference": {
                                          "description": "A reference number",
                                          "type": "string"
                                        }
                                      },
                                      "title": "LineItem",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "links": {
                                    "description": "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs",
                                    "items": {
                                      "description": "REST application constraint (Hypermedia As The Engine Of Application State)",
                                      "properties": {
                                        "action": {
                                          "description": "HTTP Method to use for the request",
                                          "enum": [
                                            "GET",
                                            "POST",
                                            "PATCH",
                                            "DELETE",
                                            "PUT"
                                          ],
                                          "type": "string"
                                        },
                                        "href": {
                                          "description": "URL to invoke the action on the resource",
                                          "example": "https://api.fi.com/fdx/v4/accounts/12345",
                                          "format": "uri-reference",
                                          "type": "string"
                                        },
                                        "types": {
                                          "description": "Content-types that can be used in the Accept header.",
                                          "items": {
                                            "enum": [
                                              "application/pdf",
                                              "image/gif",
                                              "image/jpeg",
                                              "image/tiff",
                                              "image/png",
                                              "application/json"
                                            ],
                                            "example": "application/json",
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "title": "HATEOAS Link",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "memo": {
                                    "description": "Secondary transaction description",
                                    "type": "string"
                                  },
                                  "paymentDetails": {
                                    "description": "Payment details for some transactions",
                                    "properties": {
                                      "escrowAmount": {
                                        "description": "The amount of payment applied to escrow",
                                        "type": "number"
                                      },
                                      "feesAmount": {
                                        "description": "The amount of payment applied to fees",
                                        "type": "number"
                                      },
                                      "insuranceAmount": {
                                        "description": "The amount of payment applied to life/health/accident insurance on the loan",
                                        "type": "number"
                                      },
                                      "interestAmount": {
                                        "description": "The amount of payment applied to interest",
                                        "type": "number"
                                      },
                                      "pmiAmount": {
                                        "description": "The amount of payment applied to PMI",
                                        "type": "number"
                                      },
                                      "principalAmount": {
                                        "description": "The amount of payment applied to principal",
                                        "type": "number"
                                      }
                                    },
                                    "title": "PaymentDetails",
                                    "type": "object"
                                  },
                                  "postedTimestamp": {
                                    "description": "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "reference": {
                                    "description": "A tracking reference identifier",
                                    "type": "string"
                                  },
                                  "referenceTransactionId": {
                                    "description": "Akoya ensures that this field is populated for all transactions which are reversals, otherwise it is null. Either way it is always present.\n\nFor reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction.",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "AUTHORIZATION, MEMO, PENDING, or POSTED",
                                    "enum": [
                                      "PENDING",
                                      "MEMO",
                                      "POSTED",
                                      "AUTHORIZATION"
                                    ],
                                    "type": "string"
                                  },
                                  "subCategory": {
                                    "description": "Transaction category detail",
                                    "type": "string"
                                  },
                                  "transactionId": {
                                    "description": "Long term persistent identity of the transaction (unique to account).\nTransaction IDs should:\n\n  1. be the same for pending and posted\n  2. be different for reversed transactions\n  3. `referenceTransactionId` should be present for reversed transactions'",
                                    "type": "string"
                                  },
                                  "transactionTimestamp": {
                                    "description": "The date and time that the transaction was added to the server backend systems.\n\nAkoya ensures that this field is populated for all transactions to which it applies, otherwise it is null. Either way it is always present.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "transactionType": {
                                    "description": "LocTransaction Type",
                                    "enum": [
                                      "CHECK",
                                      "WITHDRAWAL",
                                      "TRANSFER",
                                      "POSDEBIT",
                                      "ATMWITHDRAWAL",
                                      "BILLPAYMENT",
                                      "FEE",
                                      "DEPOSIT",
                                      "ADJUSTMENT",
                                      "INTEREST",
                                      "DIVIDEND",
                                      "DIRECTDEPOSIT",
                                      "ATMDEPOSIT",
                                      "POSCREDIT"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "title": "LocTransaction",
                                "type": "object"
                              }
                            }
                          },
                          {
                            "properties": {
                              "investmentTransaction": {
                                "description": "Investment Transactions",
                                "properties": {
                                  "accountId": {
                                    "description": "Corresponds to AccountId in Account",
                                    "type": "string"
                                  },
                                  "accruedInterest": {
                                    "description": "Accrued Interest.",
                                    "type": "number"
                                  },
                                  "amount": {
                                    "description": "The amount of money in the account currency.\n\nIf balanceType is `ASSET`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"+\" or not present\n  2. If `CREDIT`, sign is \"-\"\n\nIf balanceType is `LIABILITY`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"-\"\n  2. If `CREDIT`, sign is \"+\" or not present",
                                    "type": "number"
                                  },
                                  "category": {
                                    "description": "Transaction category, preferably MCC or SIC.",
                                    "type": "string"
                                  },
                                  "commission": {
                                    "description": "Transaction commission.",
                                    "type": "number"
                                  },
                                  "confirmationNumber": {
                                    "description": "Confirmation number of the transaction.",
                                    "type": "string"
                                  },
                                  "debitCreditMemo": {
                                    "description": "Akoya will ensure that this is correctly populated with one of DEBIT or CREDIT and matches the sign of the status field.",
                                    "enum": [
                                      "DEBIT",
                                      "CREDIT"
                                    ],
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the transaction",
                                    "type": "string"
                                  },
                                  "faceValue": {
                                    "description": "Cash value for bonds.",
                                    "type": "number"
                                  },
                                  "fees": {
                                    "description": "Fees applied to the trade.",
                                    "type": "number"
                                  },
                                  "fiAttributes": {
                                    "description": "Array of FI-specific attributes",
                                    "items": {
                                      "description": "Data provider-specific attribute",
                                      "properties": {
                                        "name": {
                                          "description": "Name of attribute",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of attribute",
                                          "type": "string"
                                        }
                                      },
                                      "title": "FiAttribute Entity",
                                      "type": "object"
                                    },
                                    "minItems": 1,
                                    "type": "array",
                                    "uniqueItems": true
                                  },
                                  "foreignAmount": {
                                    "description": "The amount of money in the foreign currency",
                                    "type": "number"
                                  },
                                  "foreignCurrency": {
                                    "description": "The ISO 4217 code of the foreign currency",
                                    "type": "string"
                                  },
                                  "fractionalCash": {
                                    "description": "Cash for fractional units (used for stock splits).",
                                    "type": "number"
                                  },
                                  "gain": {
                                    "description": "For sales.",
                                    "type": "number"
                                  },
                                  "imageIds": {
                                    "description": "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "incomeType": {
                                    "description": "Type of investment income. CGLONG (capital gains-long term), CGSHORT (capital gains-short term), MISC.",
                                    "enum": [
                                      "CGLONG",
                                      "CGSHORT",
                                      "MISC"
                                    ],
                                    "type": "string"
                                  },
                                  "inv401kSource": {
                                    "description": "Source of money.",
                                    "enum": [
                                      "PRETAX",
                                      "AFTERTAX",
                                      "MATCH",
                                      "PROFITSHARING",
                                      "ROLLOVER",
                                      "OTHERVEST",
                                      "OTHERNONVEST"
                                    ],
                                    "type": "string"
                                  },
                                  "lineItem": {
                                    "description": "Breakdown of the transaction details",
                                    "items": {
                                      "properties": {
                                        "amount": {
                                          "description": "The amount of money attributable to this line item",
                                          "type": "number"
                                        },
                                        "checkNumber": {
                                          "description": "Check number",
                                          "type": "number"
                                        },
                                        "description": {
                                          "description": "The description of the line item",
                                          "type": "string"
                                        },
                                        "imageIds": {
                                          "description": "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "links": {
                                          "description": "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs",
                                          "items": {
                                            "description": "REST application constraint (Hypermedia As The Engine Of Application State)",
                                            "properties": {
                                              "action": {
                                                "description": "HTTP Method to use for the request",
                                                "enum": [
                                                  "GET",
                                                  "POST",
                                                  "PATCH",
                                                  "DELETE",
                                                  "PUT"
                                                ],
                                                "type": "string"
                                              },
                                              "href": {
                                                "description": "URL to invoke the action on the resource",
                                                "example": "https://api.fi.com/fdx/v4/accounts/12345",
                                                "format": "uri-reference",
                                                "type": "string"
                                              },
                                              "types": {
                                                "description": "Content-types that can be used in the Accept header.",
                                                "items": {
                                                  "enum": [
                                                    "application/pdf",
                                                    "image/gif",
                                                    "image/jpeg",
                                                    "image/tiff",
                                                    "image/png",
                                                    "application/json"
                                                  ],
                                                  "example": "application/json",
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "title": "HATEOAS Link",
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "memo": {
                                          "description": "Secondary item description",
                                          "type": "string"
                                        },
                                        "reference": {
                                          "description": "A reference number",
                                          "type": "string"
                                        }
                                      },
                                      "title": "LineItem",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "links": {
                                    "description": "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs",
                                    "items": {
                                      "description": "REST application constraint (Hypermedia As The Engine Of Application State)",
                                      "properties": {
                                        "action": {
                                          "description": "HTTP Method to use for the request",
                                          "enum": [
                                            "GET",
                                            "POST",
                                            "PATCH",
                                            "DELETE",
                                            "PUT"
                                          ],
                                          "type": "string"
                                        },
                                        "href": {
                                          "description": "URL to invoke the action on the resource",
                                          "example": "https://api.fi.com/fdx/v4/accounts/12345",
                                          "format": "uri-reference",
                                          "type": "string"
                                        },
                                        "types": {
                                          "description": "Content-types that can be used in the Accept header.",
                                          "items": {
                                            "enum": [
                                              "application/pdf",
                                              "image/gif",
                                              "image/jpeg",
                                              "image/tiff",
                                              "image/png",
                                              "application/json"
                                            ],
                                            "example": "application/json",
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "title": "HATEOAS Link",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "load": {
                                    "description": "Load on the transaction.",
                                    "type": "number"
                                  },
                                  "loanId": {
                                    "description": "For 401k accounts only. This indicates the transaction was due to a loan or a loan repayment.",
                                    "type": "string"
                                  },
                                  "loanInterest": {
                                    "description": "How much loan pre-payment is interest.",
                                    "type": "number"
                                  },
                                  "loanPrincipal": {
                                    "description": "How much loan pre-payment is principal.",
                                    "type": "number"
                                  },
                                  "markup": {
                                    "description": "Portion of unit price that is attributed to the dealer markup.",
                                    "type": "number"
                                  },
                                  "memo": {
                                    "description": "Secondary transaction description",
                                    "type": "string"
                                  },
                                  "newUnits": {
                                    "description": "Number of shares after split.",
                                    "type": "number"
                                  },
                                  "oldUnits": {
                                    "description": "Number of shares before split.",
                                    "type": "number"
                                  },
                                  "payrollDate": {
                                    "description": "The date for the 401k transaction was obtained in payroll.",
                                    "type": "string"
                                  },
                                  "penalty": {
                                    "description": "Indicates amount withheld due to a penalty.",
                                    "type": "number"
                                  },
                                  "positionType": {
                                    "enum": [
                                      "LONG",
                                      "SHORT"
                                    ],
                                    "type": "string"
                                  },
                                  "postedTimestamp": {
                                    "description": "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "price": {
                                    "description": "Unit purchase price.",
                                    "type": "number"
                                  },
                                  "priorYearContrib": {
                                    "description": "Indicates this buy was made using prior years contribution. TRUE or FALSE.",
                                    "type": "boolean"
                                  },
                                  "reference": {
                                    "description": "A tracking reference identifier",
                                    "type": "string"
                                  },
                                  "referenceTransactionId": {
                                    "description": "Akoya ensures that this field is populated for all transactions which are reversals, otherwise it is null. Either way it is always present.\n\nFor reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction.",
                                    "type": "string"
                                  },
                                  "runningBalance": {
                                    "description": "Running balance of the position.",
                                    "type": "number"
                                  },
                                  "securityId": {
                                    "description": "Unique identifier of security.",
                                    "type": "string"
                                  },
                                  "securityIdType": {
                                    "description": "Security identifier type.",
                                    "enum": [
                                      "BUSIP",
                                      "ISIN",
                                      "SEDOL",
                                      "SICC",
                                      "VALOR",
                                      "WKN"
                                    ],
                                    "type": "string"
                                  },
                                  "securityType": {
                                    "enum": [
                                      "STOCK",
                                      "MUTUALFUND",
                                      "DEBT",
                                      "OPTION",
                                      "SWEEP",
                                      "OTHER",
                                      "BOND"
                                    ],
                                    "type": "string"
                                  },
                                  "shares": {
                                    "description": "Required for stock, mutual funds. Number of shares (with decimals). Negative numbers indicate securities are being removed from the account.",
                                    "type": "number"
                                  },
                                  "splitRatioDenominator": {
                                    "description": "Split ratio denominator.",
                                    "type": "number"
                                  },
                                  "splitRatioNumerator": {
                                    "description": "Split ratio numerator.",
                                    "type": "number"
                                  },
                                  "stateWithholding": {
                                    "description": "State tax withholding.",
                                    "type": "number"
                                  },
                                  "status": {
                                    "description": "AUTHORIZATION, MEMO, PENDING, or POSTED",
                                    "enum": [
                                      "PENDING",
                                      "MEMO",
                                      "POSTED",
                                      "AUTHORIZATION"
                                    ],
                                    "type": "string"
                                  },
                                  "subAccountFund": {
                                    "description": "From which account money came in.",
                                    "enum": [
                                      "CASH",
                                      "MARGIN",
                                      "SHORT",
                                      "OTHERS"
                                    ],
                                    "type": "string"
                                  },
                                  "subAccountSec": {
                                    "description": "Sub-account security type.",
                                    "enum": [
                                      "CASH",
                                      "MARGIN",
                                      "SHORT",
                                      "OTHERS"
                                    ],
                                    "type": "string"
                                  },
                                  "subCategory": {
                                    "description": "Transaction category detail",
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "description": "Ticker symbol.",
                                    "type": "string"
                                  },
                                  "taxExempt": {
                                    "description": "Tax-exempt transaction TRUE or FALSE.",
                                    "type": "boolean"
                                  },
                                  "taxes": {
                                    "description": "Taxes on the trade.",
                                    "type": "number"
                                  },
                                  "transactionId": {
                                    "description": "Long term persistent identity of the transaction (unique to account).\nTransaction IDs should:\n\n  1. be the same for pending and posted\n  2. be different for reversed transactions\n  3. `referenceTransactionId` should be present for reversed transactions'",
                                    "type": "string"
                                  },
                                  "transactionReason": {
                                    "description": "Reason for this transaction; CALL (the debt was called), SELL (the debt was sold), MATURITY (the debt reached maturity)",
                                    "enum": [
                                      "CALL",
                                      "SELL",
                                      "MATURITY"
                                    ],
                                    "type": "string"
                                  },
                                  "transactionTimestamp": {
                                    "description": "The date and time that the transaction was added to the server backend systems.\n\nAkoya ensures that this field is populated for all transactions to which it applies, otherwise it is null. Either way it is always present.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "transactionType": {
                                    "description": "InvestmentTransaction Type",
                                    "enum": [
                                      "PURCHASED",
                                      "SOLD",
                                      "PURCHASEDTOCOVER",
                                      "ADJUSTMENT",
                                      "PURCHASETOOPEN",
                                      "PURCHASETOCLOSE",
                                      "SOLDTOOPEN",
                                      "SOLDTOCLOSE",
                                      "INTEREST",
                                      "MARGININTEREST",
                                      "REINVESTOFINCOME",
                                      "RETURNOFCAPITAL",
                                      "TRANSFER",
                                      "CONTRIBUTION",
                                      "FEE",
                                      "OPTIONEXERCISE",
                                      "OPTIONEXPIRATION",
                                      "DIVIDEND",
                                      "DIVIDENDREINVEST",
                                      "SPLIT",
                                      "CLOSURE",
                                      "INCOME",
                                      "EXPENSE",
                                      "CLOSUREOPT",
                                      "INVEXPENSE",
                                      "JRNLSEC",
                                      "JRNLFUND",
                                      "OTHER",
                                      "DIV",
                                      "SRVCHG",
                                      "DEP",
                                      "DEPOSIT",
                                      "ATM",
                                      "POS",
                                      "XFER",
                                      "CHECK",
                                      "PAYMENT",
                                      "CASH",
                                      "DIRECTDEP",
                                      "DIRECTDEBIT",
                                      "REPEATPMT"
                                    ],
                                    "type": "string"
                                  },
                                  "transferAction": {
                                    "description": "Transfer direction.",
                                    "enum": [
                                      "IN",
                                      "OUT"
                                    ],
                                    "type": "string"
                                  },
                                  "unitPrice": {
                                    "description": "Price per commonly-quoted unit. Does not include markup/markdown, unitprice. Share price for stocks, mutual funds, and others. Percentage of par for bonds. Per share (not contract) for options.",
                                    "type": "number"
                                  },
                                  "unitType": {
                                    "enum": [
                                      "SHARES",
                                      "CURRENCY"
                                    ],
                                    "type": "string"
                                  },
                                  "units": {
                                    "description": "For security-based actions other than stock splits, quantity. Shares for stocks, mutual funds, and others. Face value for bonds. Contracts for options.",
                                    "type": "number"
                                  },
                                  "withholding": {
                                    "description": "Federal tax withholding.",
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          {
                            "properties": {
                              "insuranceTransaction": {
                                "description": "Insurance transactions",
                                "properties": {
                                  "accountId": {
                                    "description": "Corresponds to AccountId in Account",
                                    "type": "string"
                                  },
                                  "amount": {
                                    "description": "The amount of money in the account currency.\n\nIf balanceType is `ASSET`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"+\" or not present\n  2. If `CREDIT`, sign is \"-\"\n\nIf balanceType is `LIABILITY`:\n\n  1. If `debitCreditMemo` = `DEBIT`, sign is \"-\"\n  2. If `CREDIT`, sign is \"+\" or not present",
                                    "type": "number"
                                  },
                                  "category": {
                                    "description": "Transaction category, preferably MCC or SIC.",
                                    "type": "string"
                                  },
                                  "debitCreditMemo": {
                                    "description": "Akoya will ensure that this is correctly populated with one of DEBIT or CREDIT and matches the sign of the status field.",
                                    "enum": [
                                      "DEBIT",
                                      "CREDIT"
                                    ],
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the transaction",
                                    "type": "string"
                                  },
                                  "fiAttributes": {
                                    "description": "Array of FI-specific attributes",
                                    "items": {
                                      "description": "Data provider-specific attribute",
                                      "properties": {
                                        "name": {
                                          "description": "Name of attribute",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of attribute",
                                          "type": "string"
                                        }
                                      },
                                      "title": "FiAttribute Entity",
                                      "type": "object"
                                    },
                                    "minItems": 1,
                                    "type": "array",
                                    "uniqueItems": true
                                  },
                                  "foreignAmount": {
                                    "description": "The amount of money in the foreign currency",
                                    "type": "number"
                                  },
                                  "foreignCurrency": {
                                    "description": "The ISO 4217 code of the foreign currency",
                                    "type": "string"
                                  },
                                  "imageIds": {
                                    "description": "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "lineItem": {
                                    "description": "Breakdown of the transaction details",
                                    "items": {
                                      "properties": {
                                        "amount": {
                                          "description": "The amount of money attributable to this line item",
                                          "type": "number"
                                        },
                                        "checkNumber": {
                                          "description": "Check number",
                                          "type": "number"
                                        },
                                        "description": {
                                          "description": "The description of the line item",
                                          "type": "string"
                                        },
                                        "imageIds": {
                                          "description": "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "links": {
                                          "description": "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs",
                                          "items": {
                                            "description": "REST application constraint (Hypermedia As The Engine Of Application State)",
                                            "properties": {
                                              "action": {
                                                "description": "HTTP Method to use for the request",
                                                "enum": [
                                                  "GET",
                                                  "POST",
                                                  "PATCH",
                                                  "DELETE",
                                                  "PUT"
                                                ],
                                                "type": "string"
                                              },
                                              "href": {
                                                "description": "URL to invoke the action on the resource",
                                                "example": "https://api.fi.com/fdx/v4/accounts/12345",
                                                "format": "uri-reference",
                                                "type": "string"
                                              },
                                              "types": {
                                                "description": "Content-types that can be used in the Accept header.",
                                                "items": {
                                                  "enum": [
                                                    "application/pdf",
                                                    "image/gif",
                                                    "image/jpeg",
                                                    "image/tiff",
                                                    "image/png",
                                                    "application/json"
                                                  ],
                                                  "example": "application/json",
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "title": "HATEOAS Link",
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "memo": {
                                          "description": "Secondary item description",
                                          "type": "string"
                                        },
                                        "reference": {
                                          "description": "A reference number",
                                          "type": "string"
                                        }
                                      },
                                      "title": "LineItem",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "links": {
                                    "description": "Links (unique to this Transaction) used to retrieve images of checks or transaction receipts, or invoke other APIs",
                                    "items": {
                                      "description": "REST application constraint (Hypermedia As The Engine Of Application State)",
                                      "properties": {
                                        "action": {
                                          "description": "HTTP Method to use for the request",
                                          "enum": [
                                            "GET",
                                            "POST",
                                            "PATCH",
                                            "DELETE",
                                            "PUT"
                                          ],
                                          "type": "string"
                                        },
                                        "href": {
                                          "description": "URL to invoke the action on the resource",
                                          "example": "https://api.fi.com/fdx/v4/accounts/12345",
                                          "format": "uri-reference",
                                          "type": "string"
                                        },
                                        "types": {
                                          "description": "Content-types that can be used in the Accept header.",
                                          "items": {
                                            "enum": [
                                              "application/pdf",
                                              "image/gif",
                                              "image/jpeg",
                                              "image/tiff",
                                              "image/png",
                                              "application/json"
                                            ],
                                            "example": "application/json",
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "title": "HATEOAS Link",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "memo": {
                                    "description": "Secondary transaction description",
                                    "type": "string"
                                  },
                                  "postedTimestamp": {
                                    "description": "The date and time that the transaction was posted to the account. If not provided then TransactionTimestamp can be used as PostedTimeStamp.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "reference": {
                                    "description": "A tracking reference identifier",
                                    "type": "string"
                                  },
                                  "referenceTransactionId": {
                                    "description": "Akoya ensures that this field is populated for all transactions which are reversals, otherwise it is null. Either way it is always present.\n\nFor reverse postings, the identity of the transaction being reversed. For the correction transaction, the identity of the reversing post. For credit card posting transactions, the identity of the authorization transaction.",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "AUTHORIZATION, MEMO, PENDING, or POSTED",
                                    "enum": [
                                      "PENDING",
                                      "MEMO",
                                      "POSTED",
                                      "AUTHORIZATION"
                                    ],
                                    "type": "string"
                                  },
                                  "subCategory": {
                                    "description": "Transaction category detail",
                                    "type": "string"
                                  },
                                  "transactionId": {
                                    "description": "Long term persistent identity of the transaction (unique to account).\nTransaction IDs should:\n\n  1. be the same for pending and posted\n  2. be different for reversed transactions\n  3. `referenceTransactionId` should be present for reversed transactions'",
                                    "type": "string"
                                  },
                                  "transactionTimestamp": {
                                    "description": "The date and time that the transaction was added to the server backend systems.\n\nAkoya ensures that this field is populated for all transactions to which it applies, otherwise it is null. Either way it is always present.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "transactionType": {
                                    "description": "InsuranceTransaction Type",
                                    "enum": [
                                      "PAYMENT",
                                      "FEE",
                                      "ADJUSTMENT",
                                      "INTEREST"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          }
                        ],
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Akoya ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Transaction data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemoteAkoyaHolding": {
        "type": "object",
        "description": "Remote Data about the Holding.",
        "title": "RemoteAkoyaHolding",
        "required": [
          "holdingId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "holdingId": {
            "type": "string",
            "description": "The ID of the Holding.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Holding ID",
            "example": "hld_12Hz9Dz7vEvM9AuljYvhmPc"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "AKOYA"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "products.ddp.akoya.com": {
                "minProperties": 1,
                "properties": {
                  "/accounts/v2/{provider_id}?accountIds={account_id}": {
                    "properties": {
                      "body": {
                        "properties": {
                          "assetClasses": {
                            "description": "Percent breakdown by asset class.",
                            "items": {
                              "properties": {
                                "assetClass": {
                                  "enum": [
                                    "DOMESTICBOND",
                                    "INTLBOND",
                                    "LARGESTOCK",
                                    "SMALLSTOCK",
                                    "INTLSTOCK",
                                    "MONEYMARKET",
                                    "OTHER"
                                  ],
                                  "type": "string"
                                },
                                "percent": {
                                  "description": "Percentage of asset class that falls under this asset",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true
                          },
                          "averageCost": {
                            "description": "Cost is average of all purchases for holding.",
                            "type": "boolean"
                          },
                          "cashAccount": {
                            "description": "If true, indicates that this holding is used to maintain proceeds from sales, dividends, and other cash postings to the investment account.",
                            "type": "boolean"
                          },
                          "changeInPrice": {
                            "description": "Change in current price compared to previous day's close",
                            "type": "number"
                          },
                          "currency": {
                            "description": "Indicates the currency code used by the account. May also include currency rate.",
                            "properties": {
                              "currencyCode": {
                                "description": "Iso 4217 currency code.",
                                "type": "string"
                              },
                              "currencyRate": {
                                "description": "Currency rate between original and converted currency.",
                                "type": "number"
                              },
                              "originalCurrencyCode": {
                                "description": "Iso 4217 currency code.",
                                "type": "string"
                              }
                            },
                            "title": "Currency Entity",
                            "type": "object"
                          },
                          "currentUnitPrice": {
                            "type": "number"
                          },
                          "currentUnitPriceDate": {
                            "description": "Current unit price as of date",
                            "format": "date-time",
                            "type": "string"
                          },
                          "debtSecurity": {
                            "description": "Information about the debt security specific to the type of security",
                            "properties": {
                              "bondMaturityDate": {
                                "description": "Bond Maturity date",
                                "format": "date-time",
                                "type": "string"
                              },
                              "callDate": {
                                "description": "Next call date",
                                "format": "date-time",
                                "type": "string"
                              },
                              "callPrice": {
                                "description": "Bond call price",
                                "type": "number"
                              },
                              "callType": {
                                "description": "Type of next call",
                                "enum": [
                                  "CALL",
                                  "PUT",
                                  "PREFUND",
                                  "MATURITY"
                                ],
                                "type": "string"
                              },
                              "couponDate": {
                                "description": "Maturity date for next coupon",
                                "format": "date-time",
                                "type": "string"
                              },
                              "couponMatureFrequency": {
                                "description": "When coupons mature",
                                "enum": [
                                  "MONTHLY",
                                  "QUARTERLY",
                                  "SEMIANNUAL",
                                  "ANNUAL",
                                  "OTHER"
                                ],
                                "type": "string"
                              },
                              "couponRate": {
                                "description": "Bond coupon rate for next closest call date",
                                "type": "number"
                              },
                              "debtClass": {
                                "description": "Classification of debt",
                                "enum": [
                                  "TREASURY",
                                  "MUNICIPAL",
                                  "CORPORATE",
                                  "OTHER"
                                ],
                                "type": "string"
                              },
                              "debtType": {
                                "description": "Debt type",
                                "enum": [
                                  "ASSET",
                                  "COUPON"
                                ],
                                "type": "string"
                              },
                              "parValue": {
                                "description": "Par value amount",
                                "type": "number"
                              },
                              "yieldToCall": {
                                "description": "Yield to next call",
                                "type": "number"
                              },
                              "yieldToMaturity": {
                                "description": "Yield to maturity",
                                "type": "number"
                              }
                            },
                            "title": "DebtSecurity Entity",
                            "type": "object"
                          },
                          "description": {
                            "description": "Description of the holding",
                            "type": "string"
                          },
                          "expirationDate": {
                            "description": "For CDs, bonds, and other time-based holdings.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "faceValue": {
                            "description": "Required for bonds. Face value at the time of data retrieved.",
                            "type": "number"
                          },
                          "fiAssetClasses": {
                            "description": "Percent breakdown by FI-specific asset class percentage breakdown",
                            "items": {
                              "properties": {
                                "assetClass": {
                                  "description": "FI-specific asset class",
                                  "type": "string"
                                },
                                "percent": {
                                  "description": "Percentage of asset class that falls under this asset",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "fiAttributes": {
                            "items": {
                              "description": "Data provider-specific attribute",
                              "properties": {
                                "name": {
                                  "description": "Name of attribute",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Value of attribute",
                                  "type": "string"
                                }
                              },
                              "title": "FiAttribute Entity",
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true
                          },
                          "heldInAccount": {
                            "description": "Sub-account",
                            "enum": [
                              "CASH",
                              "MARGIN",
                              "SHORT",
                              "OTHER"
                            ],
                            "type": "string"
                          },
                          "holdingId": {
                            "description": "Long term persistent identity of the holding",
                            "type": "string"
                          },
                          "holdingName": {
                            "description": "Holding name or security name",
                            "type": "string"
                          },
                          "holdingSubType": {
                            "enum": [
                              "MONEYMARKET",
                              "CASH"
                            ],
                            "type": "string"
                          },
                          "holdingType": {
                            "enum": [
                              "STOCK",
                              "BOND",
                              "MUTUALFUND",
                              "CD",
                              "ANNUITY",
                              "OPTION",
                              "OTHER"
                            ],
                            "type": "string"
                          },
                          "inv401kSurce": {
                            "description": "Source for money for this security. ",
                            "enum": [
                              "PRETAX",
                              "AFTERTAX",
                              "MATCH",
                              "PROFITSHARING",
                              "ROLLOVER",
                              "OTHERVEST",
                              "OTHERNONVEST"
                            ],
                            "type": "string"
                          },
                          "marketValue": {
                            "description": "Market value at the time of data retrieved",
                            "type": "number"
                          },
                          "mutualFundSecurity": {
                            "description": "Information about the mutual fund security specific to the type of security",
                            "properties": {
                              "mutualFundType": {
                                "description": "Mutual fund type",
                                "enum": [
                                  "OPENEND",
                                  "CLOSEEND",
                                  "OTHER"
                                ],
                                "type": "string"
                              },
                              "reinvestCapitalGains": {
                                "description": "Reinvest capital gains",
                                "type": "boolean"
                              },
                              "reinvestDividends": {
                                "description": "Reinvest dividends",
                                "type": "boolean"
                              },
                              "unitsStreet": {
                                "description": "Units in the FI's street name, positive quantity",
                                "type": "number"
                              },
                              "unitsUser": {
                                "description": "Units in user's name directly, positive  quantity",
                                "type": "number"
                              },
                              "yield": {
                                "description": "Current yield reported as portion of the fund's assets",
                                "type": "number"
                              },
                              "yieldAsOfDate": {
                                "description": "As-of date for yield value",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "MutualFundSecurity Entity",
                            "type": "object"
                          },
                          "optionSecurity": {
                            "description": "Information about the option security specific to the type of security",
                            "properties": {
                              "expireDate": {
                                "description": "Expiration date of option",
                                "format": "date-time",
                                "type": "string"
                              },
                              "optionType": {
                                "enum": [
                                  "CALL",
                                  "PUT"
                                ],
                                "type": "string"
                              },
                              "secured": {
                                "description": "How the option is secured",
                                "enum": [
                                  "COVERED",
                                  "NAKED"
                                ],
                                "type": "string"
                              },
                              "sharesPerContract": {
                                "description": "Shares per contract",
                                "type": "number"
                              },
                              "strikePrice": {
                                "description": "Strike price / Unit price",
                                "type": "number"
                              }
                            },
                            "title": "OptionSecurity Entity",
                            "type": "object"
                          },
                          "originalPurchaseDate": {
                            "description": "Date of original purchase",
                            "format": "date-time",
                            "type": "string"
                          },
                          "otherSecurity": {
                            "description": "Information about the security specific to the type of security",
                            "properties": {
                              "typeDescription": {
                                "description": "Description of Other Security",
                                "type": "string"
                              }
                            },
                            "title": "OtherSecurity Entity",
                            "type": "object"
                          },
                          "positionType": {
                            "enum": [
                              "LONG",
                              "SHORT"
                            ],
                            "type": "string"
                          },
                          "purchasedPrice": {
                            "description": "Price of holding at the time of purchase",
                            "type": "number"
                          },
                          "rate": {
                            "description": "For CDs, bonds, and other rate based holdings.",
                            "type": "number"
                          },
                          "securityId": {
                            "description": "Unique identifier of security",
                            "type": "string"
                          },
                          "securityIdType": {
                            "description": "Security identifier type",
                            "enum": [
                              "CUSIP",
                              "ISIN",
                              "SEDOL",
                              "SICC",
                              "VALOR",
                              "WKN"
                            ],
                            "type": "string"
                          },
                          "stockSecurity": {
                            "description": "Information about the stock security specific to the type of security",
                            "properties": {
                              "reinvestDividends": {
                                "description": "Reinvest dividends",
                                "type": "boolean"
                              },
                              "stockType": {
                                "enum": [
                                  "BOND",
                                  "DEBT",
                                  "MUTUALFUND",
                                  "OPTION",
                                  "OTHER",
                                  "STOCK",
                                  "SWEEP"
                                ],
                                "type": "string"
                              },
                              "unitsStreet": {
                                "description": "Units in the FI's street name, positive quantity",
                                "type": "number"
                              },
                              "unitsUser": {
                                "description": "Units in user's name directly, positive  quantity",
                                "type": "number"
                              },
                              "yield": {
                                "description": "Current yield",
                                "type": "number"
                              },
                              "yieldAsOfDate": {
                                "description": "Yield as-of date",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "title": "StockSecurity Entity",
                            "type": "object"
                          },
                          "sweepSecurity": {
                            "description": "Information about the sweep security specific to the type of security",
                            "properties": {
                              "availableBalance": {
                                "description": "Balance of funds available for use",
                                "type": "number"
                              },
                              "balanceAsOf": {
                                "description": "As-of date of balances",
                                "format": "date-time",
                                "type": "string"
                              },
                              "checks": {
                                "description": "Whether or not checks can be written on the account",
                                "type": "boolean"
                              },
                              "currentBalance": {
                                "description": "Balance of funds in account",
                                "type": "number"
                              }
                            },
                            "title": "SweepSecurity Entity",
                            "type": "object"
                          },
                          "symbol": {
                            "description": "Ticker / Market symbol",
                            "type": "string"
                          },
                          "taxLots": {
                            "description": "Breakdown by tax lot.",
                            "items": {
                              "properties": {
                                "costBasis": {
                                  "description": "Total amount of money spent acquiring this lot including any fees or commission expenses incurred.",
                                  "type": "number"
                                },
                                "currentValue": {
                                  "description": "Lot market value",
                                  "type": "number"
                                },
                                "originalPurchaseDate": {
                                  "description": "Lot acquired date.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "postionType": {
                                  "description": "LONG, SHORT.",
                                  "enum": [
                                    "LONG",
                                    "SHORT"
                                  ],
                                  "type": "string"
                                },
                                "purchasedPrice": {
                                  "description": "Original purchase price.",
                                  "type": "number"
                                },
                                "quantity": {
                                  "description": "Lot quantity.",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true
                          },
                          "units": {
                            "description": "Required for stock, mutual funds. Number of shares (with decimals).",
                            "type": "number"
                          }
                        },
                        "title": "An investment holding",
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Akoya ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Holding data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemoteFingoalProfile": {
        "type": "object",
        "description": "Remote Data about the Profile.",
        "title": "RemoteFingoalProfile",
        "required": [
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "FINGOAL"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "findmoney.fingoal.com": {
                "minProperties": 1,
                "properties": {
                  "/v3/users/{user_id}": {
                    "properties": {
                      "body": {
                        "properties": {
                          "clientId": {
                            "description": "Your client ID.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The user ID.",
                            "type": "string"
                          },
                          "tags": {
                            "description": "The FinSight API tags that were applied to the user.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "totaltransactions": {
                            "description": "The total number of transactions the user has in FinSight API.",
                            "type": "number"
                          },
                          "transactionsSinceLastUpdate": {
                            "description": "The number of transactions since the last time insights were run for the user.",
                            "type": "number"
                          },
                          "uid": {
                            "description": "The user's ID.",
                            "type": "string"
                          },
                          "uniqueId": {
                            "description": "The user's unique ID in the format of `client_id:uid`.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "uid"
                        ],
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Fingoal ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Profile data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemoteFingoalTransaction": {
        "type": "object",
        "description": "Remote Data about the Transaction.",
        "title": "RemoteFingoalTransaction",
        "required": [
          "transactionId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "FINGOAL"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "findmoney.fingoal.com": {
                "minProperties": 1,
                "properties": {
                  "/v3/cleanup": {
                    "properties": {
                      "body": {
                        "properties": {
                          "accountid": {
                            "description": "The ID of the account associated with the transaction",
                            "type": "string"
                          },
                          "amountnum": {
                            "description": "The transaction's USD amount",
                            "type": "number"
                          },
                          "category": {
                            "description": "The most applicable categorization for the transaction",
                            "type": "string"
                          },
                          "categoryId": {
                            "description": "The numeric ID of the transaction's category",
                            "type": "number"
                          },
                          "categoryLabel": {
                            "deprecated": true,
                            "description": "A cascading hierarchy of the transaction's categories, from high-level to detail-level categorization. This field is deprecated and not recommended for use, as it may not reflect more correct information available in other 'category' fields.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "clientId": {
                            "description": "Your FinGoal client ID",
                            "type": "string"
                          },
                          "container": {
                            "description": "A high-level categorization of the account type. Eg, 'bank'",
                            "type": "string"
                          },
                          "date": {
                            "description": "The date on which the transaction took place",
                            "format": "date-time",
                            "type": "string"
                          },
                          "detailCategoryId": {
                            "description": "The numeric ID of the transaction's detail category",
                            "type": "number"
                          },
                          "guid": {
                            "description": "The transaction's globally unique FinSight API issued ID",
                            "type": "string"
                          },
                          "highLevelCategoryId": {
                            "description": "The numeric ID of the transaction's high level category",
                            "type": "number"
                          },
                          "isPhysical": {
                            "description": "Whether the transaction was made at a physical location, or online",
                            "type": "boolean"
                          },
                          "isRecurring": {
                            "description": "Whether the transaction is set to recur on a fixed interval",
                            "type": "boolean"
                          },
                          "merchantAddress1": {
                            "description": "The street address of the merchant associated with the transaction",
                            "type": "string"
                          },
                          "merchantCity": {
                            "description": "The name of the city where the merchant is located",
                            "type": "string"
                          },
                          "merchantCountry": {
                            "description": "The name of the country where the merchant is located",
                            "type": "string"
                          },
                          "merchantLatitude": {
                            "description": "The latitude of the merchant",
                            "type": "string"
                          },
                          "merchantLogoURL": {
                            "description": "The URL resource for the merchant's logo",
                            "type": "string"
                          },
                          "merchantLongitude": {
                            "description": "The longitude of the merchant",
                            "type": "string"
                          },
                          "merchantName": {
                            "description": "The name of the merchant associated with the transaction",
                            "type": "string"
                          },
                          "merchantPhoneNumber": {
                            "description": "The phone number of the merchant associated with the transaction",
                            "type": "string"
                          },
                          "merchantState": {
                            "description": "The name of the state where the merchant is located",
                            "type": "string"
                          },
                          "merchantType": {
                            "description": "The merchant's type",
                            "type": "string"
                          },
                          "merchantZip": {
                            "description": "The ZIP code where the merchant is located",
                            "type": "string"
                          },
                          "originalDescription": {
                            "description": "The transaction description as received. This will not change",
                            "type": "string"
                          },
                          "receiptDate": {
                            "description": "The date on which FinSight API first received the transaction",
                            "format": "date-time",
                            "type": "string"
                          },
                          "requestId": {
                            "description": "A unique ID for the request the transaction came in with, for debugging purposes",
                            "type": "string"
                          },
                          "simpleDescription": {
                            "description": "An easy-to-understand, plain-language transaction description",
                            "type": "string"
                          },
                          "sourceId": {
                            "description": "The source of the transaction",
                            "type": "string"
                          },
                          "subType": {
                            "description": "A more detailed classification that provides further information on the type of transaction.",
                            "type": "string"
                          },
                          "transactionTags": {
                            "description": "The FinSight API issued tags for the transaction",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "transactionid": {
                            "description": "The ID of the transaction as it was originally submitted",
                            "type": "string"
                          },
                          "type": {
                            "description": "An attribute describing the nature of the intent behind the transaction.",
                            "type": "string"
                          },
                          "uid": {
                            "description": "The ID of the user associated with the transaction, as originally submitted",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Fingoal ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Transaction data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemoteMXAccount": {
        "type": "object",
        "description": "Remote Data about the Account.",
        "title": "RemoteMXAccount",
        "required": [
          "accountId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "accountId": {
            "type": "string",
            "description": "The ID of the Account.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Account ID",
            "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "MX"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "api.mx.com": {
                "minProperties": 1,
                "properties": {
                  "/users/{user_guid}/accounts": {
                    "properties": {
                      "body": {
                        "properties": {
                          "accountNumber": {
                            "example": "5366",
                            "nullable": true,
                            "type": "string"
                          },
                          "accountOwnership": {
                            "example": "INDIVIDUAL",
                            "nullable": true,
                            "type": "string"
                          },
                          "annuityPolicyToDate": {
                            "example": "2016-10-13T17:57:37.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "annuityProvider": {
                            "example": "Metlife",
                            "nullable": true,
                            "type": "string"
                          },
                          "annuityTermYear": {
                            "example": 2048,
                            "nullable": true,
                            "type": "number"
                          },
                          "apr": {
                            "example": 1,
                            "nullable": true,
                            "type": "number"
                          },
                          "apy": {
                            "example": 1,
                            "nullable": true,
                            "type": "number"
                          },
                          "availableBalance": {
                            "example": 1000,
                            "nullable": true,
                            "type": "number"
                          },
                          "availableCredit": {
                            "example": 1000,
                            "nullable": true,
                            "type": "number"
                          },
                          "balance": {
                            "example": 10000,
                            "nullable": true,
                            "type": "number"
                          },
                          "cashBalance": {
                            "example": 1000,
                            "nullable": true,
                            "type": "number"
                          },
                          "cashSurrenderValue": {
                            "example": 1000,
                            "nullable": true,
                            "type": "number"
                          },
                          "createdAt": {
                            "example": "2023-07-25T17:14:46Z",
                            "nullable": false,
                            "type": "string"
                          },
                          "creditLimit": {
                            "example": 100,
                            "nullable": true,
                            "type": "number"
                          },
                          "currencyCode": {
                            "example": "USD",
                            "nullable": true,
                            "type": "string"
                          },
                          "dayPaymentIsDue": {
                            "example": 20,
                            "nullable": true,
                            "type": "integer"
                          },
                          "deathBenefit": {
                            "example": 1000,
                            "nullable": true,
                            "type": "integer"
                          },
                          "guid": {
                            "example": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                            "nullable": true,
                            "type": "string"
                          },
                          "holdingsValue": {
                            "example": 1000,
                            "nullable": true,
                            "type": "number"
                          },
                          "id": {
                            "example": "1040434698",
                            "nullable": true,
                            "type": "string"
                          },
                          "importedAt": {
                            "example": "2015-10-13T17:57:37.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "institutionCode": {
                            "example": "3af3685e-05d9-7060-359f-008d0755e993",
                            "nullable": true,
                            "type": "string"
                          },
                          "insuredName": {
                            "example": "Tommy Shelby",
                            "nullable": true,
                            "type": "string"
                          },
                          "interestRate": {
                            "example": 1,
                            "nullable": true,
                            "type": "number"
                          },
                          "isClosed": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isHidden": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isManual": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "lastPayment": {
                            "example": 100,
                            "nullable": true,
                            "type": "number"
                          },
                          "lastPaymentAt": {
                            "example": "2023-07-25T17:14:46Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "loanAmount": {
                            "example": 1000,
                            "nullable": true,
                            "type": "number"
                          },
                          "marginBalance": {
                            "example": 1000,
                            "nullable": true,
                            "type": "number"
                          },
                          "maturesOn": {
                            "example": "2015-10-13T17:57:37.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "memberGuid": {
                            "example": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                            "nullable": true,
                            "type": "string"
                          },
                          "memberId": {
                            "example": "member123",
                            "nullable": true,
                            "type": "string"
                          },
                          "memberIsManagedByUser": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "metadata": {
                            "example": "some metadata",
                            "nullable": true,
                            "type": "string"
                          },
                          "minimumBalance": {
                            "example": 100,
                            "nullable": true,
                            "type": "number"
                          },
                          "minimumPayment": {
                            "example": 10,
                            "nullable": true,
                            "type": "number"
                          },
                          "name": {
                            "example": "Test account 2",
                            "nullable": true,
                            "type": "string"
                          },
                          "nickname": {
                            "example": "My Checking",
                            "nullable": true,
                            "type": "string"
                          },
                          "originalBalance": {
                            "example": 10,
                            "nullable": true,
                            "type": "number"
                          },
                          "payOutAmount": {
                            "example": 10,
                            "nullable": true,
                            "type": "number"
                          },
                          "paymentDueAt": {
                            "example": "2015-10-13T17:57:37.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "payoffBalance": {
                            "example": 10,
                            "nullable": true,
                            "type": "number"
                          },
                          "premiumAmount": {
                            "example": 1,
                            "nullable": true,
                            "type": "number"
                          },
                          "propertyType": {
                            "example": "VEHICLE",
                            "nullable": true,
                            "type": "string"
                          },
                          "routingNumber": {
                            "example": "68899990000000",
                            "nullable": true,
                            "type": "string"
                          },
                          "startedOn": {
                            "example": "2015-10-13T17:57:37.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "subtype": {
                            "example": "NONE",
                            "nullable": true,
                            "type": "string"
                          },
                          "todayUglAmount": {
                            "example": 1000.5,
                            "nullable": true,
                            "type": "number"
                          },
                          "todayUglPercentage": {
                            "example": 6.9,
                            "nullable": true,
                            "type": "number"
                          },
                          "totalAccountValue": {
                            "example": 1,
                            "nullable": true,
                            "type": "number"
                          },
                          "type": {
                            "example": "SAVINGS",
                            "nullable": true,
                            "type": "string"
                          },
                          "updatedAt": {
                            "example": "2016-10-13T18:08:00.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "userGuid": {
                            "example": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                            "nullable": true,
                            "type": "string"
                          },
                          "userId": {
                            "example": "user123",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's MX ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Account data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "/users/{user_guid}/members/{member_guid}/account_owners": {
                    "properties": {
                      "body": {
                        "items": {
                          "properties": {
                            "accountGuid": {
                              "example": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                              "nullable": true,
                              "type": "string"
                            },
                            "address": {
                              "example": "123 This Way",
                              "nullable": true,
                              "type": "string"
                            },
                            "city": {
                              "example": "Middlesex",
                              "nullable": true,
                              "type": "string"
                            },
                            "country": {
                              "example": "US",
                              "nullable": true,
                              "type": "string"
                            },
                            "email": {
                              "example": "donnie@darko.co",
                              "nullable": true,
                              "type": "string"
                            },
                            "firstName": {
                              "example": "Donnie",
                              "nullable": true,
                              "type": "string"
                            },
                            "guid": {
                              "example": "ACO-63dc7714-6fc0-4aa2-a069-c06cdccd1af9",
                              "nullable": true,
                              "type": "string"
                            },
                            "lastName": {
                              "example": "Darko",
                              "nullable": true,
                              "type": "string"
                            },
                            "memberGuid": {
                              "example": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                              "nullable": true,
                              "type": "string"
                            },
                            "ownerName": {
                              "example": "Donnie Darko",
                              "nullable": true,
                              "type": "string"
                            },
                            "phone": {
                              "example": "555-555-5555",
                              "nullable": true,
                              "type": "string"
                            },
                            "postalCode": {
                              "example": "00000-0000",
                              "nullable": true,
                              "type": "string"
                            },
                            "state": {
                              "example": "VA",
                              "nullable": true,
                              "type": "string"
                            },
                            "userGuid": {
                              "example": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "description": "The record's MX ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Account data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemoteMXConnection": {
        "type": "object",
        "description": "Remote Data about the Connection.",
        "title": "RemoteMXConnection",
        "required": [
          "connectionId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "connectionId": {
            "type": "string",
            "description": "The ID of the Connection.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Connection ID",
            "example": "conn_14TJiFDKRJlPiBHuukUIlXZ"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "MX"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "api.mx.com": {
                "minProperties": 1,
                "properties": {
                  "/users/{user_guid}/members/{member_guid}": {
                    "properties": {
                      "body": {
                        "properties": {
                          "aggregatedAt": {
                            "example": "2016-10-13T18:07:57.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "backgroundAggregationIsDisabled": {
                            "example": false,
                            "type": "boolean"
                          },
                          "connectionStatus": {
                            "example": "CONNECTED",
                            "nullable": true,
                            "type": "string"
                          },
                          "guid": {
                            "example": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                            "nullable": true,
                            "type": "string"
                          },
                          "id": {
                            "example": "unique_id",
                            "nullable": true,
                            "type": "string"
                          },
                          "institutionCode": {
                            "example": "chase",
                            "nullable": true,
                            "type": "string"
                          },
                          "isBeingAggregated": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isManagedByUser": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isOAuth": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "metadata": {
                            "example": "\\\"credentials_last_refreshed_at\\\": \\\"2015-10-15\\\"",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "example": "Chase Bank",
                            "nullable": true,
                            "type": "string"
                          },
                          "oauthWindowUri": {
                            "example": "https://mxbank.mx.com/oauth/authorize?client_id=b8OikQ4Ep3NuSUrQ13DdvFuwpNx-qqoAsJDVAQCyLkQ&redirect_uri=https%3A%2F%2Fint-app.moneydesktop.com%2Foauth%2Fredirect_from&response_type=code&scope=openid&state=d745bd4ee6f0f9c184757f574bcc2df2",
                            "nullable": true,
                            "type": "string"
                          },
                          "successfullyAggregatedAt": {
                            "example": "2016-10-13T17:57:38.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "userGuid": {
                            "example": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                            "nullable": true,
                            "type": "string"
                          },
                          "userId": {
                            "example": "user123",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's MX ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Connection data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemoteMXTransaction": {
        "type": "object",
        "description": "Remote Data about the Transaction.",
        "title": "RemoteMXTransaction",
        "required": [
          "transactionId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "MX"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "api.mx.com": {
                "minProperties": 1,
                "properties": {
                  "/users/{user_guid}/transactions": {
                    "properties": {
                      "body": {
                        "properties": {
                          "accountGuid": {
                            "example": "ACT-06d7f44b-caae-0f6e-1384-01f52e75dcb1",
                            "nullable": true,
                            "type": "string"
                          },
                          "accountId": {
                            "example": "account123",
                            "nullable": true,
                            "type": "string"
                          },
                          "amount": {
                            "example": 61.11,
                            "nullable": true,
                            "type": "number"
                          },
                          "category": {
                            "example": "Groceries",
                            "nullable": true,
                            "type": "string"
                          },
                          "categoryGuid": {
                            "example": "CAT-9588eaad-90a4-bb5c-66c8-1812503d0db8",
                            "nullable": true,
                            "type": "string"
                          },
                          "checkNumberString": {
                            "example": "6812",
                            "nullable": true,
                            "type": "string"
                          },
                          "createdAt": {
                            "example": "2016-10-06T09:43:42.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "currencyCode": {
                            "example": "USD",
                            "nullable": true,
                            "type": "string"
                          },
                          "date": {
                            "example": "2013-09-23T00:00:00.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "description": {
                            "example": "Whole foods",
                            "nullable": true,
                            "type": "string"
                          },
                          "extendedTransactionType": {
                            "example": "partner_transaction_type",
                            "nullable": true,
                            "type": "string"
                          },
                          "guid": {
                            "example": "TRN-265abee9-889b-af6a-c69b-25157db2bdd9",
                            "nullable": true,
                            "type": "string"
                          },
                          "id": {
                            "example": "transaction-265abee9-889b-af6a-c69b-25157db2bdd9",
                            "nullable": true,
                            "type": "string"
                          },
                          "isBillPay": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isDirectDeposit": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isExpense": {
                            "example": true,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isFee": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isIncome": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isInternational": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isOverdraftFee": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isPayrollAdvance": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isRecurring": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isSubscription": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "latitude": {
                            "example": -43.2075,
                            "nullable": true,
                            "type": "number"
                          },
                          "localizedDescription": {
                            "example": "This is a localized_description",
                            "nullable": true,
                            "type": "string"
                          },
                          "localizedMemo": {
                            "example": "This is a localized_memo",
                            "nullable": true,
                            "type": "string"
                          },
                          "longitude": {
                            "example": 139.691706,
                            "nullable": true,
                            "type": "number"
                          },
                          "memberGuid": {
                            "example": "MBR-7c6f361b-e582-15b6-60c0-358f12466b4b",
                            "nullable": true,
                            "type": "string"
                          },
                          "memberIsManagedByUser": {
                            "example": false,
                            "nullable": true,
                            "type": "boolean"
                          },
                          "memo": {
                            "example": "This is a memo",
                            "nullable": true,
                            "type": "string"
                          },
                          "merchantCategoryCode": {
                            "example": 5411,
                            "nullable": true,
                            "type": "integer"
                          },
                          "merchantGuid": {
                            "example": "MCH-7ed79542-884d-2b1b-dd74-501c5cc9d25b",
                            "nullable": true,
                            "type": "string"
                          },
                          "merchantLocationGuid": {
                            "example": "MCL-00024e59-18b5-4d79-b879-2a7896726fea",
                            "nullable": true,
                            "type": "string"
                          },
                          "metadata": {
                            "example": "some metadata",
                            "nullable": true,
                            "type": "string"
                          },
                          "originalDescription": {
                            "example": "WHOLEFDS TSQ 102",
                            "nullable": true,
                            "type": "string"
                          },
                          "postedAt": {
                            "example": "2016-10-07T06:00:00.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "status": {
                            "example": "POSTED",
                            "nullable": true,
                            "type": "string"
                          },
                          "topLevelCategory": {
                            "example": "Food & Dining",
                            "nullable": true,
                            "type": "string"
                          },
                          "transactedAt": {
                            "example": "2016-10-06T13:00:00.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "type": {
                            "example": "DEBIT",
                            "nullable": true,
                            "type": "string"
                          },
                          "updatedAt": {
                            "example": "2016-10-07T05:49:12.000Z",
                            "nullable": true,
                            "type": "string"
                          },
                          "userGuid": {
                            "example": "USR-fa7537f3-48aa-a683-a02a-b18940482f54",
                            "nullable": true,
                            "type": "string"
                          },
                          "userId": {
                            "example": "user123",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's MX ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Transaction data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemoteNtropyTransaction": {
        "type": "object",
        "description": "Remote Data about the Transaction.",
        "title": "RemoteNtropyTransaction",
        "required": [
          "transactionId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "NTROPY"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "api.ntropy.com": {
                "minProperties": 1,
                "properties": {
                  "/v2/transactions/{mode}": {
                    "properties": {
                      "body": {
                        "example": {
                          "intermediaries": [
                            {
                              "id": "916bc837-55ef-3106-88f6-5a8269ca9f2a",
                              "logo": "https://logos.ntropy.com/squareup.com",
                              "name": "Square",
                              "website": "squareup.com"
                            }
                          ],
                          "labels": [
                            "Cafes and coffee shop"
                          ],
                          "location": "10 Union Square East, New York, New York 10003, US",
                          "locationStructured": {
                            "address": "10 Union Square East",
                            "appleMapsUrl": "https://maps.apple.com/?q=Starbucks+10+Union+Square+East&sll=40.734834,-73.989782",
                            "city": "New York",
                            "country": "US",
                            "googleMapsUrl": "https://www.google.com/maps/search/?api=1&query=Starbucks%2C10+Union+Square+East%2C+New+York%2C+New+York+10003%2C+US",
                            "latitude": 48.734834,
                            "longitude": -73.989782,
                            "postcode": "10003",
                            "state": "New York"
                          },
                          "logo": "https://logo.clearbit.com/aws.amazon.com",
                          "merchant": "Starbucks",
                          "merchantId": "d4bc3c80-ec1a-3da2-836e-2a4ca4758be5",
                          "recurrence": "recurring",
                          "recurrenceGroup": {
                            "averageAmount": 10,
                            "firstPaymentDate": "2020-02-02",
                            "id": "3b0c689b-e123-30a6-9f53-878f3ebf46aa",
                            "latestPaymentDate": "2022-02-02",
                            "otherParty": "starbucks.com",
                            "periodicity": "monthly",
                            "periodicityInDays": 31,
                            "totalAmount": 240,
                            "transactionIds": [
                              "b708fbd8-be76-41c2-86d5-83f8ba05ed85",
                              "0e34b24d-646d-416e-8d51-fda5b6e10684"
                            ]
                          },
                          "recurrenceGroupId": "3b0c689b-e123-30a6-9f53-878f3ebf46aa",
                          "transactionId": "xbx8YP14g565Xketw3tFmn4yp49x3tbj9mD8DB4fM8DDY6x",
                          "website": "starbucks.com"
                        },
                        "properties": {
                          "labels": {
                            "items": {
                              "type": "string"
                            },
                            "title": "Labels",
                            "type": "array"
                          },
                          "location": {
                            "title": "Location",
                            "type": "string"
                          },
                          "locationStructured": {
                            "properties": {
                              "address": {
                                "title": "Address",
                                "type": "string"
                              },
                              "appleMapsUrl": {
                                "title": "Apple Maps Url",
                                "type": "string"
                              },
                              "city": {
                                "title": "City",
                                "type": "string"
                              },
                              "country": {
                                "title": "Country",
                                "type": "string"
                              },
                              "googleMapsUrl": {
                                "title": "Google Maps Url",
                                "type": "string"
                              },
                              "latitude": {
                                "title": "Latitude",
                                "type": "number"
                              },
                              "longitude": {
                                "title": "Longitude",
                                "type": "number"
                              },
                              "postcode": {
                                "title": "Postcode",
                                "type": "string"
                              },
                              "state": {
                                "title": "State",
                                "type": "string"
                              },
                              "storeNumber": {
                                "title": "Store Number",
                                "type": "string"
                              }
                            },
                            "title": "LocationStructuredPublic",
                            "type": "object"
                          },
                          "logo": {
                            "title": "Logo",
                            "type": "string"
                          },
                          "mcc": {
                            "items": {
                              "type": "integer"
                            },
                            "title": "Mcc",
                            "type": "array"
                          },
                          "merchant": {
                            "title": "Merchant",
                            "type": "string"
                          },
                          "merchantId": {
                            "title": "Merchant Id",
                            "type": "string"
                          },
                          "person": {
                            "title": "Person",
                            "type": "string"
                          },
                          "recurrence": {
                            "description": "An enumeration.",
                            "enum": [
                              "recurring",
                              "subscription",
                              "one off"
                            ],
                            "title": "RecurrenceType",
                            "type": "string"
                          },
                          "recurrenceGroup": {
                            "properties": {
                              "averageAmount": {
                                "title": "Average Amount",
                                "type": "number"
                              },
                              "firstPaymentDate": {
                                "format": "date",
                                "title": "First Payment Date",
                                "type": "string"
                              },
                              "id": {
                                "title": "Id",
                                "type": "string"
                              },
                              "latestPaymentDate": {
                                "format": "date",
                                "title": "Latest Payment Date",
                                "type": "string"
                              },
                              "periodicity": {
                                "title": "Periodicity",
                                "type": "string"
                              },
                              "periodicityInDays": {
                                "title": "Periodicity In Days",
                                "type": "number"
                              },
                              "totalAmount": {
                                "title": "Total Amount",
                                "type": "number"
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "title": "RecurrenceGroup",
                            "type": "object"
                          },
                          "recurrenceGroupId": {
                            "title": "Recurrence Group Id",
                            "type": "string"
                          },
                          "transactionId": {
                            "title": "Transaction Id",
                            "type": "string"
                          },
                          "transactionType": {
                            "description": "An enumeration.",
                            "enum": [
                              "business",
                              "consumer",
                              "unknown"
                            ],
                            "title": "TransactionType"
                          },
                          "website": {
                            "title": "Website",
                            "type": "string"
                          }
                        },
                        "required": [
                          "transactionId"
                        ],
                        "title": "EnrichedTransaction",
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Ntropy ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Transaction data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemotePaveProfile": {
        "type": "object",
        "description": "Remote Data about the Profile.",
        "title": "RemotePaveProfile",
        "required": [
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "PAVE"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "api.pave.dev": {
                "minProperties": 1,
                "properties": {
                  "/v1/users/{user_id}/unified_insights": {
                    "properties": {
                      "body": {
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Pave ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Profile data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemotePaveTransaction": {
        "type": "object",
        "description": "Remote Data about the Transaction.",
        "title": "RemotePaveTransaction",
        "required": [
          "transactionId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "PAVE"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "api.pave.dev": {
                "minProperties": 1,
                "properties": {
                  "/v1/users/{user_id}/transactions": {
                    "properties": {
                      "body": {
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Pave ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Transaction data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemotePlaidAccount": {
        "type": "object",
        "description": "Remote Data about the Account.",
        "title": "RemotePlaidAccount",
        "required": [
          "accountId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "accountId": {
            "type": "string",
            "description": "The ID of the Account.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Account ID",
            "example": "acct_12Hz9Dz7vEAuljYvhmPcvM9"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "PLAID"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "{environment}.plaid.com": {
                "minProperties": 1,
                "properties": {
                  "/accounts/get": {
                    "properties": {
                      "body": {
                        "additionalProperties": true,
                        "description": "A single account at a financial institution.",
                        "properties": {
                          "accountId": {
                            "description": "Plaid’s unique identifier for the account. This value will not change unless Plaid can't reconcile the account with the data returned by the financial institution. This may occur, for example, when the name of the account changes. If this happens a new `account_id` will be assigned to the account.\n\nThe `account_id` can also change if the `access_token` is deleted and the same credentials that were used to generate that `access_token` are used to generate a new `access_token` on a later date. In that case, the new `account_id` will be different from the old `account_id`.\n\nIf an account with a specific `account_id` disappears instead of changing, the account is likely closed. Closed accounts are not returned by the Plaid API.\n\nLike all Plaid identifiers, the `account_id` is case sensitive.",
                            "type": "string"
                          },
                          "balances": {
                            "additionalProperties": true,
                            "description": "A set of fields describing the balance for an account. Balance information may be cached unless the balance object was returned by `/accounts/balance/get`.",
                            "properties": {
                              "available": {
                                "description": "The amount of funds available to be withdrawn from the account, as determined by the financial institution.\n\nFor `credit`-type accounts, the `available` balance typically equals the `limit` less the `current` balance, less any pending outflows plus any pending inflows.\n\nFor `depository`-type accounts, the `available` balance typically equals the `current` balance less any pending outflows plus any pending inflows. For `depository`-type accounts, the `available` balance does not include the overdraft limit.\n\nFor `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier), the `available` balance is the total cash available to withdraw as presented by the institution.\n\nNote that not all institutions calculate the `available`  balance. In the event that `available` balance is unavailable, Plaid will return an `available` balance value of `null`.\n\nAvailable balance may be cached and is not guaranteed to be up-to-date in realtime unless the value was returned by `/accounts/balance/get`.\n\nIf `current` is `null` this field is guaranteed not to be `null`.",
                                "format": "double",
                                "nullable": true,
                                "type": "number"
                              },
                              "current": {
                                "description": "The total amount of funds in or owed by the account.\n\nFor `credit`-type accounts, a positive balance indicates the amount owed; a negative amount indicates the lender owing the account holder.\n\nFor `loan`-type accounts, the current balance is the principal remaining on the loan, except in the case of student loan accounts at Sallie Mae (`ins_116944`). For Sallie Mae student loans, the account's balance includes both principal and any outstanding interest. Similar to `credit`-type accounts, a positive balance is typically expected, while a negative amount indicates the lender owing the account holder.\n\nFor `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier), the current balance is the total value of assets as presented by the institution.\n\nNote that balance information may be cached unless the value was returned by `/accounts/balance/get`; if the Item is enabled for Transactions, the balance will be at least as recent as the most recent Transaction update. If you require realtime balance information, use the `available` balance as provided by `/accounts/balance/get`.\n\nWhen returned by `/accounts/balance/get`, this field may be `null`. When this happens, `available` is guaranteed not to be `null`.",
                                "format": "double",
                                "nullable": true,
                                "type": "number"
                              },
                              "isoCurrencyCode": {
                                "description": "The ISO-4217 currency code of the balance. Always null if `unofficial_currency_code` is non-null.",
                                "nullable": true,
                                "type": "string"
                              },
                              "lastUpdatedDatetime": {
                                "description": "Timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time the balance was updated.\n\nThis field is returned only when the institution is `ins_128026` (Capital One).",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "limit": {
                                "description": "For `credit`-type accounts, this represents the credit limit.\n\nFor `depository`-type accounts, this represents the pre-arranged overdraft limit, which is common for current (checking) accounts in Europe.\n\nIn North America, this field is typically only available for `credit`-type accounts.",
                                "format": "double",
                                "nullable": true,
                                "type": "number"
                              },
                              "unofficialCurrencyCode": {
                                "description": "The unofficial currency code associated with the balance. Always null if `iso_currency_code` is non-null. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.\n\nSee the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `unofficial_currency_code`s.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "available",
                              "current",
                              "limit",
                              "isoCurrencyCode",
                              "unofficialCurrencyCode"
                            ],
                            "title": "AccountBalance",
                            "type": "object"
                          },
                          "holderCategory": {
                            "description": "Indicates the account's categorization as either a personal or a business account. This field is currently in beta; to request access, contact your account manager.",
                            "enum": [
                              "business",
                              "personal",
                              "unrecognized"
                            ],
                            "nullable": true,
                            "title": "HolderCategory",
                            "type": "string"
                          },
                          "mask": {
                            "description": "The last 2-4 alphanumeric characters of either the account’s displayed mask or the account’s official account number. Note that the mask may be non-unique between an Item’s accounts.",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the account, either assigned by the user or by the financial institution itself",
                            "type": "string"
                          },
                          "officialName": {
                            "description": "The official name of the account as given by the financial institution",
                            "nullable": true,
                            "type": "string"
                          },
                          "persistentAccountId": {
                            "description": "A unique and persistent identifier for accounts that can be used to trace multiple instances of the same account across different Items for depository accounts. This field is currently supported only for Items at institutions that use Tokenized Account Numbers (i.e., Chase and PNC, and in May 2025 US Bank). Because these accounts have a different account number each time they are linked, this field may be used instead of the account number to uniquely identify an account across multiple Items for payments use cases, helping to reduce duplicate Items or attempted fraud. In Sandbox, this field is populated for TAN-based institutions (`ins_56`, `ins_13`) as well as the OAuth Sandbox institution (`ins_127287`); in Production, it will only be populated for accounts at applicable institutions.",
                            "type": "string"
                          },
                          "subtype": {
                            "description": "See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.",
                            "enum": [
                              "401a",
                              "401k",
                              "403B",
                              "457b",
                              "529",
                              "auto",
                              "brokerage",
                              "business",
                              "cash isa",
                              "cash management",
                              "cd",
                              "checking",
                              "commercial",
                              "construction",
                              "consumer",
                              "credit card",
                              "crypto exchange",
                              "ebt",
                              "education savings account",
                              "fixed annuity",
                              "gic",
                              "health reimbursement arrangement",
                              "home equity",
                              "hsa",
                              "isa",
                              "ira",
                              "keogh",
                              "lif",
                              "life insurance",
                              "line of credit",
                              "lira",
                              "loan",
                              "lrif",
                              "lrsp",
                              "money market",
                              "mortgage",
                              "mutual fund",
                              "non-custodial wallet",
                              "non-taxable brokerage account",
                              "other",
                              "other insurance",
                              "other annuity",
                              "overdraft",
                              "paypal",
                              "payroll",
                              "pension",
                              "prepaid",
                              "prif",
                              "profit sharing plan",
                              "rdsp",
                              "resp",
                              "retirement",
                              "rlif",
                              "roth",
                              "roth 401k",
                              "rrif",
                              "rrsp",
                              "sarsep",
                              "savings",
                              "sep ira",
                              "simple ira",
                              "sipp",
                              "stock plan",
                              "student",
                              "thrift savings plan",
                              "tfsa",
                              "trust",
                              "ugma",
                              "utma",
                              "variable annuity"
                            ],
                            "nullable": true,
                            "title": "AccountSubtype",
                            "type": "string"
                          },
                          "type": {
                            "description": "`investment:` Investment account. In API versions 2018-05-22 and earlier, this type is called `brokerage` instead.\n\n`credit:` Credit card\n\n`depository:` Depository account\n\n`loan:` Loan account\n\n`other:` Non-specified account type\n\nSee the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.",
                            "enum": [
                              "investment",
                              "credit",
                              "depository",
                              "loan",
                              "brokerage",
                              "other"
                            ],
                            "title": "AccountType",
                            "type": "string"
                          },
                          "verificationInsights": {
                            "additionalProperties": true,
                            "description": "Insights from performing database verification for the account. Only returned for Auth Items using Database Auth.",
                            "properties": {
                              "accountNumberFormat": {
                                "description": "Indicator of account number format validity for institution.\n\n`valid`: indicates that the account number has a correct format for the institution.\n\n`invalid`: indicates that the account number has an incorrect format for the institution.\n\n`unknown`: indicates that there was not enough information to determine whether the format is correct for the institution.",
                                "enum": [
                                  "valid",
                                  "invalid",
                                  "unknown"
                                ],
                                "title": "VerificationInsightsAccountNumberFormat",
                                "type": "string"
                              },
                              "nameMatchScore": {
                                "description": "Indicates the score of the name match between the given name provided during database verification (available in the [`verification_name`](https://plaid.com/docs/api/products/auth/#auth-get-response-accounts-verification-name) field) and matched Plaid network accounts. If defined, will be a value between 0 and 100. Will be undefined if name matching was not enabled for the database verification session or if there were no eligible Plaid network matches to compare the given name with.",
                                "nullable": true,
                                "type": "integer"
                              },
                              "networkStatus": {
                                "additionalProperties": true,
                                "description": "Status information about the account and routing number in the Plaid network.",
                                "properties": {
                                  "hasNumbersMatch": {
                                    "description": "Indicates whether we found at least one matching account for the ACH account and routing number.",
                                    "type": "boolean"
                                  },
                                  "isNumbersMatchVerified": {
                                    "description": "Indicates if at least one matching account for the ACH account and routing number is already verified.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "hasNumbersMatch",
                                  "isNumbersMatchVerified"
                                ],
                                "title": "VerificationInsightsNetworkStatus",
                                "type": "object"
                              },
                              "previousReturns": {
                                "additionalProperties": true,
                                "description": "Information about known ACH returns for the account and routing number.",
                                "properties": {
                                  "hasPreviousAdministrativeReturn": {
                                    "description": "Indicates whether Plaid's data sources include a known administrative ACH return for account and routing number.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "hasPreviousAdministrativeReturn"
                                ],
                                "title": "VerificationInsightsNetworkStatus",
                                "type": "object"
                              }
                            },
                            "required": [
                              "networkStatus",
                              "accountNumberFormat"
                            ],
                            "title": "VerificationInsights",
                            "type": "object"
                          },
                          "verificationName": {
                            "description": "The account holder name that was used for micro-deposit and/or database verification. Only returned for Auth Items created via micro-deposit or database verification. This name was manually-entered by the user during Link, unless it was otherwise provided via the `user.legal_name` request field in `/link/token/create` for the Link session that created the Item.",
                            "type": "string"
                          },
                          "verificationStatus": {
                            "description": "The current verification status of an Auth Item initiated through micro-deposits or database verification. Returned for Auth Items only.\n\n`pending_automatic_verification`: The Item is pending automatic verification\n\n`pending_manual_verification`: The Item is pending manual micro-deposit verification. Items remain in this state until the user successfully verifies the micro-deposit.\n\n`automatically_verified`: The Item has successfully been automatically verified\t\n\n`manually_verified`: The Item has successfully been manually verified\n\n`verification_expired`: Plaid was unable to automatically verify the deposit within 7 calendar days and will no longer attempt to validate the Item. Users may retry by submitting their information again through Link.\n\n`verification_failed`: The Item failed manual micro-deposit verification because the user exhausted all 3 verification attempts. Users may retry by submitting their information again through Link. \n\n `unsent`: The Item is pending micro-deposit verification, but Plaid has not yet sent the micro-deposit.\n\n`database_matched`: The Item has successfully been verified using Plaid's data sources. Only returned for Auth Items created via Database Match.\n\n`database_insights_pass`: The Item's numbers have been verified using Plaid's data sources: the routing and account number match a routing and account number of an account recognized on the Plaid network, and the account is not known by Plaid to be frozen or closed. Only returned for Auth Items created via Database Auth.\n\n`database_insights_pass_with_caution`:The Item's numbers have been verified using Plaid's data sources and have some signal for being valid: the routing and account number were not recognized on the Plaid network, but the routing number is valid and the account number is a potential valid account number for that routing number. Only returned for Auth Items created via Database Auth.\n\n`database_insights_fail`: The Item's numbers have been verified using Plaid's data sources and have signal for being invalid and/or have no signal for being valid. Typically this indicates that the routing number is invalid, the account number does not match the account number format associated with the routing number, or the account has been reported as closed or frozen. Only returned for Auth Items created via Database Auth.\t\n\t",
                            "enum": [
                              "automatically_verified",
                              "pending_automatic_verification",
                              "pending_manual_verification",
                              "unsent",
                              "manually_verified",
                              "verification_expired",
                              "verification_failed",
                              "database_matched",
                              "database_insights_pass",
                              "database_insights_pass_with_caution",
                              "database_insights_fail"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "accountId",
                          "balances",
                          "mask",
                          "name",
                          "officialName",
                          "type",
                          "subtype"
                        ],
                        "title": "Account",
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Plaid ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Account data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "/identity/get": {
                    "properties": {
                      "body": {
                        "items": {
                          "additionalProperties": true,
                          "description": "Data returned from the financial institution about the owner or owners of an account. Only the `names` array must be non-empty.",
                          "properties": {
                            "addresses": {
                              "description": "Data about the various addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.",
                              "items": {
                                "additionalProperties": true,
                                "description": "A physical mailing address.",
                                "properties": {
                                  "data": {
                                    "additionalProperties": true,
                                    "description": "Data about the components comprising an address.",
                                    "properties": {
                                      "city": {
                                        "description": "The full city name",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "country": {
                                        "description": "The ISO 3166-1 alpha-2 country code",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "postalCode": {
                                        "description": "The postal code. In API versions 2018-05-22 and earlier, this field is called `zip`.",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "region": {
                                        "description": "The region or state. In API versions 2018-05-22 and earlier, this field is called `state`.\nExample: `\"NC\"`",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "street": {
                                        "description": "The full street address\nExample: `\"564 Main Street, APT 15\"`",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "city",
                                      "region",
                                      "street",
                                      "postalCode",
                                      "country"
                                    ],
                                    "title": "AddressData",
                                    "type": "object"
                                  },
                                  "primary": {
                                    "description": "When `true`, identifies the address as the primary address on an account.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "data"
                                ],
                                "title": "Address",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "emails": {
                              "description": "A list of email addresses associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.",
                              "items": {
                                "additionalProperties": true,
                                "description": "An object representing an email address",
                                "properties": {
                                  "data": {
                                    "description": "The email address.",
                                    "type": "string"
                                  },
                                  "primary": {
                                    "description": "When `true`, identifies the email address as the primary email on an account.",
                                    "type": "boolean"
                                  },
                                  "type": {
                                    "description": "The type of email account as described by the financial institution.",
                                    "enum": [
                                      "primary",
                                      "secondary",
                                      "other"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "primary",
                                  "type"
                                ],
                                "title": "Email",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "names": {
                              "description": "A list of names associated with the account by the financial institution. In the case of a joint account, Plaid will make a best effort to report the names of all account holders.\n\nIf an Item contains multiple accounts with different owner names, some institutions will report all names associated with the Item in each account's `names` array.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "phoneNumbers": {
                              "description": "A list of phone numbers associated with the account by the financial institution. May be an empty array if no relevant information is returned from the financial institution.",
                              "items": {
                                "additionalProperties": true,
                                "description": "A phone number",
                                "properties": {
                                  "data": {
                                    "description": "The phone number.",
                                    "type": "string"
                                  },
                                  "primary": {
                                    "description": "When `true`, identifies the phone number as the primary number on an account.",
                                    "type": "boolean"
                                  },
                                  "type": {
                                    "description": "The type of phone number.",
                                    "enum": [
                                      "home",
                                      "work",
                                      "office",
                                      "mobile",
                                      "mobile1",
                                      "other"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "data",
                                  "primary",
                                  "type"
                                ],
                                "title": "PhoneNumber",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "names",
                            "phoneNumbers",
                            "emails",
                            "addresses"
                          ],
                          "title": "Owner",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "description": "The record's Plaid ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Account data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemotePlaidConnection": {
        "type": "object",
        "description": "Remote Data about the Connection.",
        "title": "RemotePlaidConnection",
        "required": [
          "connectionId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "connectionId": {
            "type": "string",
            "description": "The ID of the Connection.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Connection ID",
            "example": "conn_14TJiFDKRJlPiBHuukUIlXZ"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "PLAID"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "{environment}.plaid.com": {
                "minProperties": 1,
                "properties": {
                  "/item/get": {
                    "properties": {
                      "body": {
                        "additionalProperties": true,
                        "description": "Metadata about the Item.",
                        "properties": {
                          "authMethod": {
                            "description": "The method used to populate Auth data for the Item. This field is only populated for Items that have had Auth numbers data set on at least one of its accounts, and will be `null` otherwise. For info about the various flows, see our [Auth coverage documentation](https://plaid.com/docs/auth/coverage/).\n\n`INSTANT_AUTH`: The Item's Auth data was provided directly by the user's institution connection.\n\n`INSTANT_MATCH`: The Item's Auth data was provided via the Instant Match fallback flow.\n\n`AUTOMATED_MICRODEPOSITS`: The Item's Auth data was provided via the Automated Micro-deposits flow.\n\n`SAME_DAY_MICRODEPOSITS`: The Item's Auth data was provided via the Same Day Micro-deposits flow.\n\n`INSTANT_MICRODEPOSITS`: The Item's Auth data was provided via the Instant Micro-deposits flow.\n\n`DATABASE_MATCH`: The Item's Auth data was provided via the Database Match flow.\n\n`DATABASE_INSIGHTS`: The Item's Auth data was provided via the Database Insights flow.\n\n`TRANSFER_MIGRATED`: The Item's Auth data was provided via [`/transfer/migrate_account`](https://plaid.com/docs/api/products/transfer/account-linking/#migrate-account-into-transfers).\n\n`INVESTMENTS_FALLBACK`: The Item's Auth data for Investments Move was provided via a [fallback flow](https://plaid.com/docs/investments-move/#fallback-flows).",
                            "enum": [
                              "INSTANT_AUTH",
                              "INSTANT_MATCH",
                              "AUTOMATED_MICRODEPOSITS",
                              "SAME_DAY_MICRODEPOSITS",
                              "INSTANT_MICRODEPOSITS",
                              "DATABASE_MATCH",
                              "DATABASE_INSIGHTS",
                              "TRANSFER_MIGRATED",
                              "INVESTMENTS_FALLBACK"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "availableProducts": {
                            "description": "A list of products available for the Item that have not yet been accessed. The contents of this array will be mutually exclusive with `billed_products`.",
                            "items": {
                              "description": "A list of products that an institution can support. All Items must be initialized with at least one product. The Balance product is always available and does not need to be specified during initialization.",
                              "enum": [
                                "assets",
                                "auth",
                                "balance",
                                "balance_plus",
                                "beacon",
                                "identity",
                                "identity_match",
                                "investments",
                                "investments_auth",
                                "liabilities",
                                "payment_initiation",
                                "identity_verification",
                                "transactions",
                                "credit_details",
                                "income",
                                "income_verification",
                                "standing_orders",
                                "transfer",
                                "employment",
                                "recurring_transactions",
                                "transactions_refresh",
                                "signal",
                                "statements",
                                "processor_payments",
                                "processor_identity",
                                "profile",
                                "cra_base_report",
                                "cra_income_insights",
                                "cra_partner_insights",
                                "cra_network_insights",
                                "cra_cashflow_insights",
                                "layer",
                                "pay_by_bank",
                                "protect_linked_bank"
                              ],
                              "title": "Products",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "billedProducts": {
                            "description": "A list of products that have been billed for the Item. The contents of this array will be mutually exclusive with `available_products`. Note - `billed_products` is populated in all environments but only requests in Production are billed. Also note that products that are billed on a pay-per-call basis rather than a pay-per-Item basis, such as `balance`, will not appear here.\n",
                            "items": {
                              "description": "A list of products that an institution can support. All Items must be initialized with at least one product. The Balance product is always available and does not need to be specified during initialization.",
                              "enum": [
                                "assets",
                                "auth",
                                "balance",
                                "balance_plus",
                                "beacon",
                                "identity",
                                "identity_match",
                                "investments",
                                "investments_auth",
                                "liabilities",
                                "payment_initiation",
                                "identity_verification",
                                "transactions",
                                "credit_details",
                                "income",
                                "income_verification",
                                "standing_orders",
                                "transfer",
                                "employment",
                                "recurring_transactions",
                                "transactions_refresh",
                                "signal",
                                "statements",
                                "processor_payments",
                                "processor_identity",
                                "profile",
                                "cra_base_report",
                                "cra_income_insights",
                                "cra_partner_insights",
                                "cra_network_insights",
                                "cra_cashflow_insights",
                                "layer",
                                "pay_by_bank",
                                "protect_linked_bank"
                              ],
                              "title": "Products",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "consentExpirationTime": {
                            "description": "The date and time at which the Item's access consent will expire, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format. If the Item does not have consent expiration scheduled, this field will be `null`. Currently, only institutions in Europe and a small number of institutions in the US have expiring consent. Closer to the 1033 compliance deadline of April 1, 2026, expiration times will be populated more widely. For more details, see [Data Transparency Messaging consent expiration](https://plaid.com/docs/link/data-transparency-messaging-migration-guide/#consent-expiration-and-reauthorization).",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "consentedProducts": {
                            "description": "A list of products that the user has consented to for the Item via [Data Transparency Messaging](/docs/link/data-transparency-messaging-migration-guide). This will consist of all products where both of the following are true: the user has consented to the required data scopes for that product and you have Production access for that product.\n",
                            "items": {
                              "description": "A list of products that an institution can support. All Items must be initialized with at least one product. The Balance product is always available and does not need to be specified during initialization.",
                              "enum": [
                                "assets",
                                "auth",
                                "balance",
                                "balance_plus",
                                "beacon",
                                "identity",
                                "identity_match",
                                "investments",
                                "investments_auth",
                                "liabilities",
                                "payment_initiation",
                                "identity_verification",
                                "transactions",
                                "credit_details",
                                "income",
                                "income_verification",
                                "standing_orders",
                                "transfer",
                                "employment",
                                "recurring_transactions",
                                "transactions_refresh",
                                "signal",
                                "statements",
                                "processor_payments",
                                "processor_identity",
                                "profile",
                                "cra_base_report",
                                "cra_income_insights",
                                "cra_partner_insights",
                                "cra_network_insights",
                                "cra_cashflow_insights",
                                "layer",
                                "pay_by_bank",
                                "protect_linked_bank"
                              ],
                              "title": "Products",
                              "type": "string"
                            },
                            "type": "array",
                            "x-override-enum-values-shown": [
                              "assets",
                              "auth",
                              "balance",
                              "balance_plus",
                              "beacon",
                              "identity",
                              "identity_match",
                              "investments",
                              "investments_auth",
                              "liabilities",
                              "transactions",
                              "income",
                              "income_verification",
                              "transfer",
                              "employment",
                              "recurring_transactions",
                              "signal",
                              "statements",
                              "processor_payments",
                              "processor_identity",
                              "cra_base_report",
                              "cra_income_insights",
                              "cra_partner_insights",
                              "cra_cashflow_insights",
                              "layer"
                            ]
                          },
                          "error": {
                            "additionalProperties": true,
                            "description": "Errors are identified by `error_code` and categorized by `error_type`. Use these in preference to HTTP status codes to identify and handle specific errors. HTTP status codes are set and provide the broadest categorization of errors: 4xx codes are for developer- or user-related errors, and 5xx codes are for Plaid-related errors, and the status will be 2xx in non-error cases. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.",
                            "nullable": true,
                            "properties": {
                              "causes": {
                                "description": "In this product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.\n\n`causes` will be provided for the `error_type` `ASSET_REPORT_ERROR` or `CHECK_REPORT_ERROR`. `causes` will also not be populated inside an error nested within a `warning` object.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "displayMessage": {
                                "description": "A user-friendly representation of the error code. `null` if the error is not related to user action.\n\nThis may change over time and is not safe for programmatic use.",
                                "nullable": true,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "The URL of a Plaid documentation page with more information about the error",
                                "type": "string"
                              },
                              "errorCode": {
                                "description": "The particular error code. Safe for programmatic use.",
                                "type": "string"
                              },
                              "errorCodeReason": {
                                "description": "The specific reason for the error code. Currently, reasons are only supported OAuth-based item errors; `null` will be returned otherwise. Safe for programmatic use.\n\nPossible values:\n`OAUTH_INVALID_TOKEN`: The user’s OAuth connection to this institution has been invalidated.\n\n`OAUTH_CONSENT_EXPIRED`: The user's access consent for this OAuth connection to this institution has expired.\n\n`OAUTH_USER_REVOKED`: The user’s OAuth connection to this institution is invalid because the user revoked their connection.",
                                "nullable": true,
                                "type": "string"
                              },
                              "errorMessage": {
                                "description": "A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.",
                                "type": "string"
                              },
                              "errorType": {
                                "description": "A broad categorization of the error. Safe for programmatic use.",
                                "enum": [
                                  "INVALID_REQUEST",
                                  "INVALID_RESULT",
                                  "INVALID_INPUT",
                                  "INSTITUTION_ERROR",
                                  "RATE_LIMIT_EXCEEDED",
                                  "API_ERROR",
                                  "ITEM_ERROR",
                                  "ASSET_REPORT_ERROR",
                                  "RECAPTCHA_ERROR",
                                  "OAUTH_ERROR",
                                  "PAYMENT_ERROR",
                                  "BANK_TRANSFER_ERROR",
                                  "INCOME_VERIFICATION_ERROR",
                                  "MICRODEPOSITS_ERROR",
                                  "SANDBOX_ERROR",
                                  "PARTNER_ERROR",
                                  "TRANSACTIONS_ERROR",
                                  "TRANSACTION_ERROR",
                                  "TRANSFER_ERROR",
                                  "CHECK_REPORT_ERROR",
                                  "CONSUMER_REPORT_ERROR"
                                ],
                                "title": "PlaidErrorType",
                                "type": "string"
                              },
                              "requestId": {
                                "description": "A unique ID identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks.",
                                "type": "string"
                              },
                              "status": {
                                "description": "The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook.",
                                "nullable": true,
                                "type": "integer"
                              },
                              "suggestedAction": {
                                "description": "Suggested steps for resolving the error",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "errorType",
                              "errorCode",
                              "errorMessage",
                              "displayMessage"
                            ],
                            "title": "Error",
                            "type": "object"
                          },
                          "institutionId": {
                            "description": "The Plaid Institution ID associated with the Item. Field is `null` for Items created without an institution connection, such as Items created via Same Day Micro-deposits.",
                            "nullable": true,
                            "type": "string"
                          },
                          "institutionName": {
                            "description": "The name of the institution associated with the Item. Field is `null` for Items created without an institution connection, such as Items created via Same Day Micro-deposits.",
                            "nullable": true,
                            "type": "string"
                          },
                          "itemId": {
                            "description": "The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.",
                            "type": "string"
                          },
                          "products": {
                            "description": "A list of products added to the Item. In almost all cases, this will be the same as the `billed_products` field. For some products, it is possible for the product to be added to an Item but not yet billed (e.g. Assets, before `/asset_report/create` has been called, or Auth or Identity when added as Optional Products but before their endpoints have been called), in which case the product may appear in `products` but not in `billed_products`.\n",
                            "items": {
                              "description": "A list of products that an institution can support. All Items must be initialized with at least one product. The Balance product is always available and does not need to be specified during initialization.",
                              "enum": [
                                "assets",
                                "auth",
                                "balance",
                                "balance_plus",
                                "beacon",
                                "identity",
                                "identity_match",
                                "investments",
                                "investments_auth",
                                "liabilities",
                                "payment_initiation",
                                "identity_verification",
                                "transactions",
                                "credit_details",
                                "income",
                                "income_verification",
                                "standing_orders",
                                "transfer",
                                "employment",
                                "recurring_transactions",
                                "transactions_refresh",
                                "signal",
                                "statements",
                                "processor_payments",
                                "processor_identity",
                                "profile",
                                "cra_base_report",
                                "cra_income_insights",
                                "cra_partner_insights",
                                "cra_network_insights",
                                "cra_cashflow_insights",
                                "layer",
                                "pay_by_bank",
                                "protect_linked_bank"
                              ],
                              "title": "Products",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "updateType": {
                            "description": "Indicates whether an Item requires user interaction to be updated, which can be the case for Items with some forms of two-factor authentication.\n\n`background` - Item can be updated in the background\n\n`user_present_required` - Item requires user interaction to be updated",
                            "enum": [
                              "background",
                              "user_present_required"
                            ],
                            "type": "string"
                          },
                          "webhook": {
                            "description": "The URL registered to receive webhooks for the Item.",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "itemId",
                          "webhook",
                          "error",
                          "availableProducts",
                          "billedProducts",
                          "consentExpirationTime",
                          "updateType"
                        ],
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Plaid ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Connection data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "/liabilities/get": {
                    "properties": {
                      "body": {
                        "additionalProperties": true,
                        "description": "An object containing liability accounts",
                        "properties": {
                          "credit": {
                            "description": "The credit accounts returned.",
                            "items": {
                              "additionalProperties": true,
                              "description": "An object representing a credit card account.",
                              "properties": {
                                "accountId": {
                                  "description": "The ID of the account that this liability belongs to.",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "aprs": {
                                  "description": "The various interest rates that apply to the account. APR information is not provided by all card issuers; if APR data is not available, this array will be empty.",
                                  "items": {
                                    "additionalProperties": true,
                                    "description": "Information about the APR on the account.",
                                    "properties": {
                                      "aprPercentage": {
                                        "description": "Annual Percentage Rate applied.\n",
                                        "format": "double",
                                        "type": "number"
                                      },
                                      "aprType": {
                                        "description": "The type of balance to which the APR applies.",
                                        "enum": [
                                          "balance_transfer_apr",
                                          "cash_apr",
                                          "purchase_apr",
                                          "special"
                                        ],
                                        "type": "string"
                                      },
                                      "balanceSubjectToApr": {
                                        "description": "Amount of money that is subjected to the APR if a balance was carried beyond payment due date. How it is calculated can vary by card issuer. It is often calculated as an average daily balance.",
                                        "format": "double",
                                        "nullable": true,
                                        "type": "number"
                                      },
                                      "interestChargeAmount": {
                                        "description": "Amount of money charged due to interest from last statement.",
                                        "format": "double",
                                        "nullable": true,
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "aprPercentage",
                                      "aprType",
                                      "balanceSubjectToApr",
                                      "interestChargeAmount"
                                    ],
                                    "title": "APR",
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "isOverdue": {
                                  "description": "true if a payment is currently overdue. Availability for this field is limited.",
                                  "nullable": true,
                                  "type": "boolean"
                                },
                                "lastPaymentAmount": {
                                  "description": "The amount of the last payment.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastPaymentDate": {
                                  "description": "The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). Availability for this field is limited.",
                                  "format": "date",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "lastStatementBalance": {
                                  "description": "The total amount owed as of the last statement issued",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastStatementIssueDate": {
                                  "description": "The date of the last statement. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).",
                                  "format": "date",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "minimumPaymentAmount": {
                                  "description": "The minimum payment due for the next billing cycle.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "nextPaymentDueDate": {
                                  "description": "The due date for the next payment. The due date is `null` if a payment is not expected. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).",
                                  "format": "date",
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "accountId",
                                "aprs",
                                "isOverdue",
                                "lastPaymentAmount",
                                "lastPaymentDate",
                                "lastStatementIssueDate",
                                "lastStatementBalance",
                                "minimumPaymentAmount",
                                "nextPaymentDueDate"
                              ],
                              "title": "CreditCardLiability",
                              "type": "object"
                            },
                            "nullable": true,
                            "type": "array"
                          },
                          "mortgage": {
                            "description": "The mortgage accounts returned.",
                            "items": {
                              "additionalProperties": true,
                              "description": "Contains details about a mortgage account.",
                              "properties": {
                                "accountId": {
                                  "description": "The ID of the account that this liability belongs to.",
                                  "type": "string"
                                },
                                "accountNumber": {
                                  "description": "The account number of the loan.",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "currentLateFee": {
                                  "description": "The current outstanding amount charged for late payment.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "escrowBalance": {
                                  "description": "Total amount held in escrow to pay taxes and insurance on behalf of the borrower.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "hasPmi": {
                                  "description": "Indicates whether the borrower has private mortgage insurance in effect.",
                                  "nullable": true,
                                  "type": "boolean"
                                },
                                "hasPrepaymentPenalty": {
                                  "description": "Indicates whether the borrower will pay a penalty for early payoff of mortgage.",
                                  "nullable": true,
                                  "type": "boolean"
                                },
                                "interestRate": {
                                  "additionalProperties": true,
                                  "description": "Object containing metadata about the interest rate for the mortgage.",
                                  "properties": {
                                    "percentage": {
                                      "description": "Percentage value (interest rate of current mortgage, not APR) of interest payable on a loan.",
                                      "format": "double",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "type": {
                                      "description": "The type of interest charged (fixed or variable).",
                                      "nullable": true,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "percentage",
                                    "type"
                                  ],
                                  "title": "MortgageInterestRate",
                                  "type": "object"
                                },
                                "lastPaymentAmount": {
                                  "description": "The amount of the last payment.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastPaymentDate": {
                                  "description": "The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).",
                                  "format": "date",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "loanTerm": {
                                  "description": "Full duration of mortgage as at origination (e.g. `10 year`).",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "loanTypeDescription": {
                                  "description": "Description of the type of loan, for example `conventional`, `fixed`, or `variable`. This field is provided directly from the loan servicer and does not have an enumerated set of possible values.",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "maturityDate": {
                                  "description": "Original date on which mortgage is due in full. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).",
                                  "format": "date",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "nextMonthlyPayment": {
                                  "description": "The amount of the next payment.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "nextPaymentDueDate": {
                                  "description": "The due date for the next payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).",
                                  "format": "date",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "originationDate": {
                                  "description": "The date on which the loan was initially lent. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).",
                                  "format": "date",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "originationPrincipalAmount": {
                                  "description": "The original principal balance of the mortgage.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "pastDueAmount": {
                                  "description": "Amount of loan (principal + interest) past due for payment.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "propertyAddress": {
                                  "additionalProperties": true,
                                  "description": "Object containing fields describing property address.",
                                  "properties": {
                                    "city": {
                                      "description": "The city name.",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "country": {
                                      "description": "The ISO 3166-1 alpha-2 country code.",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "description": "The five or nine digit postal code.",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The region or state (example \"NC\").",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "street": {
                                      "description": "The full street address (example \"564 Main Street, Apt 15\").",
                                      "nullable": true,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "city",
                                    "country",
                                    "postalCode",
                                    "region",
                                    "street"
                                  ],
                                  "title": "MortgagePropertyAddress",
                                  "type": "object"
                                },
                                "ytdInterestPaid": {
                                  "description": "The year to date (YTD) interest paid.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "ytdPrincipalPaid": {
                                  "description": "The YTD principal paid.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                }
                              },
                              "required": [
                                "accountId",
                                "accountNumber",
                                "currentLateFee",
                                "escrowBalance",
                                "hasPmi",
                                "hasPrepaymentPenalty",
                                "interestRate",
                                "lastPaymentAmount",
                                "lastPaymentDate",
                                "loanTypeDescription",
                                "loanTerm",
                                "maturityDate",
                                "nextMonthlyPayment",
                                "nextPaymentDueDate",
                                "originationDate",
                                "originationPrincipalAmount",
                                "pastDueAmount",
                                "propertyAddress",
                                "ytdInterestPaid",
                                "ytdPrincipalPaid"
                              ],
                              "title": "MortgageLiability",
                              "type": "object"
                            },
                            "nullable": true,
                            "type": "array"
                          },
                          "student": {
                            "description": "The student loan accounts returned.",
                            "items": {
                              "additionalProperties": true,
                              "description": "Contains details about a student loan account",
                              "properties": {
                                "accountId": {
                                  "description": "The ID of the account that this liability belongs to. Each account can only contain one liability.",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "accountNumber": {
                                  "description": "The account number of the loan. For some institutions, this may be a masked version of the number (e.g., the last 4 digits instead of the entire number).",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "disbursementDates": {
                                  "description": "The dates on which loaned funds were disbursed or will be disbursed. These are often in the past. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).",
                                  "items": {
                                    "format": "date",
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "expectedPayoffDate": {
                                  "description": "The date when the student loan is expected to be paid off. Availability for this field is limited. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).",
                                  "format": "date",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "guarantor": {
                                  "description": "The guarantor of the student loan.",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "interestRatePercentage": {
                                  "description": "The interest rate on the loan as a percentage.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "isOverdue": {
                                  "description": "`true` if a payment is currently overdue. Availability for this field is limited.",
                                  "nullable": true,
                                  "type": "boolean"
                                },
                                "lastPaymentAmount": {
                                  "description": "The amount of the last payment.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastPaymentDate": {
                                  "description": "The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).",
                                  "format": "date",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "lastStatementBalance": {
                                  "description": "The total amount owed as of the last statement issued",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastStatementIssueDate": {
                                  "description": "The date of the last statement. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).",
                                  "format": "date",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "loanName": {
                                  "description": "The type of loan, e.g., \"Consolidation Loans\".",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "loanStatus": {
                                  "additionalProperties": true,
                                  "description": "An object representing the status of the student loan",
                                  "properties": {
                                    "endDate": {
                                      "description": "The date until which the loan will be in its current status. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).\n",
                                      "format": "date",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The status type of the student loan",
                                      "enum": [
                                        "cancelled",
                                        "charged off",
                                        "claim",
                                        "consolidated",
                                        "deferment",
                                        "delinquent",
                                        "discharged",
                                        "extension",
                                        "forbearance",
                                        "in grace",
                                        "in military",
                                        "in school",
                                        "not fully disbursed",
                                        "other",
                                        "paid in full",
                                        "refunded",
                                        "repayment",
                                        "transferred",
                                        "pending idr"
                                      ],
                                      "nullable": true,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "endDate",
                                    "type"
                                  ],
                                  "title": "StudentLoanStatus",
                                  "type": "object"
                                },
                                "minimumPaymentAmount": {
                                  "description": "The minimum payment due for the next billing cycle. There are some exceptions:\nSome institutions require a minimum payment across all loans associated with an account number. Our API presents that same minimum payment amount on each loan. The institutions that do this are: Great Lakes ( `ins_116861`), Firstmark (`ins_116295`), Commonbond Firstmark Services (`ins_116950`), Granite State (`ins_116308`), and Oklahoma Student Loan Authority (`ins_116945`).\nFirstmark (`ins_116295` ) and Navient (`ins_116248`) will display as $0 if there is an autopay program in effect.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "nextPaymentDueDate": {
                                  "description": "The due date for the next payment. The due date is `null` if a payment is not expected. A payment is not expected if `loan_status.type` is `deferment`, `in_school`, `consolidated`, `paid in full`, or `transferred`. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).",
                                  "format": "date",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "originationDate": {
                                  "description": "The date on which the loan was initially lent. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).\n",
                                  "format": "date",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "originationPrincipalAmount": {
                                  "description": "The original principal balance of the loan.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "outstandingInterestAmount": {
                                  "description": "The total dollar amount of the accrued interest balance. For Sallie Mae ( `ins_116944`), this amount is included in the current balance of the loan, so this field will return as `null`.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "paymentReferenceNumber": {
                                  "description": "The relevant account number that should be used to reference this loan for payments. In the majority of cases, `payment_reference_number` will match `account_number,` but in some institutions, such as Great Lakes (`ins_116861`), it will be different.",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pslfStatus": {
                                  "additionalProperties": true,
                                  "deprecated": true,
                                  "description": "Information about the student's eligibility in the Public Service Loan Forgiveness program. This is only returned if the institution is FedLoan (`ins_116527`). Since FedLoan no longer services student loans, this field is no longer returned. ",
                                  "properties": {
                                    "estimatedEligibilityDate": {
                                      "description": "The estimated date borrower will have completed 120 qualifying monthly payments. Returned in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).",
                                      "format": "date",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "paymentsMade": {
                                      "description": "The number of qualifying payments that have been made.",
                                      "nullable": true,
                                      "type": "integer"
                                    },
                                    "paymentsRemaining": {
                                      "description": "The number of qualifying payments remaining.",
                                      "nullable": true,
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "estimatedEligibilityDate",
                                    "paymentsMade",
                                    "paymentsRemaining"
                                  ],
                                  "title": "PSLFStatus",
                                  "type": "object",
                                  "x-hidden-from-docs": true
                                },
                                "repaymentPlan": {
                                  "additionalProperties": true,
                                  "description": "An object representing the repayment plan for the student loan",
                                  "properties": {
                                    "description": {
                                      "description": "The description of the repayment plan as provided by the servicer.",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of the repayment plan.",
                                      "enum": [
                                        "extended graduated",
                                        "extended standard",
                                        "graduated",
                                        "income-contingent repayment",
                                        "income-based repayment",
                                        "income-sensitive repayment",
                                        "interest-only",
                                        "other",
                                        "pay as you earn",
                                        "revised pay as you earn",
                                        "standard",
                                        "saving on a valuable education",
                                        null
                                      ],
                                      "nullable": true,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "description",
                                    "type"
                                  ],
                                  "title": "StudentRepaymentPlan",
                                  "type": "object"
                                },
                                "sequenceNumber": {
                                  "description": "The sequence number of the student loan. Heartland ECSI (`ins_116948`) does not make this field available.",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "servicerAddress": {
                                  "additionalProperties": true,
                                  "description": "The address of the student loan servicer. This is generally the remittance address to which payments should be sent.",
                                  "properties": {
                                    "city": {
                                      "description": "The full city name",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "country": {
                                      "description": "The ISO 3166-1 alpha-2 country code",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "postalCode": {
                                      "description": "The postal code",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The region or state\nExample: `\"NC\"`",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "street": {
                                      "description": "The full street address\nExample: `\"564 Main Street, APT 15\"`",
                                      "nullable": true,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "city",
                                    "region",
                                    "street",
                                    "postalCode",
                                    "country"
                                  ],
                                  "title": "ServicerAddressData",
                                  "type": "object"
                                },
                                "ytdInterestPaid": {
                                  "description": "The year to date (YTD) interest paid. Availability for this field is limited.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "ytdPrincipalPaid": {
                                  "description": "The year to date (YTD) principal paid. Availability for this field is limited.",
                                  "format": "double",
                                  "nullable": true,
                                  "type": "number"
                                }
                              },
                              "required": [
                                "accountId",
                                "accountNumber",
                                "disbursementDates",
                                "expectedPayoffDate",
                                "guarantor",
                                "interestRatePercentage",
                                "isOverdue",
                                "lastPaymentAmount",
                                "lastPaymentDate",
                                "lastStatementIssueDate",
                                "loanName",
                                "loanStatus",
                                "minimumPaymentAmount",
                                "nextPaymentDueDate",
                                "originationDate",
                                "originationPrincipalAmount",
                                "outstandingInterestAmount",
                                "paymentReferenceNumber",
                                "pslfStatus",
                                "repaymentPlan",
                                "sequenceNumber",
                                "servicerAddress",
                                "ytdInterestPaid",
                                "ytdPrincipalPaid"
                              ],
                              "title": "StudentLoan",
                              "type": "object"
                            },
                            "nullable": true,
                            "type": "array"
                          }
                        },
                        "required": [
                          "credit",
                          "mortgage",
                          "student"
                        ],
                        "title": "LiabilitiesObject",
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Plaid ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Connection data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemotePlaidTransaction": {
        "type": "object",
        "description": "Remote Data about the Transaction.",
        "title": "RemotePlaidTransaction",
        "required": [
          "transactionId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "The ID of the Transaction.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Transaction ID",
            "example": "txn_11VgTOO9DR1vbAZxb6zBLdb"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "PLAID"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "{environment}.plaid.com": {
                "minProperties": 1,
                "properties": {
                  "/investments/securities/get": {
                    "properties": {
                      "body": {
                        "additionalProperties": true,
                        "description": "Contains details about a security",
                        "properties": {
                          "closePrice": {
                            "description": "Price of the security at the close of the previous trading session. Null for non-public securities.\n\nIf the security is a foreign currency this field will be updated daily and will be priced in USD.\n\nIf the security is a cryptocurrency, this field will be updated multiple times a day. As crypto prices can fluctuate quickly and data may become stale sooner than other asset classes, refer to `update_datetime` with the time when the price was last updated.\n",
                            "format": "double",
                            "nullable": true,
                            "type": "number"
                          },
                          "closePriceAsOf": {
                            "description": "Date for which `close_price` is accurate. Always `null` if `close_price` is `null`.",
                            "format": "date",
                            "nullable": true,
                            "type": "string"
                          },
                          "cusip": {
                            "description": "9-character CUSIP, an identifier assigned to North American securities. A verified CUSIP Global Services license is required to receive this data. This field will be null by default for new customers, and null for existing customers starting March 12, 2024. If you would like access to this field, please start the verification process [here](https://docs.google.com/forms/d/e/1FAIpQLSd9asHEYEfmf8fxJTHZTAfAzW4dugsnSu-HS2J51f1mxwd6Sw/viewform).",
                            "nullable": true,
                            "type": "string"
                          },
                          "fixedIncome": {
                            "additionalProperties": true,
                            "description": "Details about the fixed income security.",
                            "nullable": true,
                            "properties": {
                              "faceValue": {
                                "description": "The face value that is paid upon maturity of the fixed income security, per unit of security.",
                                "format": "double",
                                "nullable": true,
                                "type": "number"
                              },
                              "issueDate": {
                                "description": "The issue date for this fixed income security, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                                "format": "date",
                                "nullable": true,
                                "type": "string"
                              },
                              "maturityDate": {
                                "description": "The maturity date for this fixed income security, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                                "format": "date",
                                "nullable": true,
                                "type": "string"
                              },
                              "yieldRate": {
                                "additionalProperties": true,
                                "description": "Details about a fixed income security's expected rate of return.",
                                "nullable": true,
                                "properties": {
                                  "percentage": {
                                    "description": "The fixed income security's expected rate of return.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "The type of rate which indicates how the predicted yield was calculated. It is one of:\n\n`coupon`: the annualized interest rate for securities with a one-year term or longer, such as treasury notes and bonds.\n\n`coupon_equivalent`: the calculated equivalent for the annualized interest rate factoring in the discount rate and time to maturity, for shorter term, non-interest-bearing securities such as treasury bills.\n\n`discount`: the rate at which the present value or cost is discounted from the future value upon maturity, also known as the face value.\n\n`yield`: the total predicted rate of return factoring in both the discount rate and the coupon rate, applicable to securities such as exchange-traded bonds which can both be interest-bearing as well as sold at a discount off its face value.",
                                    "enum": [
                                      "coupon",
                                      "coupon_equivalent",
                                      "discount",
                                      "yield",
                                      null
                                    ],
                                    "nullable": true,
                                    "title": "YieldRateType",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "percentage",
                                  "type"
                                ],
                                "title": "YieldRate",
                                "type": "object"
                              }
                            },
                            "required": [
                              "yieldRate",
                              "maturityDate",
                              "issueDate",
                              "faceValue"
                            ],
                            "title": "FixedIncome",
                            "type": "object"
                          },
                          "industry": {
                            "description": "The industry classification of the security, such as Biotechnology, Airlines, etc.\n\nFor a complete list of possible values, please refer to the [\"Sectors and Industries\" spreadsheet](https://docs.google.com/spreadsheets/d/1L7aXUdqLhxgM8qe7hK67qqKXiUdQqILpwZ0LpxvCVnc).",
                            "nullable": true,
                            "type": "string"
                          },
                          "institutionId": {
                            "description": "If `institution_security_id` is present, this field indicates the Plaid `institution_id` of the institution to whom the identifier belongs.",
                            "nullable": true,
                            "type": "string"
                          },
                          "institutionSecurityId": {
                            "description": "An identifier given to the security by the institution",
                            "nullable": true,
                            "type": "string"
                          },
                          "isCashEquivalent": {
                            "description": "Indicates that a security is a highly liquid asset and can be treated like cash.",
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isin": {
                            "description": "12-character ISIN, a globally unique securities identifier. A verified CUSIP Global Services license is required to receive this data. This field will be null by default for new customers, and null for existing customers starting March 12, 2024. If you would like access to this field, please start the verification process [here](https://docs.google.com/forms/d/e/1FAIpQLSd9asHEYEfmf8fxJTHZTAfAzW4dugsnSu-HS2J51f1mxwd6Sw/viewform).",
                            "nullable": true,
                            "type": "string"
                          },
                          "isoCurrencyCode": {
                            "description": "The ISO-4217 currency code of the price given. Always `null` if `unofficial_currency_code` is non-`null`.",
                            "nullable": true,
                            "type": "string"
                          },
                          "marketIdentifierCode": {
                            "description": "The ISO-10383 Market Identifier Code of the exchange or market in which the security is being traded.",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "A descriptive name for the security, suitable for display.",
                            "nullable": true,
                            "type": "string"
                          },
                          "optionContract": {
                            "additionalProperties": true,
                            "description": "Details about the option security.\n\nFor the Sandbox environment, this data is currently only available if the Item is using a [custom Sandbox user](https://plaid.com/docs/sandbox/user-custom/) and the `ticker` field of the custom security follows the [OCC Option Symbol](https://en.wikipedia.org/wiki/Option_symbol#The_OCC_Option_Symbol) standard with no spaces. For an example of simulating this in Sandbox, see the [custom Sandbox GitHub](https://github.com/plaid/sandbox-custom-users).",
                            "nullable": true,
                            "properties": {
                              "contractType": {
                                "description": "The type of this option contract. It is one of:\n\n`put`: for Put option contracts\n\n`call`: for Call option contracts",
                                "type": "string"
                              },
                              "expirationDate": {
                                "description": "The expiration date for this option contract, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                                "format": "date",
                                "type": "string"
                              },
                              "strikePrice": {
                                "description": "The strike price for this option contract, per share of security.",
                                "format": "double",
                                "type": "number"
                              },
                              "underlyingSecurityTicker": {
                                "description": "The ticker of the underlying security for this option contract.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "contractType",
                              "expirationDate",
                              "strikePrice",
                              "underlyingSecurityTicker"
                            ],
                            "title": "OptionContract",
                            "type": "object"
                          },
                          "proxySecurityId": {
                            "description": "In certain cases, Plaid will provide the ID of another security whose performance resembles this security, typically when the original security has low volume, or when a private security can be modeled with a publicly traded security.",
                            "nullable": true,
                            "type": "string"
                          },
                          "sector": {
                            "description": "The sector classification of the security, such as Finance, Health Technology, etc.\n\nFor a complete list of possible values, please refer to the [\"Sectors and Industries\" spreadsheet](https://docs.google.com/spreadsheets/d/1L7aXUdqLhxgM8qe7hK67qqKXiUdQqILpwZ0LpxvCVnc).",
                            "nullable": true,
                            "type": "string"
                          },
                          "securityId": {
                            "description": "A unique, Plaid-specific identifier for the security, used to associate securities with holdings. Like all Plaid identifiers, the `security_id` is case sensitive. The `security_id` may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.",
                            "type": "string"
                          },
                          "sedol": {
                            "description": "7-character SEDOL, an identifier assigned to securities in the UK.",
                            "nullable": true,
                            "type": "string"
                          },
                          "tickerSymbol": {
                            "description": "The security’s trading symbol for publicly traded securities, and otherwise a short identifier if available.",
                            "nullable": true,
                            "type": "string"
                          },
                          "type": {
                            "description": "The security type of the holding.\n\nIn rare instances, a null value is returned when institutional data is insufficient to determine the security type.\n\nValid security types are:\n\n`cash`: Cash, currency, and money market funds\n\n`cryptocurrency`: Digital or virtual currencies\n\n`derivative`: Options, warrants, and other derivative instruments\n\n`equity`: Domestic and foreign equities\n\n`etf`: Multi-asset exchange-traded investment funds\n\n`fixed income`: Bonds and certificates of deposit (CDs)\n\n`loan`: Loans and loan receivables\n\n`mutual fund`: Open- and closed-end vehicles pooling funds of multiple investors\n\n`other`: Unknown or other investment types",
                            "nullable": true,
                            "type": "string"
                          },
                          "unofficialCurrencyCode": {
                            "description": "The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.\n\nSee the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.",
                            "nullable": true,
                            "type": "string"
                          },
                          "updateDatetime": {
                            "description": "Date and time at which `close_price` is accurate, in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ). Always `null` if `close_price` is `null`.",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "cusip",
                          "sedol",
                          "isin",
                          "institutionSecurityId",
                          "institutionId",
                          "proxySecurityId",
                          "name",
                          "tickerSymbol",
                          "isCashEquivalent",
                          "closePrice",
                          "closePriceAsOf",
                          "isoCurrencyCode",
                          "unofficialCurrencyCode",
                          "securityId",
                          "type",
                          "marketIdentifierCode",
                          "sector",
                          "industry",
                          "optionContract",
                          "fixedIncome"
                        ],
                        "title": "Security",
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Plaid ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Transaction data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "/investments/transactions/get": {
                    "properties": {
                      "body": {
                        "additionalProperties": true,
                        "description": "A transaction within an investment account.",
                        "properties": {
                          "accountId": {
                            "description": "The `account_id` of the account against which this transaction posted.",
                            "type": "string"
                          },
                          "amount": {
                            "description": "The complete value of the transaction. Positive values when cash is debited, e.g. purchases of stock; negative values when cash is credited, e.g. sales of stock. Treatment remains the same for cash-only movements unassociated with securities.",
                            "format": "double",
                            "type": "number"
                          },
                          "date": {
                            "description": "The [ISO 8601](https://wikipedia.org/wiki/ISO_8601) posting date for the transaction.",
                            "format": "date",
                            "type": "string"
                          },
                          "fees": {
                            "description": "The combined value of all fees applied to this transaction",
                            "format": "double",
                            "nullable": true,
                            "type": "number"
                          },
                          "investmentTransactionId": {
                            "description": "The ID of the Investment transaction, unique across all Plaid transactions. Like all Plaid identifiers, the `investment_transaction_id` is case sensitive.",
                            "type": "string"
                          },
                          "isoCurrencyCode": {
                            "description": "The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-`null`.",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "The institution’s description of the transaction.",
                            "type": "string"
                          },
                          "price": {
                            "description": "The price of the security at which this transaction occurred.",
                            "format": "double",
                            "type": "number"
                          },
                          "quantity": {
                            "description": "The number of units of the security involved in this transaction. Positive for buy transactions; negative for sell transactions.",
                            "format": "double",
                            "type": "number"
                          },
                          "securityId": {
                            "description": "The `security_id` to which this transaction is related.",
                            "nullable": true,
                            "type": "string"
                          },
                          "subtype": {
                            "description": "For descriptions of possible transaction types and subtypes, see the [Investment transaction types schema](https://plaid.com/docs/api/accounts/#investment-transaction-types-schema).",
                            "enum": [
                              "account fee",
                              "adjustment",
                              "assignment",
                              "buy",
                              "buy to cover",
                              "contribution",
                              "deposit",
                              "distribution",
                              "dividend",
                              "dividend reinvestment",
                              "exercise",
                              "expire",
                              "fund fee",
                              "interest",
                              "interest receivable",
                              "interest reinvestment",
                              "legal fee",
                              "loan payment",
                              "long-term capital gain",
                              "long-term capital gain reinvestment",
                              "management fee",
                              "margin expense",
                              "merger",
                              "miscellaneous fee",
                              "non-qualified dividend",
                              "non-resident tax",
                              "pending credit",
                              "pending debit",
                              "qualified dividend",
                              "rebalance",
                              "return of principal",
                              "request",
                              "sell",
                              "sell short",
                              "send",
                              "short-term capital gain",
                              "short-term capital gain reinvestment",
                              "spin off",
                              "split",
                              "stock distribution",
                              "tax",
                              "tax withheld",
                              "trade",
                              "transfer",
                              "transfer fee",
                              "trust fee",
                              "unqualified gain",
                              "withdrawal"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "description": "Value is one of the following:\n`buy`: Buying an investment\n`sell`: Selling an investment\n`cancel`: A cancellation of a pending transaction\n`cash`: Activity that modifies a cash position\n`fee`: A fee on the account\n`transfer`: Activity which modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer\n\nFor descriptions of possible transaction types and subtypes, see the [Investment transaction types schema](https://plaid.com/docs/api/accounts/#investment-transaction-types-schema).",
                            "enum": [
                              "buy",
                              "sell",
                              "cancel",
                              "cash",
                              "fee",
                              "transfer"
                            ],
                            "type": "string"
                          },
                          "unofficialCurrencyCode": {
                            "description": "The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.\n\nSee the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "investmentTransactionId",
                          "accountId",
                          "securityId",
                          "date",
                          "name",
                          "quantity",
                          "amount",
                          "price",
                          "fees",
                          "type",
                          "subtype",
                          "isoCurrencyCode",
                          "unofficialCurrencyCode"
                        ],
                        "title": "InvestmentTransaction",
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Plaid ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Transaction data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "/transactions/get": {
                    "properties": {
                      "body": {
                        "additionalProperties": true,
                        "description": "A representation of a transaction",
                        "properties": {
                          "accountId": {
                            "description": "The ID of the account in which this transaction occurred.",
                            "type": "string"
                          },
                          "accountOwner": {
                            "description": "This field is not typically populated and only relevant when dealing with sub-accounts. A sub-account most commonly exists in cases where a single account is linked to multiple cards, each with its own card number and card holder name; each card will be considered a sub-account. If the account does have sub-accounts, this field will typically be some combination of the sub-account owner's name and/or the sub-account mask. The format of this field is not standardized and will vary based on institution.",
                            "nullable": true,
                            "type": "string"
                          },
                          "amount": {
                            "description": "The settled value of the transaction, denominated in the transactions's currency, as stated in `iso_currency_code` or `unofficial_currency_code`. For all products except Income: Positive values when money moves out of the account; negative values when money moves in. For example, debit card purchases are positive; credit card payments, direct deposits, and refunds are negative. For Income endpoints, values are positive when representing income.",
                            "format": "double",
                            "type": "number"
                          },
                          "authorizedDate": {
                            "description": "The date that the transaction was authorized. For posted transactions, the `date` field will indicate the posted date, but `authorized_date` will indicate the day the transaction was authorized by the financial institution. If presenting transactions to the user in a UI, the `authorized_date`, when available, is generally preferable to use over the `date` field for posted transactions, as it will generally represent the date the user actually made the transaction. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ).",
                            "format": "date",
                            "nullable": true,
                            "type": "string"
                          },
                          "authorizedDatetime": {
                            "description": "Date and time when a transaction was authorized in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ). For posted transactions, the `datetime` field will indicate the posted date, but `authorized_datetime` will indicate the day the transaction was authorized by the financial institution. If presenting transactions to the user in a UI, the `authorized_datetime`, when available, is generally preferable to use over the `datetime` field for posted transactions, as it will generally represent the date the user actually made the transaction.\n\nThis field is returned for select financial institutions and comes as provided by the institution. It may contain default time values (such as 00:00:00). This field is only populated in API version 2019-05-29 and later.",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "checkNumber": {
                            "description": "The check number of the transaction. This field is only populated for check transactions.",
                            "nullable": true,
                            "type": "string"
                          },
                          "counterparties": {
                            "description": "The counterparties present in the transaction. Counterparties, such as the merchant or the financial institution, are extracted by Plaid from the raw description.",
                            "items": {
                              "additionalProperties": true,
                              "description": "The counterparty, such as the merchant or financial institution, is extracted by Plaid from the raw description.",
                              "properties": {
                                "confidenceLevel": {
                                  "description": "A description of how confident we are that the provided counterparty is involved in the transaction.\n\n`VERY_HIGH`: We recognize this counterparty and we are more than 98% confident that it is involved in this transaction.\n`HIGH`: We recognize this counterparty and we are more than 90% confident that it is involved in this transaction.\n`MEDIUM`: We are moderately confident that this counterparty was involved in this transaction, but some details may differ from our records.\n`LOW`: We didn’t find a matching counterparty in our records, so we are returning a cleansed name parsed out of the request description.\n`UNKNOWN`: We don’t know the confidence level for this counterparty.",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "A unique, stable, Plaid-generated ID that maps to the counterparty.",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "logoUrl": {
                                  "description": "The URL of a logo associated with the counterparty, if available. The logo will always be 100×100 pixel PNG file.",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The counterparty type.\n\n`merchant`: a provider of goods or services for purchase\n`financial_institution`: a financial entity (bank, credit union, BNPL, fintech)\n`payment_app`: a transfer or P2P app (e.g. Zelle)\n`marketplace`: a marketplace (e.g DoorDash, Google Play Store)\n`payment_terminal`: a point-of-sale payment terminal (e.g Square, Toast)\n`income_source`: the payer in an income transaction (e.g., an employer, client, or government agency)",
                                  "enum": [
                                    "merchant",
                                    "financial_institution",
                                    "payment_app",
                                    "marketplace",
                                    "payment_terminal",
                                    "income_source"
                                  ],
                                  "title": "CounterpartyType",
                                  "type": "string"
                                },
                                "website": {
                                  "description": "The website associated with the counterparty.",
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "type",
                                "logoUrl",
                                "website"
                              ],
                              "title": "Counterparty",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "date": {
                            "description": "For pending transactions, the date that the transaction occurred; for posted transactions, the date that the transaction posted. Both dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DD` ). To receive information about the date that a posted transaction was initiated, see the `authorized_date` field.",
                            "format": "date",
                            "type": "string"
                          },
                          "datetime": {
                            "description": "Date and time when a transaction was posted in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ). For the date that the transaction was initiated, rather than posted, see the `authorized_datetime` field.\n\nThis field is returned for select financial institutions and comes as provided by the institution. It may contain default time values (such as 00:00:00). This field is only populated in API version 2019-05-29 and later.",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "isoCurrencyCode": {
                            "description": "The ISO-4217 currency code of the transaction. Always `null` if `unofficial_currency_code` is non-null.",
                            "nullable": true,
                            "type": "string"
                          },
                          "location": {
                            "additionalProperties": true,
                            "description": "A representation of where a transaction took place",
                            "properties": {
                              "address": {
                                "description": "The street address where the transaction occurred.",
                                "nullable": true,
                                "type": "string"
                              },
                              "city": {
                                "description": "The city where the transaction occurred.",
                                "nullable": true,
                                "type": "string"
                              },
                              "country": {
                                "description": "The ISO 3166-1 alpha-2 country code where the transaction occurred.",
                                "nullable": true,
                                "type": "string"
                              },
                              "lat": {
                                "description": "The latitude where the transaction occurred.",
                                "format": "double",
                                "nullable": true,
                                "type": "number"
                              },
                              "lon": {
                                "description": "The longitude where the transaction occurred.",
                                "format": "double",
                                "nullable": true,
                                "type": "number"
                              },
                              "postalCode": {
                                "description": "The postal code where the transaction occurred. In API versions 2018-05-22 and earlier, this field is called `zip`.",
                                "nullable": true,
                                "type": "string"
                              },
                              "region": {
                                "description": "The region or state where the transaction occurred. In API versions 2018-05-22 and earlier, this field is called `state`.",
                                "nullable": true,
                                "type": "string"
                              },
                              "storeNumber": {
                                "description": "The merchant defined store number where the transaction occurred.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "address",
                              "city",
                              "region",
                              "postalCode",
                              "country",
                              "lat",
                              "lon",
                              "storeNumber"
                            ],
                            "title": "Transaction Location",
                            "type": "object"
                          },
                          "logoUrl": {
                            "description": "The URL of a logo associated with this transaction, if available. The logo will always be 100×100 pixel PNG file.",
                            "nullable": true,
                            "type": "string"
                          },
                          "merchantEntityId": {
                            "description": "A unique, stable, Plaid-generated ID that maps to the merchant. In the case of a merchant with multiple retail locations, this field will map to the broader merchant, not a specific location or store.",
                            "nullable": true,
                            "type": "string"
                          },
                          "merchantName": {
                            "description": "The merchant name, as enriched by Plaid from the `name` field. This is typically a more human-readable version of the merchant counterparty in the transaction. For some bank transactions (such as checks or account transfers) where there is no meaningful merchant name, this value will be `null`.",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "The merchant name or transaction description.\n\nNote: This is a legacy field that is not actively maintained. Use `merchant_name` instead for the merchant name.\n\nIf the `transactions` object was returned by a Transactions endpoint such as `/transactions/sync` or `/transactions/get`, this field will always appear. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.",
                            "type": "string"
                          },
                          "originalDescription": {
                            "description": "The string returned by the financial institution to describe the transaction. For transactions returned by `/transactions/sync` or `/transactions/get`, this field will only be included if the client has set `options.include_original_description` to `true`.",
                            "nullable": true,
                            "type": "string"
                          },
                          "paymentChannel": {
                            "description": "The channel used to make a payment.\n`online:` transactions that took place online.\n\n`in store:` transactions that were made at a physical location.\n\n`other:` transactions that relate to banks, e.g. fees or deposits.\n\nThis field replaces the `transaction_type` field.\n",
                            "enum": [
                              "online",
                              "in store",
                              "other"
                            ],
                            "type": "string"
                          },
                          "paymentMeta": {
                            "additionalProperties": true,
                            "description": "Transaction information specific to inter-bank transfers. If the transaction was not an inter-bank transfer, all fields will be `null`.\n\nIf the `transactions` object was returned by a Transactions endpoint such as `/transactions/sync` or `/transactions/get`, the `payment_meta` key will always appear, but no data elements are guaranteed. If the `transactions` object was returned by an Assets endpoint such as `/asset_report/get/` or `/asset_report/pdf/get`, this field will only appear in an Asset Report with Insights.",
                            "properties": {
                              "byOrderOf": {
                                "description": "The party initiating a wire transfer. Will be `null` if the transaction is not a wire transfer.",
                                "nullable": true,
                                "type": "string"
                              },
                              "payee": {
                                "description": "For transfers, the party that is receiving the transaction.",
                                "nullable": true,
                                "type": "string"
                              },
                              "payer": {
                                "description": "For transfers, the party that is paying the transaction.",
                                "nullable": true,
                                "type": "string"
                              },
                              "paymentMethod": {
                                "description": "The type of transfer, e.g. 'ACH'",
                                "nullable": true,
                                "type": "string"
                              },
                              "paymentProcessor": {
                                "description": "The name of the payment processor",
                                "nullable": true,
                                "type": "string"
                              },
                              "ppdId": {
                                "description": "The ACH PPD ID for the payer.",
                                "nullable": true,
                                "type": "string"
                              },
                              "reason": {
                                "description": "The payer-supplied description of the transfer.",
                                "nullable": true,
                                "type": "string"
                              },
                              "referenceNumber": {
                                "description": "The transaction reference number supplied by the financial institution.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "referenceNumber",
                              "ppdId",
                              "payee",
                              "byOrderOf",
                              "payer",
                              "paymentMethod",
                              "paymentProcessor",
                              "reason"
                            ],
                            "title": "PaymentMeta",
                            "type": "object"
                          },
                          "pending": {
                            "description": "When `true`, identifies the transaction as pending or unsettled. Pending transaction details (name, type, amount, category ID) may change before they are settled. Not all institutions provide pending transactions.",
                            "type": "boolean"
                          },
                          "pendingTransactionId": {
                            "description": "The ID of a posted transaction's associated pending transaction, where applicable. Not all institutions provide pending transactions.",
                            "nullable": true,
                            "type": "string"
                          },
                          "personalFinanceCategory": {
                            "additionalProperties": true,
                            "description": "Information describing the intent of the transaction. Most relevant for personal finance use cases, but not limited to such use cases.\n\nSee the [`taxonomy CSV file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories. If you are migrating to personal finance categories from the legacy categories, also refer to the [`migration guide`](https://plaid.com/docs/transactions/pfc-migration/).",
                            "nullable": true,
                            "properties": {
                              "confidenceLevel": {
                                "description": "A description of how confident we are that the provided categories accurately describe the transaction intent.\n\n`VERY_HIGH`: We are more than 98% confident that this category reflects the intent of the transaction.\n`HIGH`: We are more than 90% confident that this category reflects the intent of the transaction.\n`MEDIUM`: We are moderately confident that this category reflects the intent of the transaction.\n`LOW`: This category may reflect the intent, but there may be other categories that are more accurate.\n`UNKNOWN`: We don’t know the confidence level for this category.",
                                "nullable": true,
                                "type": "string"
                              },
                              "detailed": {
                                "description": "A granular category conveying the transaction's intent. This field can also be used as a unique identifier for the category.",
                                "type": "string"
                              },
                              "primary": {
                                "description": "A high level category that communicates the broad category of the transaction.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "primary",
                              "detailed"
                            ],
                            "title": "PersonalFinanceCategory",
                            "type": "object"
                          },
                          "personalFinanceCategoryIconUrl": {
                            "description": "The URL of an icon associated with the primary personal finance category. The icon will always be 100×100 pixel PNG file.",
                            "type": "string"
                          },
                          "transactionCode": {
                            "description": "An identifier classifying the transaction type.\n\nThis field is only populated for European institutions. For institutions in the US and Canada, this field is set to `null`.\n\n`adjustment:` Bank adjustment\n\n`atm:` Cash deposit or withdrawal via an automated teller machine\n\n`bank charge:` Charge or fee levied by the institution\n\n`bill payment`: Payment of a bill\n\n`cash:` Cash deposit or withdrawal\n\n`cashback:` Cash withdrawal while making a debit card purchase\n\n`cheque:` Document ordering the payment of money to another person or organization\n\n`direct debit:` Automatic withdrawal of funds initiated by a third party at a regular interval\n\n`interest:` Interest earned or incurred\n\n`purchase:` Purchase made with a debit or credit card\n\n`standing order:` Payment instructed by the account holder to a third party at a regular interval\n\n`transfer:` Transfer of money between accounts",
                            "enum": [
                              "adjustment",
                              "atm",
                              "bank charge",
                              "bill payment",
                              "cash",
                              "cashback",
                              "cheque",
                              "direct debit",
                              "interest",
                              "purchase",
                              "standing order",
                              "transfer",
                              null
                            ],
                            "nullable": true,
                            "title": "transaction_code",
                            "type": "string"
                          },
                          "transactionId": {
                            "description": "The unique ID of the transaction. Like all Plaid identifiers, the `transaction_id` is case sensitive.",
                            "type": "string"
                          },
                          "transactionType": {
                            "deprecated": true,
                            "description": "Please use the `payment_channel` field, `transaction_type` will be deprecated in the future.\n\n`digital:` transactions that took place online.\n\n`place:` transactions that were made at a physical location.\n\n`special:` transactions that relate to banks, e.g. fees or deposits.\n\n`unresolved:` transactions that do not fit into the other three types.\n",
                            "enum": [
                              "digital",
                              "place",
                              "special",
                              "unresolved"
                            ],
                            "type": "string"
                          },
                          "unofficialCurrencyCode": {
                            "description": "The unofficial currency code associated with the transaction. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.\n\nSee the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.",
                            "nullable": true,
                            "type": "string"
                          },
                          "website": {
                            "description": "The website associated with this transaction, if available.",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "accountOwner",
                          "pendingTransactionId",
                          "paymentChannel",
                          "paymentMeta",
                          "name",
                          "location",
                          "authorizedDate",
                          "authorizedDatetime",
                          "datetime",
                          "transactionCode"
                        ],
                        "title": "Transaction",
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Plaid ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Transaction data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RemotePlaidHolding": {
        "type": "object",
        "description": "Remote Data about the Holding.",
        "title": "RemotePlaidHolding",
        "required": [
          "holdingId",
          "profileId",
          "type",
          "documents"
        ],
        "properties": {
          "holdingId": {
            "type": "string",
            "description": "The ID of the Holding.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Holding ID",
            "example": "hld_12Hz9Dz7vEvM9AuljYvhmPc"
          },
          "profileId": {
            "type": "string",
            "description": "The ID of the Profile.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Profile ID",
            "example": "p_1hyoxpVVFib1HngGwKAzIr"
          },
          "type": {
            "type": "string",
            "description": "The type of Remote data",
            "enum": [
              "PLAID"
            ],
            "readOnly": true
          },
          "documents": {
            "type": "object",
            "description": "The Remote Data organized by server and endpoint.",
            "minProperties": 1,
            "readOnly": true,
            "properties": {
              "{environment}.plaid.com": {
                "minProperties": 1,
                "properties": {
                  "/investments/holdings/get": {
                    "properties": {
                      "body": {
                        "additionalProperties": true,
                        "description": "A securities holding at an institution.",
                        "properties": {
                          "accountId": {
                            "description": "The Plaid `account_id` associated with the holding.",
                            "type": "string"
                          },
                          "costBasis": {
                            "description": "The total cost basis of the holding (e.g., the total amount spent to acquire all assets currently in the holding).",
                            "format": "double",
                            "nullable": true,
                            "type": "number"
                          },
                          "institutionPrice": {
                            "description": "The last price given by the institution for this security.",
                            "format": "double",
                            "type": "number"
                          },
                          "institutionPriceAsOf": {
                            "description": "The date at which `institution_price` was current.",
                            "format": "date",
                            "nullable": true,
                            "type": "string"
                          },
                          "institutionPriceDatetime": {
                            "description": "Date and time at which `institution_price` was current, in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ).\n\nThis field is returned for select financial institutions and comes as provided by the institution. It may contain default time values (such as 00:00:00).\n",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "institutionValue": {
                            "description": "The value of the holding, as reported by the institution.",
                            "format": "double",
                            "type": "number"
                          },
                          "isoCurrencyCode": {
                            "description": "The ISO-4217 currency code of the holding. Always `null` if `unofficial_currency_code` is non-`null`.",
                            "nullable": true,
                            "type": "string"
                          },
                          "quantity": {
                            "description": "The total quantity of the asset held, as reported by the financial institution. If the security is an option, `quantity` will reflect the total number of options (typically the number of contracts multiplied by 100), not the number of contracts.",
                            "format": "double",
                            "type": "number"
                          },
                          "securityId": {
                            "description": "The Plaid `security_id` associated with the holding. Security data is not specific to a user's account; any user who held the same security at the same financial institution at the same time would have identical security data. The `security_id` for the same security will typically be the same across different institutions, but this is not guaranteed. The `security_id` does not typically change, but may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.",
                            "type": "string"
                          },
                          "unofficialCurrencyCode": {
                            "description": "The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.\n\nSee the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.\n",
                            "nullable": true,
                            "type": "string"
                          },
                          "vestedQuantity": {
                            "description": "The total quantity of vested assets held, as reported by the financial institution. Vested assets are only associated with [equities](https://plaid.com/docs/api/products/investments/#investments-holdings-get-response-securities-type).",
                            "format": "double",
                            "nullable": true,
                            "type": "number"
                          },
                          "vestedValue": {
                            "description": "The value of the vested holdings as reported by the institution.",
                            "format": "double",
                            "nullable": true,
                            "type": "number"
                          }
                        },
                        "required": [
                          "accountId",
                          "securityId",
                          "institutionPrice",
                          "institutionValue",
                          "costBasis",
                          "quantity",
                          "isoCurrencyCode",
                          "unofficialCurrencyCode"
                        ],
                        "title": "Holding",
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Plaid ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Holding data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "/investments/securities/get": {
                    "properties": {
                      "body": {
                        "additionalProperties": true,
                        "description": "Contains details about a security",
                        "properties": {
                          "closePrice": {
                            "description": "Price of the security at the close of the previous trading session. Null for non-public securities.\n\nIf the security is a foreign currency this field will be updated daily and will be priced in USD.\n\nIf the security is a cryptocurrency, this field will be updated multiple times a day. As crypto prices can fluctuate quickly and data may become stale sooner than other asset classes, refer to `update_datetime` with the time when the price was last updated.\n",
                            "format": "double",
                            "nullable": true,
                            "type": "number"
                          },
                          "closePriceAsOf": {
                            "description": "Date for which `close_price` is accurate. Always `null` if `close_price` is `null`.",
                            "format": "date",
                            "nullable": true,
                            "type": "string"
                          },
                          "cusip": {
                            "description": "9-character CUSIP, an identifier assigned to North American securities. A verified CUSIP Global Services license is required to receive this data. This field will be null by default for new customers, and null for existing customers starting March 12, 2024. If you would like access to this field, please start the verification process [here](https://docs.google.com/forms/d/e/1FAIpQLSd9asHEYEfmf8fxJTHZTAfAzW4dugsnSu-HS2J51f1mxwd6Sw/viewform).",
                            "nullable": true,
                            "type": "string"
                          },
                          "fixedIncome": {
                            "additionalProperties": true,
                            "description": "Details about the fixed income security.",
                            "nullable": true,
                            "properties": {
                              "faceValue": {
                                "description": "The face value that is paid upon maturity of the fixed income security, per unit of security.",
                                "format": "double",
                                "nullable": true,
                                "type": "number"
                              },
                              "issueDate": {
                                "description": "The issue date for this fixed income security, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                                "format": "date",
                                "nullable": true,
                                "type": "string"
                              },
                              "maturityDate": {
                                "description": "The maturity date for this fixed income security, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                                "format": "date",
                                "nullable": true,
                                "type": "string"
                              },
                              "yieldRate": {
                                "additionalProperties": true,
                                "description": "Details about a fixed income security's expected rate of return.",
                                "nullable": true,
                                "properties": {
                                  "percentage": {
                                    "description": "The fixed income security's expected rate of return.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "type": {
                                    "description": "The type of rate which indicates how the predicted yield was calculated. It is one of:\n\n`coupon`: the annualized interest rate for securities with a one-year term or longer, such as treasury notes and bonds.\n\n`coupon_equivalent`: the calculated equivalent for the annualized interest rate factoring in the discount rate and time to maturity, for shorter term, non-interest-bearing securities such as treasury bills.\n\n`discount`: the rate at which the present value or cost is discounted from the future value upon maturity, also known as the face value.\n\n`yield`: the total predicted rate of return factoring in both the discount rate and the coupon rate, applicable to securities such as exchange-traded bonds which can both be interest-bearing as well as sold at a discount off its face value.",
                                    "enum": [
                                      "coupon",
                                      "coupon_equivalent",
                                      "discount",
                                      "yield",
                                      null
                                    ],
                                    "nullable": true,
                                    "title": "YieldRateType",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "percentage",
                                  "type"
                                ],
                                "title": "YieldRate",
                                "type": "object"
                              }
                            },
                            "required": [
                              "yieldRate",
                              "maturityDate",
                              "issueDate",
                              "faceValue"
                            ],
                            "title": "FixedIncome",
                            "type": "object"
                          },
                          "industry": {
                            "description": "The industry classification of the security, such as Biotechnology, Airlines, etc.\n\nFor a complete list of possible values, please refer to the [\"Sectors and Industries\" spreadsheet](https://docs.google.com/spreadsheets/d/1L7aXUdqLhxgM8qe7hK67qqKXiUdQqILpwZ0LpxvCVnc).",
                            "nullable": true,
                            "type": "string"
                          },
                          "institutionId": {
                            "description": "If `institution_security_id` is present, this field indicates the Plaid `institution_id` of the institution to whom the identifier belongs.",
                            "nullable": true,
                            "type": "string"
                          },
                          "institutionSecurityId": {
                            "description": "An identifier given to the security by the institution",
                            "nullable": true,
                            "type": "string"
                          },
                          "isCashEquivalent": {
                            "description": "Indicates that a security is a highly liquid asset and can be treated like cash.",
                            "nullable": true,
                            "type": "boolean"
                          },
                          "isin": {
                            "description": "12-character ISIN, a globally unique securities identifier. A verified CUSIP Global Services license is required to receive this data. This field will be null by default for new customers, and null for existing customers starting March 12, 2024. If you would like access to this field, please start the verification process [here](https://docs.google.com/forms/d/e/1FAIpQLSd9asHEYEfmf8fxJTHZTAfAzW4dugsnSu-HS2J51f1mxwd6Sw/viewform).",
                            "nullable": true,
                            "type": "string"
                          },
                          "isoCurrencyCode": {
                            "description": "The ISO-4217 currency code of the price given. Always `null` if `unofficial_currency_code` is non-`null`.",
                            "nullable": true,
                            "type": "string"
                          },
                          "marketIdentifierCode": {
                            "description": "The ISO-10383 Market Identifier Code of the exchange or market in which the security is being traded.",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "A descriptive name for the security, suitable for display.",
                            "nullable": true,
                            "type": "string"
                          },
                          "optionContract": {
                            "additionalProperties": true,
                            "description": "Details about the option security.\n\nFor the Sandbox environment, this data is currently only available if the Item is using a [custom Sandbox user](https://plaid.com/docs/sandbox/user-custom/) and the `ticker` field of the custom security follows the [OCC Option Symbol](https://en.wikipedia.org/wiki/Option_symbol#The_OCC_Option_Symbol) standard with no spaces. For an example of simulating this in Sandbox, see the [custom Sandbox GitHub](https://github.com/plaid/sandbox-custom-users).",
                            "nullable": true,
                            "properties": {
                              "contractType": {
                                "description": "The type of this option contract. It is one of:\n\n`put`: for Put option contracts\n\n`call`: for Call option contracts",
                                "type": "string"
                              },
                              "expirationDate": {
                                "description": "The expiration date for this option contract, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                                "format": "date",
                                "type": "string"
                              },
                              "strikePrice": {
                                "description": "The strike price for this option contract, per share of security.",
                                "format": "double",
                                "type": "number"
                              },
                              "underlyingSecurityTicker": {
                                "description": "The ticker of the underlying security for this option contract.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "contractType",
                              "expirationDate",
                              "strikePrice",
                              "underlyingSecurityTicker"
                            ],
                            "title": "OptionContract",
                            "type": "object"
                          },
                          "proxySecurityId": {
                            "description": "In certain cases, Plaid will provide the ID of another security whose performance resembles this security, typically when the original security has low volume, or when a private security can be modeled with a publicly traded security.",
                            "nullable": true,
                            "type": "string"
                          },
                          "sector": {
                            "description": "The sector classification of the security, such as Finance, Health Technology, etc.\n\nFor a complete list of possible values, please refer to the [\"Sectors and Industries\" spreadsheet](https://docs.google.com/spreadsheets/d/1L7aXUdqLhxgM8qe7hK67qqKXiUdQqILpwZ0LpxvCVnc).",
                            "nullable": true,
                            "type": "string"
                          },
                          "securityId": {
                            "description": "A unique, Plaid-specific identifier for the security, used to associate securities with holdings. Like all Plaid identifiers, the `security_id` is case sensitive. The `security_id` may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.",
                            "type": "string"
                          },
                          "sedol": {
                            "description": "7-character SEDOL, an identifier assigned to securities in the UK.",
                            "nullable": true,
                            "type": "string"
                          },
                          "tickerSymbol": {
                            "description": "The security’s trading symbol for publicly traded securities, and otherwise a short identifier if available.",
                            "nullable": true,
                            "type": "string"
                          },
                          "type": {
                            "description": "The security type of the holding.\n\nIn rare instances, a null value is returned when institutional data is insufficient to determine the security type.\n\nValid security types are:\n\n`cash`: Cash, currency, and money market funds\n\n`cryptocurrency`: Digital or virtual currencies\n\n`derivative`: Options, warrants, and other derivative instruments\n\n`equity`: Domestic and foreign equities\n\n`etf`: Multi-asset exchange-traded investment funds\n\n`fixed income`: Bonds and certificates of deposit (CDs)\n\n`loan`: Loans and loan receivables\n\n`mutual fund`: Open- and closed-end vehicles pooling funds of multiple investors\n\n`other`: Unknown or other investment types",
                            "nullable": true,
                            "type": "string"
                          },
                          "unofficialCurrencyCode": {
                            "description": "The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.\n\nSee the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.",
                            "nullable": true,
                            "type": "string"
                          },
                          "updateDatetime": {
                            "description": "Date and time at which `close_price` is accurate, in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ). Always `null` if `close_price` is `null`.",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "cusip",
                          "sedol",
                          "isin",
                          "institutionSecurityId",
                          "institutionId",
                          "proxySecurityId",
                          "name",
                          "tickerSymbol",
                          "isCashEquivalent",
                          "closePrice",
                          "closePriceAsOf",
                          "isoCurrencyCode",
                          "unofficialCurrencyCode",
                          "securityId",
                          "type",
                          "marketIdentifierCode",
                          "sector",
                          "industry",
                          "optionContract",
                          "fixedIncome"
                        ],
                        "title": "Security",
                        "type": "object"
                      },
                      "id": {
                        "description": "The record's Plaid ID",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "The ID of the request for debugging purposes",
                        "type": "string"
                      },
                      "timestamp": {
                        "description": "The UTC date and time when the Holding data was retrieved, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
                        "example": "2023-10-12T23:55:59Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "readOnly": true,
                "type": "object"
              }
            }
          }
        }
      },
      "RestError": {
        "type": "object",
        "description": "A generic error with troubleshooting instructions.\n\nReturned with all `4xx` or `5xx` HTTP status codes, except `422` errors on some REST endpoints.",
        "title": "RestError",
        "required": [
          "message",
          "instruction"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "A high-level description of the error.",
            "readOnly": true
          },
          "instruction": {
            "type": "string",
            "description": "A helpful message to troubleshoot what went wrong.",
            "readOnly": true
          },
          "errorId": {
            "type": "string",
            "description": "The unique ID associated with a `5xx` server error, used for troubleshooting.",
            "readOnly": true
          }
        }
      },
      "ValidationErrors": {
        "type": "object",
        "description": "One or more correctable errors encountered when attempting to create or update a record.\n\nReturned with a `422` HTTP status code.",
        "minProperties": 1,
        "title": "ValidationErrors",
        "additionalProperties": {
          "type": "array",
          "description": "The field that has a validation error",
          "minItems": 1,
          "items": {
            "type": "string",
            "description": "The error message",
            "example": "is not available"
          }
        }
      },
      "AccountEvent": {
        "type": "object",
        "description": "An Account Event represents a change pertaining to an Account for one of your Profiles\n\n- `account.created` fires whenever a new Account is registered on a Profile.\n- `account.verified` fires whenever an Account has been verified for money movement.\n- `account.reconnected` fires whenever an existing Account has been associated with a new Connection.\n  This can occur when you reconnect to an Institution you had previously connected.",
        "title": "AccountEvent",
        "required": [
          "id",
          "at",
          "type",
          "profile",
          "record"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Event.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Event ID",
            "example": "evt_12sDfIGkY96vVvNvTqNfn9"
          },
          "at": {
            "type": "string",
            "description": "The timestamp of when the Event occurred, in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "description": "The type of Account Event that occurred.",
            "enum": [
              "account.created",
              "account.verified",
              "account.reconnected"
            ],
            "readOnly": true,
            "example": "account.verified"
          },
          "profile": {
            "allOf": [
              {
                "type": "object",
                "description": "The basic Profile information associated with the Event.",
                "readOnly": true,
                "title": "ProfileBase"
              },
              {
                "$ref": "#/components/schemas/ProfileBase"
              }
            ]
          },
          "record": {
            "allOf": [
              {
                "type": "object",
                "description": "The Account associated with the Event.",
                "readOnly": true
              },
              {
                "$ref": "#/components/schemas/Account"
              }
            ]
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Additional context associated with certain Event types. Currently the following types expose context via `metadata`:\n\n- `connection.synced.successful` events provide a `startDate` and `endDate` indicating\n  the date range successfully synced for the Connection.\n\n- `profile.ready` events provides a `startDate`, `endDate` and optionally a `connectionId`\n  indicating the scope of data updated on the Profile.",
            "readOnly": true,
            "example": {
              "startDate": "2024-10-24",
              "endDate": "2025-01-24"
            }
          }
        }
      },
      "BalanceEvent": {
        "type": "object",
        "description": "A Balance Event represents a change pertaining to a Balance in your Quiltt Environment.\n\n- `balance.created` fires whenever a new Balance is created in your Environment.",
        "title": "BalanceEvent",
        "required": [
          "id",
          "at",
          "type",
          "profile",
          "record"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Event.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Event ID",
            "example": "evt_12sDfIGkY96vVvNvTqNfn9"
          },
          "at": {
            "type": "string",
            "description": "The timestamp of when the Event occurred, in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "description": "The type of Balance Event that occurred.",
            "enum": [
              "balance.created"
            ],
            "readOnly": true,
            "example": "balance.created"
          },
          "profile": {
            "allOf": [
              {
                "type": "object",
                "description": "The basic Profile information associated with the Event.",
                "readOnly": true,
                "title": "ProfileBase"
              },
              {
                "$ref": "#/components/schemas/ProfileBase"
              }
            ]
          },
          "record": {
            "allOf": [
              {
                "type": "object",
                "description": "The Balance associated with the Event.",
                "readOnly": true
              },
              {
                "$ref": "#/components/schemas/Balance"
              }
            ]
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Additional context associated with certain Event types. Currently the following types expose context via `metadata`:\n\n- `connection.synced.successful` events provide a `startDate` and `endDate` indicating\n  the date range successfully synced for the Connection.\n\n- `profile.ready` events provides a `startDate`, `endDate` and optionally a `connectionId`\n  indicating the scope of data updated on the Profile.",
            "readOnly": true,
            "example": {
              "startDate": "2024-10-24",
              "endDate": "2025-01-24"
            }
          }
        }
      },
      "StatementEvent": {
        "type": "object",
        "description": "A Statement Event represents a change pertaining to a Statement in your Quiltt Environment.\n\n- `statement.created` fires when a new Statement has been saved.\n- `statement.ready` fires when a Statement has been enriched with date period metadata.",
        "title": "StatementEvent",
        "required": [
          "id",
          "at",
          "type",
          "profile",
          "record"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Event.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Event ID",
            "example": "evt_12sDfIGkY96vVvNvTqNfn9"
          },
          "at": {
            "type": "string",
            "description": "The timestamp of when the Event occurred, in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "description": "The type of Statement Event that occurred.",
            "enum": [
              "statement.created",
              "statement.ready"
            ],
            "readOnly": true,
            "example": "statement.ready"
          },
          "profile": {
            "allOf": [
              {
                "type": "object",
                "description": "The basic Profile information associated with the Event.",
                "readOnly": true,
                "title": "ProfileBase"
              },
              {
                "$ref": "#/components/schemas/ProfileBase"
              }
            ]
          },
          "record": {
            "allOf": [
              {
                "type": "object",
                "description": "The Statement associated with the Event.",
                "readOnly": true
              },
              {
                "$ref": "#/components/schemas/Statement"
              }
            ]
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Additional context associated with certain Event types. Currently the following types expose context via `metadata`:\n\n- `connection.synced.successful` events provide a `startDate` and `endDate` indicating\n  the date range successfully synced for the Connection.\n\n- `profile.ready` events provides a `startDate`, `endDate` and optionally a `connectionId`\n  indicating the scope of data updated on the Profile.",
            "readOnly": true,
            "example": {
              "startDate": "2024-10-24",
              "endDate": "2025-01-24"
            }
          }
        }
      },
      "ConnectionEvent": {
        "type": "object",
        "description": "A Connection Event represents a change pertaining to a Connection on one of your Profiles.\n\n- `connection.created` fires whenever a new Connection is created on a Profile. Note that it is highly\n  recommended that you use the Connector `onExitSuccess` callback to track new Connections being created.\n- `connection.synced.successful` fires whenever a Connection is successfully synced with the provider.\n  This event will include `metadata` object describing the `startDate`, `endDate` and\n  optionally a `connectionId` indicating the scope of data updated on the Connection. For most use-cases\n  we recommend using the `profile.ready` event which fires after enrichment has been completed on the\n  newly synced data.\n- `connection.synced.successful.historical` fires whenever a deep historical sync is completed\n  on a Connection and usually fires once shortly after the Connection is created and only if\n  Quiltt was able to obtain deep history.\n- `connection.disconnected` fires whenever a Connection has been been fully disconnected from the provider.\n  You can pass  the Reconnect Flow to re-establish a Connection.\n- `connection.synced.errored.repairable` fires when a Connection enters an `ERROR_REPAIRABLE` state and\n  needs to be re-authenticated to resume syncing. Have the user complete the Connector [Reconnect flow](https://quiltt.dev/connector/reconnect) to resolve this error.\n- `connection.synced.errored.service` fires when an unexpected error occurs attempting to sync the Connection.\n  Visit our [Status page](https://status.quiltt.io) or contact Quiltt Support for more information.\n- `connection.synced.errored.provider` fires when the Connection provider is reporting an error with the Connection.\n  Inspect the Connection's [Remote Data](https://quiltt.dev/api/remote-data) for more information.\n- `connection.synced.errored.institution` fires when the provider is reporting an error with the connected Institution.",
        "title": "ConnectionEvent",
        "required": [
          "id",
          "at",
          "type",
          "profile",
          "record"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Event.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Event ID",
            "example": "evt_12sDfIGkY96vVvNvTqNfn9"
          },
          "at": {
            "type": "string",
            "description": "The timestamp of when the Event occurred, in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "description": "The type of Connection Event that occurred.",
            "enum": [
              "connection.created",
              "connection.disconnected",
              "connection.synced.successful",
              "connection.synced.successful.historical",
              "connection.synced.errored.repairable",
              "connection.synced.errored.service",
              "connection.synced.errored.provider",
              "connection.synced.errored.institution"
            ],
            "readOnly": true,
            "example": "connection.synced.successful"
          },
          "profile": {
            "allOf": [
              {
                "type": "object",
                "description": "The basic Profile information associated with the Event.",
                "readOnly": true,
                "title": "ProfileBase"
              },
              {
                "$ref": "#/components/schemas/ProfileBase"
              }
            ]
          },
          "record": {
            "allOf": [
              {
                "type": "object",
                "description": "The Connection associated with the Event.",
                "readOnly": true
              },
              {
                "$ref": "#/components/schemas/Connection"
              }
            ]
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Additional context associated with certain Event types. Currently the following types expose context via `metadata`:\n\n- `connection.synced.successful` events provide a `startDate` and `endDate` indicating\n  the date range successfully synced for the Connection.\n\n- `profile.ready` events provides a `startDate`, `endDate` and optionally a `connectionId`\n  indicating the scope of data updated on the Profile.",
            "readOnly": true,
            "example": {
              "startDate": "2024-10-24",
              "endDate": "2025-01-24"
            }
          }
        }
      },
      "ProfileEvent": {
        "type": "object",
        "description": "A Profile Event represents a change pertaining to a Profile in your Quiltt Environment.\n\n- `profile.created` fires whenever a new Profile is created in your Environment.\n- `profile.deleted` fires whenever a Profile had been fully deleted from your Environment.\n- `profile.ready` fires whenever all Enrichment workflows have finished.\n  This event will include `metadata` object describing the `startDate`, `endDate` and\n  optionally a `connectionId` indicating the scope of data updated on the Profile.",
        "title": "ProfileEvent",
        "required": [
          "id",
          "at",
          "type",
          "profile",
          "record"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Event.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Event ID",
            "example": "evt_12sDfIGkY96vVvNvTqNfn9"
          },
          "at": {
            "type": "string",
            "description": "The timestamp of when the Event occurred, in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "description": "The type of Profile Event that occurred.",
            "enum": [
              "profile.created",
              "profile.ready",
              "profile.deleted"
            ],
            "readOnly": true,
            "example": "profile.ready"
          },
          "profile": {
            "allOf": [
              {
                "type": "object",
                "description": "The basic Profile information associated with the Event.",
                "readOnly": true,
                "title": "ProfileBase"
              },
              {
                "$ref": "#/components/schemas/ProfileBase"
              }
            ]
          },
          "record": {
            "allOf": [
              {
                "type": "object",
                "description": "The Profile associated with the Event.",
                "readOnly": true
              },
              {
                "$ref": "#/components/schemas/Profile"
              }
            ]
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Additional context associated with certain Event types. Currently the following types expose context via `metadata`:\n\n- `connection.synced.successful` events provide a `startDate` and `endDate` indicating\n  the date range successfully synced for the Connection.\n\n- `profile.ready` events provides a `startDate`, `endDate` and optionally a `connectionId`\n  indicating the scope of data updated on the Profile.",
            "readOnly": true,
            "example": {
              "startDate": "2024-10-24",
              "endDate": "2025-01-24"
            }
          }
        }
      },
      "WebhookSubscription": {
        "type": "object",
        "description": "A Webhook Subscription represents the configuration of your webhook.\n\nYou can subscribe to one or more Event types. When the subscribed events occur in the Quiltt system,\nthe `targetUrl` will receive a Webhook Payload with the triggered Events.",
        "title": "WebhookSubscription",
        "required": [
          "id",
          "eventTypes",
          "name",
          "targetUrl",
          "disabled",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Webhook Subscription.",
            "format": "global_id-v1",
            "readOnly": true,
            "title": "Webhook Subscription ID",
            "example": "wh_1RzYpUO7vVjcPkQLucrEV1"
          },
          "eventTypes": {
            "type": "array",
            "description": "The list of subscribed Event types. Note that parent scopes like `connection` will include\nchild Events like `connection.created`, `connection.synced.successful`, etc.",
            "minItems": 1,
            "items": {
              "type": "string",
              "enum": [
                "profile",
                "profile.created",
                "profile.ready",
                "profile.deleted",
                "connection",
                "connection.created",
                "connection.disconnected",
                "connection.synced",
                "connection.synced.successful",
                "connection.synced.successful.historical",
                "connection.synced.errored",
                "connection.synced.errored.repairable",
                "connection.synced.errored.service",
                "connection.synced.errored.provider",
                "connection.synced.errored.institution",
                "account",
                "account.created",
                "account.verified",
                "account.reconnected",
                "balance",
                "balance.created",
                "statement",
                "statement.created",
                "statement.ready",
                "charge.execute"
              ]
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the Webhook Subscription."
          },
          "targetUrl": {
            "type": "string",
            "description": "The URL that will receive the Webhook Payloads.",
            "format": "uri",
            "example": "https://example.com/webhooks/quiltt"
          },
          "disabled": {
            "type": "boolean",
            "description": "Specifies whether the Webhook Subscription is disabled.",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "description": "The UTC date and time when the Webhook Subscription was created, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
            "format": "date-time",
            "readOnly": true,
            "example": "2023-10-12T23:55:59Z"
          },
          "updatedAt": {
            "type": "string",
            "deprecated": true,
            "description": "The UTC date and time when the Webhook Subscription was last updated, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.",
            "format": "date-time",
            "readOnly": true,
            "example": "2023-10-12T23:55:59Z"
          }
        }
      },
      "WebhookSubscriptionCreateRequest": {
        "type": "object",
        "description": "Options to create a Webhook Subscription",
        "title": "WebhookSubscriptionCreateRequest",
        "required": [
          "name",
          "targetUrl",
          "eventTypes"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Webhook Subscription."
          },
          "targetUrl": {
            "type": "string",
            "description": "The URL that will receive the Webhook Payloads.",
            "format": "uri",
            "example": "https://example.com/webhooks/quiltt"
          },
          "eventTypes": {
            "type": "array",
            "description": "The list of subscribed Event types. Note that parent scopes like `connection` will include\nchild Events like `connection.created`, `connection.synced.successful`, etc.",
            "minItems": 1,
            "items": {
              "type": "string",
              "enum": [
                "profile",
                "profile.created",
                "profile.ready",
                "profile.deleted",
                "connection",
                "connection.created",
                "connection.disconnected",
                "connection.synced",
                "connection.synced.successful",
                "connection.synced.successful.historical",
                "connection.synced.errored",
                "connection.synced.errored.repairable",
                "connection.synced.errored.service",
                "connection.synced.errored.provider",
                "connection.synced.errored.institution",
                "account",
                "account.created",
                "account.verified",
                "account.reconnected",
                "balance",
                "balance.created",
                "statement",
                "statement.created",
                "statement.ready",
                "charge.execute"
              ]
            }
          },
          "disabled": {
            "type": "boolean",
            "description": "Specifies whether the Webhook Subscription is disabled.",
            "example": false
          }
        }
      },
      "WebhookSubscriptionUpdateRequest": {
        "type": "object",
        "description": "Options to update a Webhook Subscription",
        "title": "WebhookSubscriptionUpdateRequest",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Webhook Subscription."
          },
          "targetUrl": {
            "type": "string",
            "description": "The URL that will receive the Webhook Payloads.",
            "format": "uri",
            "example": "https://example.com/webhooks/quiltt"
          },
          "eventTypes": {
            "type": "array",
            "description": "The list of subscribed Event types. Note that parent scopes like `connection` will include\nchild Events like `connection.created`, `connection.synced.successful`, etc.",
            "minItems": 1,
            "items": {
              "type": "string",
              "enum": [
                "profile",
                "profile.created",
                "profile.ready",
                "profile.deleted",
                "connection",
                "connection.created",
                "connection.disconnected",
                "connection.synced",
                "connection.synced.successful",
                "connection.synced.successful.historical",
                "connection.synced.errored",
                "connection.synced.errored.repairable",
                "connection.synced.errored.service",
                "connection.synced.errored.provider",
                "connection.synced.errored.institution",
                "account",
                "account.created",
                "account.verified",
                "account.reconnected",
                "balance",
                "balance.created",
                "statement",
                "statement.created",
                "statement.ready",
                "charge.execute"
              ]
            }
          },
          "disabled": {
            "type": "boolean",
            "description": "Specifies whether the Webhook Subscription is disabled.",
            "example": false
          }
        }
      },
      "WebhookPayload": {
        "type": "object",
        "description": "A Webhook Payload represents the object that the Quiltt system will deliver to your Subscription's `targetUrl`, and will include one of more Events.",
        "title": "WebhookPayload",
        "required": [
          "environment",
          "eventTypes",
          "events"
        ],
        "properties": {
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "eventTypes": {
            "type": "array",
            "description": "The types of events included in the Payload.",
            "readOnly": true,
            "minItems": 1,
            "items": {
              "type": "string",
              "enum": [
                "connection.created",
                "connection.disconnected",
                "connection.synced.successful",
                "connection.synced.successful.historical",
                "connection.synced.errored.repairable",
                "connection.synced.errored.service",
                "connection.synced.errored.provider",
                "connection.synced.errored.institution",
                "account.created",
                "account.verified",
                "account.reconnected",
                "balance.created",
                "statement.created",
                "statement.ready",
                "profile.created",
                "profile.ready",
                "profile.deleted"
              ],
              "readOnly": true
            }
          },
          "events": {
            "type": "array",
            "description": "The events included in this Payload.",
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ConnectionEvent"
                },
                {
                  "$ref": "#/components/schemas/AccountEvent"
                },
                {
                  "$ref": "#/components/schemas/BalanceEvent"
                },
                {
                  "$ref": "#/components/schemas/StatementEvent"
                },
                {
                  "$ref": "#/components/schemas/ProfileEvent"
                }
              ]
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "APISecretBearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Account Numbers",
      "description": "Securely interact with verified account numbers to support money movement operations.\n\n### ACH Numbers Schema\nACH Numbers represents the data used to perform money movement operations with a specific Account.\n\nYour end-user must complete an Account Numbers session through the Connector to obtain this data.\n<SchemaDefinition schemaRef=\"#/components/schemas/ACHNumbers\" />\n"
    },
    {
      "name": "Balances",
      "description": "Trigger a real-time balance check for an account.\n\nNote that this API call is usually billable in production.\n\n### Balance Schema\nRepresents an Account Balance.\n<SchemaDefinition schemaRef=\"#/components/schemas/Balance\" />\n"
    },
    {
      "name": "Connections",
      "description": "Import existing Connections from your system into your Quiltt Environment.\n\nYou can interact with a Connections using the GraphQL API.\n\n### Connection Schema\nA Connection represents the data source for a Profile's accounts and transactions, such as a Plaid **Item** or MX **member**.\n\nThe easiest way to register connections is with the Quiltt Connector, which handles the configuration for Plaid Link and MX Connect.\n<SchemaDefinition schemaRef=\"#/components/schemas/Connection\" />\n"
    },
    {
      "name": "Processor Tokens",
      "description": "Securely integrate with 3rd parties by generating Processor Tokens for a given account.\n\n### ProcessorToken Schema\nA Processor Token allows you to authorize a 3rd party payment or data processor to interact with an Account.\n<SchemaDefinition schemaRef=\"#/components/schemas/ProcessorToken\" />\n"
    },
    {
      "name": "Profiles",
      "description": "Administer the Profiles in your environment.\n\n### Profile Schema\nA Profile represents an entity with data in a Quiltt Environment, typically a physical person or company end-user of your application.\n<SchemaDefinition schemaRef=\"#/components/schemas/Profile\" />\n"
    },
    {
      "name": "Statements",
      "description": "[BETA] Please note that manual Statement refreshes are only supported for MX Connections and this product\nis likely to change in the future.\n"
    },
    {
      "name": "FinGoal",
      "description": "Access raw and unmodified data from FinGoal, scoped to corresponding Quiltt records.\n"
    },
    {
      "name": "MX",
      "description": "Access raw and unmodified data from MX, scoped to corresponding Quiltt records.\n"
    },
    {
      "name": "Pave",
      "description": "Access raw and unmodified data from Pave, scoped to corresponding Quiltt records.\n"
    },
    {
      "name": "Plaid",
      "description": "Access raw and unmodified data from Plaid, scoped to corresponding Quiltt records.\n"
    },
    {
      "name": "Subscriptions",
      "description": "Subscribe to events related to your Profiles and their associated resources like Accounts and Connections.\n\n### WebhookSubscription Schema\nA Webhook Subscription represents the configuration of your webhook.\n\nYou can subscribe to one or more Event types. When the subscribed events occur in the Quiltt system,\nthe `targetUrl` will receive a Webhook Payload with the triggered Events.\n<SchemaDefinition schemaRef=\"#/components/schemas/WebhookSubscription\" />\n"
    },
    {
      "name": "Event Schemas",
      "description": "## WebhookPayload Schema\nA Webhook Payload represents the object that the Quiltt system will deliver to your Subscription's `targetUrl`, and will include one of more Events.\n<SchemaDefinition schemaRef=\"#/components/schemas/WebhookPayload\" />\n\n## ConnectionEvent Schema\nA Connection Event represents a change pertaining to a Connection on one of your Profiles.\n\n- `connection.created` fires whenever a new Connection is created on a Profile. Note that it is highly\n  recommended that you use the Connector `onExitSuccess` callback to track new Connections being created.\n- `connection.synced.successful` fires whenever a Connection is successfully synced with the provider.\n  This event will include `metadata` object describing the `startDate`, `endDate` and\n  optionally a `connectionId` indicating the scope of data updated on the Connection. For most use-cases\n  we recommend using the `profile.ready` event which fires after enrichment has been completed on the\n  newly synced data.\n- `connection.synced.successful.historical` fires whenever a deep historical sync is completed\n  on a Connection and usually fires once shortly after the Connection is created and only if\n  Quiltt was able to obtain deep history.\n- `connection.disconnected` fires whenever a Connection has been been fully disconnected from the provider.\n  You can pass  the Reconnect Flow to re-establish a Connection.\n- `connection.synced.errored.repairable` fires when a Connection enters an `ERROR_REPAIRABLE` state and\n  needs to be re-authenticated to resume syncing. Have the user complete the Connector [Reconnect flow](https://quiltt.dev/connector/reconnect) to resolve this error.\n- `connection.synced.errored.service` fires when an unexpected error occurs attempting to sync the Connection.\n  Visit our [Status page](https://status.quiltt.io) or contact Quiltt Support for more information.\n- `connection.synced.errored.provider` fires when the Connection provider is reporting an error with the Connection.\n  Inspect the Connection's [Remote Data](https://quiltt.dev/api/remote-data) for more information.\n- `connection.synced.errored.institution` fires when the provider is reporting an error with the connected Institution.\n<SchemaDefinition schemaRef=\"#/components/schemas/ConnectionEvent\" />\n\n## AccountEvent Schema\nAn Account Event represents a change pertaining to an Account for one of your Profiles\n\n- `account.created` fires whenever a new Account is registered on a Profile.\n- `account.verified` fires whenever an Account has been verified for money movement.\n- `account.reconnected` fires whenever an existing Account has been associated with a new Connection.\n  This can occur when you reconnect to an Institution you had previously connected.\n<SchemaDefinition schemaRef=\"#/components/schemas/AccountEvent\" />\n\n## BalanceEvent Schema\nA Balance Event represents a change pertaining to a Balance in your Quiltt Environment.\n\n- `balance.created` fires whenever a new Balance is created in your Environment.\n<SchemaDefinition schemaRef=\"#/components/schemas/BalanceEvent\" />\n\n## ProfileEvent Schema\nA Profile Event represents a change pertaining to a Profile in your Quiltt Environment.\n\n- `profile.created` fires whenever a new Profile is created in your Environment.\n- `profile.deleted` fires whenever a Profile had been fully deleted from your Environment.\n- `profile.ready` fires whenever all Enrichment workflows have finished.\n  This event will include `metadata` object describing the `startDate`, `endDate` and\n  optionally a `connectionId` indicating the scope of data updated on the Profile.\n<SchemaDefinition schemaRef=\"#/components/schemas/ProfileEvent\" />\n"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Core Endpoints",
      "tags": [
        "Account Numbers",
        "Balances",
        "Connections",
        "Processor Tokens",
        "Profiles",
        "Statements",
        "Institutions"
      ]
    },
    {
      "name": "Remote Data Endpoints",
      "tags": [
        "Enrichment",
        "Akoya",
        "Fingoal",
        "MX",
        "Ntropy",
        "Pave",
        "Plaid"
      ]
    },
    {
      "name": "Webhooks",
      "tags": [
        "Subscriptions",
        "Event Schemas"
      ]
    }
  ]
}